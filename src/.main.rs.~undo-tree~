(undo-tree-save-format-version . 1)
"7577e11a8aa683e8df66b134091f16308f726c4a"
[nil nil nil nil (25245 63073 394754 300000) 0 nil]
([nil nil ((#("j" 0 1 (fontified t)) . -217) (undo-tree-id16 . -1) (203 . 218) (202 . 203) (#("f" 0 1 (fontified t)) . -202) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (#("
" 0 1 (fontified t)) . -203) (undo-tree-id19 . -1) (undo-tree-id20 . 1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) 204 (#("	" 0 1 (fontified t)) . -204) (undo-tree-id23 . -1) (undo-tree-id24 . -1) 205 (203 . 205) (202 . 203) (201 . 202) (t 25245 28233 910448 700000)) nil (25245 63073 394748 600000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -221) (undo-tree-id11 . -1) (221 . 222) (#("	" 0 1 (fontified nil)) . -220) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (221 . 222) (220 . 221) (#("	" 0 1 (fontified nil)) . 219) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (218 . 221) (217 . 218)) nil (25245 63073 394716 900000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 219) (undo-tree-id10 . 1)) nil (25245 63073 394711 500000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -233) (undo-tree-id9 . -1) (220 . 234) (218 . 220)) nil (25245 63073 394709 500000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -235) (undo-tree-id2 . -1) (235 . 236) (233 . 235) (#(" " 0 1 (fontified t)) . -233) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (#("=" 0 1 (fontified t)) . -234) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (#(" " 0 1 (fontified t)) . -235) (undo-tree-id7 . -1) (undo-tree-id8 . -1) 236 (233 . 236)) nil (25245 63073 394706 300000) 0 nil])
([nil nil ((#("use std::io::{Write, stdin, stdout};
" 0 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t) 4 7 (fontified t face font-lock-constant-face) 7 9 (fontified t) 9 11 (fontified t face font-lock-constant-face) 11 14 (fontified t) 14 19 (fontified t face font-lock-type-face) 19 37 (fontified t)) . 116) (undo-tree-id0 . -18) (undo-tree-id1 . -18) 134) nil (25245 63073 394697 500000) 0 nil])
([nil nil ((1 . 38)) nil (25245 63073 394680 200000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -38) (undo-tree-id25 . -1) (38 . 39) (38 . 39) (t 25245 63073 389467 0)) nil (25245 63075 915566 300000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -50) (undo-tree-id26 . -1) (40 . 51) (38 . 40) (37 . 38) (t 25245 63075 909467 0)) nil (25245 63080 298227 300000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -269) (undo-tree-id32 . -1) (267 . 270) (249 . 267) (t 25245 63080 299467 0)) nil (25245 63099 373298 400000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -270) (undo-tree-id28 . -1) (270 . 271) (#("J" 0 1 (fontified t face font-lock-type-face)) . -270) (undo-tree-id29 . -1) (#("k" 0 1 (fontified t face font-lock-type-face)) . -271) (undo-tree-id30 . -1) (#("i" 0 1 (fontified t face font-lock-type-face)) . -272) (undo-tree-id31 . -1) 273 (268 . 273)) nil (25245 63099 373294 300000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-string-face)) . -278) (undo-tree-id27 . -1) (269 . 279)) nil (25245 63099 373285 200000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -281) (undo-tree-id33 . -1) (280 . 282) (t 25245 63099 369467 0)) nil (25245 63100 245732 400000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -289) (undo-tree-id36 . -1) (280 . 290) (t 25245 63100 239467 0)) nil (25245 63110 601487 400000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -290) (undo-tree-id35 . -1) (288 . 291)) nil (25245 63110 601484 300000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-string-face)) . -308) (undo-tree-id34 . -1) (304 . 309) (289 . 304)) nil (25245 63110 601478 400000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -322) (undo-tree-id43 . -1) (313 . 323) (311 . 313) (t 25245 63110 599467 0)) nil (25245 63121 255724 300000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -321) (undo-tree-id42 . -1) (320 . 322)) nil (25245 63121 255722 500000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -323) (undo-tree-id41 . -1) (323 . 324) 320) nil (25245 63121 255720 600000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -324) (undo-tree-id40 . -1) (322 . 325)) nil (25245 63121 255704 900000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-string-face)) . -325) (undo-tree-id39 . -1) (323 . 326)) nil (25245 63121 255703 200000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -327) (undo-tree-id38 . -1) (327 . 328) 324) nil (25245 63121 255700 800000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -336) (undo-tree-id37 . -1) (328 . 337) (326 . 328)) nil (25245 63121 255696 500000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -338) (undo-tree-id44 . -1) (337 . 339) (t 25245 63121 259467 0)) nil (25245 63122 45611 100000) 0 nil])
([nil nil ((apply -120 1404 2787 undo--wrap-and-run-primitive-undo 1404 2787 ((2745 . 2748) (2698 . 2701) (2657 . 2660) (2618 . 2621) (2611 . 2614) (2585 . 2588) (2555 . 2558) (2548 . 2551) (2534 . 2537) (2436 . 2439) (2427 . 2430) (2418 . 2421) (2385 . 2388) (2345 . 2348) (2285 . 2288) (2276 . 2279) (2258 . 2261) (2219 . 2222) (2181 . 2184) (2172 . 2175) (2163 . 2166) (2130 . 2133) (2090 . 2093) (2052 . 2055) (2043 . 2046) (2034 . 2037) (2001 . 2004) (1935 . 1938) (1897 . 1900) (1854 . 1857) (1831 . 1834) (1801 . 1804) (1744 . 1747) (1719 . 1722) (1693 . 1696) (1633 . 1636) (1574 . 1577) (1515 . 1518) (1456 . 1459) (1405 . 1408) 1404)) (t 25245 63122 39467 0)) nil (25245 63140 838431 300000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -1413) (undo-tree-id52 . -1) (1405 . 1414) (#("r" 0 1 (fontified t)) . -1405) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (#("o" 0 1 (fontified t)) . -1406) (undo-tree-id55 . -1) (undo-tree-id56 . -1) 1407 (1405 . 1407) (#("c" 0 1 (fontified t)) . -1405) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (#("o" 0 1 (fontified t)) . -1406) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (#("n" 0 1 (fontified t)) . -1407) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (#("s" 0 1 (fontified t)) . -1408) (undo-tree-id63 . -1) (undo-tree-id64 . -1) 1409 (1405 . 1409) (1403 . 1405)) nil (25245 63140 838428 700000) 0 nil])
([nil nil ((#("	println!
" 0 10 (fontified t)) . 1404) (undo-tree-id47 . 1) (undo-tree-id48 . -8) (undo-tree-id49 . -10) (undo-tree-id50 . -10) (undo-tree-id51 . -8) 1412) nil (25245 63140 838357 700000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -1416) (undo-tree-id46 . -1) (1405 . 1417) (1403 . 1405)) nil (25245 63140 838352 700000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -1417) (undo-tree-id45 . -1) (1416 . 1418)) nil (25245 63140 838347 200000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-string-face)) . -275) (undo-tree-id65 . -1) (270 . 276) (#("contents" 0 8 (fontified t face font-lock-string-face)) . 270) (t 25245 63140 829467 0)) nil (25245 63166 104454 800000) 0 nil])
([nil nil ((nil rear-nonsticky nil 50 . 51) (#("
" 0 1 (fontified nil)) . -63) (50 . 64) 49 (t 25245 63166 99467 0)) nil (25246 3838 928600 600000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -65) (undo-tree-id74 . -1) (62 . 66) (#("j" 0 1 (fontified t)) . -62) (undo-tree-id75 . -1) (undo-tree-id76 . -1) 63 (62 . 63) (#("j" 0 1 (fontified t)) . -62) (undo-tree-id77 . -1) (60 . 63) (#("fs" 0 2 (fontified t)) . 60)) nil (25246 3838 928598 0) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -64) (undo-tree-id73 . -1) (64 . 65)) nil (25246 3838 928592 600000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-type-face)) . -70) (undo-tree-id66 . -1) (68 . 71) (#("t" 0 1 (fontified t face font-lock-type-face)) . -68) (undo-tree-id67 . -1) (undo-tree-id68 . -1) 69 (66 . 69) (#("p" 0 1 (fontified t face font-lock-type-face)) . -66) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (#("i" 0 1 (fontified t face font-lock-type-face)) . -67) (undo-tree-id71 . -1) (undo-tree-id72 . -1) 68 (65 . 68)) nil (25246 3838 928587 100000) 0 nil])
([nil nil (335) nil (25246 3871 522800 300000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-comment-face)) . -334) (undo-tree-id95 . -1) (331 . 335) (t 25246 3838 917467 300000)) nil (25246 3871 522799 500000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -372) (undo-tree-id88 . -1) (372 . 373) (365 . 372) (#("l" 0 1 (fontified t face font-lock-variable-name-face)) . -365) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (#("i" 0 1 (fontified t face font-lock-variable-name-face)) . -366) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (#("n" 0 1 (fontified t face font-lock-variable-name-face)) . -367) (undo-tree-id93 . -1) (undo-tree-id94 . -1) 368 (361 . 368) (359 . 361)) nil (25246 3871 522797 400000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-variable-name-face)) . -374) (undo-tree-id81 . -1) (370 . 375) (#(")" 0 1 (fontified t)) . -370) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (#("r" 0 1 (fontified t face font-lock-variable-name-face)) . -371) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (#("a" 0 1 (fontified t face font-lock-variable-name-face)) . -372) (undo-tree-id86 . -1) (undo-tree-id87 . -1) 373 (370 . 373)) nil (25246 3871 522789 800000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -407) (undo-tree-id80 . -1) (391 . 408) (376 . 391)) nil (25246 3871 522771 100000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -408) (undo-tree-id79 . -1) (406 . 409)) nil (25246 3871 522768 800000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-string-face)) . -409) (undo-tree-id78 . -1) (407 . 410)) nil (25246 3871 522764 400000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -441) (undo-tree-id108 . -1) (441 . 442) (#("k" 0 1 (fontified t)) . -441) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (#("k" 0 1 (fontified t)) . -442) (undo-tree-id111 . -1) (undo-tree-id112 . -1) 443 (441 . 443) (#("	" 0 1 (fontified nil)) . -440) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (441 . 442) (439 . 441) (#("		" 0 2 (fontified nil)) . 438) (undo-tree-id115 . -2) (undo-tree-id116 . -2) (437 . 441) (435 . 437) (#(":" 0 1 (fontified t)) . -435) (undo-tree-id117 . -1) (undo-tree-id118 . -1) 436 (415 . 436) (414 . 415) (#("	" 0 1 (fontified nil)) . 413) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (412 . 415) (411 . 412) (t 25246 3871 517467 300000)) nil (25246 3885 577530 200000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 438) (undo-tree-id107 . 1)) nil (25246 3885 577519 0) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -449) (undo-tree-id102 . -1) (440 . 450) (#("r" 0 1 (fontified t)) . -440) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (#("p" 0 1 (fontified t)) . -441) (undo-tree-id105 . -1) (undo-tree-id106 . -1) 442 (440 . 442) (437 . 440)) nil (25246 3885 577516 800000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -448) (undo-tree-id101 . -1) (447 . 449)) nil (25246 3885 577496 500000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -450) (undo-tree-id100 . -1) (450 . 451) 447) nil (25246 3885 577494 600000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -451) (undo-tree-id99 . -1) (449 . 452)) nil (25246 3885 577492 700000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-string-face)) . -452) (undo-tree-id98 . -1) (450 . 453)) nil (25246 3885 577490 500000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -459) (undo-tree-id97 . -1) (453 . 460)) nil (25246 3885 577487 900000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -461) (undo-tree-id96 . -1) (460 . 462)) nil (25246 3885 577483 300000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-type-face)) . -381) (undo-tree-id121 . -1) (376 . 382) (#("String" 0 6 (fontified t face font-lock-type-face)) . 376) (t 25246 3885 577467 300000)) nil (25246 3908 868957 400000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -431) (undo-tree-id122 . -1) (430 . 432) (t 25246 3908 867467 300000)) nil (25246 3916 71784 800000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-string-face)) . -456) (undo-tree-id123 . -1) (452 . 457) (t 25246 3916 67467 300000)) nil (25246 3921 963535 700000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -437) (undo-tree-id133 . -1) (437 . 438) 433 (t 25246 3921 957467 300000)) nil (25246 3947 344706 800000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -452) (undo-tree-id130 . -1) (452 . 453) (#(" " 0 1 (fontified t)) . -452) (undo-tree-id131 . -1) (undo-tree-id132 . -1) 453 (440 . 453) (437 . 440) (t 25246 3921 957467 300000)) nil (25246 3947 344703 800000) 0 nil])
([nil nil (451) nil (25246 3947 344698 900000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-variable-name-face)) . -444) (undo-tree-id129 . -1) (440 . 445)) nil (25246 3947 344697 700000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -484) (undo-tree-id126 . -1) (471 . 485) (458 . 471) (#("s" 0 1 (fontified t)) . -458) (undo-tree-id127 . -1) (undo-tree-id128 . -1) 459 (456 . 459)) nil (25246 3947 344694 900000) 0 nil])
([nil nil ((480 . 481) (#("u" 0 1 (fontified t)) . 480)) nil (25246 3947 344689 300000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -484) (undo-tree-id125 . -1) (484 . 485) 480) nil (25246 3947 344787 500000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -485) (undo-tree-id137 . -1) (483 . 486)) nil (25246 3949 336472 900000) 0 nil] [nil nil ((#("j" 0 1 (fontified t face font-lock-string-face)) . -483) (undo-tree-id124 . -1) (482 . 484)) ((#("\"j" 0 1 (fontified nil face font-lock-string-face) 1 2 (fontified nil face font-lock-string-face)) . 482) (undo-tree-id134 . -2) (undo-tree-id135 . -1) (483 . 484)) (25246 3947 344680 700000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-string-face)) . -485) (undo-tree-id136 . -1) (484 . 486)) nil (25246 3949 336466 900000) 0 nil])
nil
([nil nil ((#("j" 0 1 (fontified t)) . -488) (undo-tree-id164 . -1) (487 . 489) (t 25246 3949 337467 300000)) nil (25246 3963 383120 700000) 0 nil])
([nil nil ((#("		println!(\"{}\\n\\n\", task);
" 0 2 (fontified t) 2 10 (fontified t face rust-builtin-formatting-macro) 10 11 (fontified t) 11 12 (fontified t face font-lock-string-face) 12 14 (fontified t face rust-string-interpolation) 14 18 (fontified t face font-lock-string-face) 18 19 (fontified t face font-lock-string-face) 19 25 (fontified t) 25 28 (fontified t)) . 489) (undo-tree-id162 . -26) (undo-tree-id163 . -26) 515) nil (25246 3963 383118 800000) 0 nil])
([nil nil ((nil rear-nonsticky nil 489 . 490) (#("
" 0 1 (fontified nil)) . -513) (488 . 514) 439) nil (25246 3963 383116 400000) 0 nil])
([nil nil ((#("	" 0 1 (fontified nil rear-nonsticky t)) . -491) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (489 . 491) 490) nil (25246 3963 383114 900000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -514) (undo-tree-id158 . -1) (514 . 515) 490) nil (25246 3963 383111 800000) 0 nil])
([nil nil ((#("		" 0 2 (fontified nil)) . -492) (489 . 492) 513) nil (25246 3963 383109 900000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -518) (undo-tree-id153 . -1) (518 . 519) (#("	" 0 1 (fontified nil)) . -517) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (518 . 519) (#("{" 0 1 (fontified t)) . -518) (undo-tree-id156 . -1) (undo-tree-id157 . -1) 519 (518 . 519) (515 . 518) (#("	" 0 1 (fontified nil)) . -491) (515 . 516)) nil (25246 3963 383108 0) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -532) (undo-tree-id150 . -1) (522 . 533) (520 . 522) (#("		" 0 2 (fontified nil)) . 519) (undo-tree-id151 . -2) (undo-tree-id152 . -2) (518 . 522)) nil (25246 3963 383102 0) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -533) (undo-tree-id147 . -1) (531 . 534) (#("0" 0 1 (fontified t)) . -531) (undo-tree-id148 . -1) (undo-tree-id149 . -1) 532) nil (25246 3963 383097 600000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -533) (undo-tree-id138 . -1) 534 (531 . 534) (#("\"" 0 1 (fontified t face font-lock-string-face)) . -531) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (#("\"" 0 1 (fontified t face font-lock-string-face)) . -532) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (#("(" 0 1 (fontified t)) . -533) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (#(";" 0 1 (fontified t)) . -534) (undo-tree-id145 . -1) (undo-tree-id146 . -1) 535 (533 . 535)) nil (25246 3963 383090 100000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -527) (undo-tree-id184 . -1) (518 . 528) (514 . 518) (t 25246 3963 377467 300000)) nil (25246 3984 183547 900000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -526) (undo-tree-id183 . -1) (525 . 527)) nil (25246 3984 183546 0) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -528) (undo-tree-id182 . -1) (528 . 529) 525) nil (25246 3984 183544 700000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -529) (undo-tree-id181 . -1) (527 . 530)) nil (25246 3984 183543 200000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-string-face)) . -530) (undo-tree-id180 . -1) (528 . 531)) nil (25246 3984 183541 800000) 0 nil])
([nil nil ((#("P" 0 1 (fontified t face font-lock-string-face)) . 528)) nil (25246 3984 183540 300000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-string-face)) . -530) (undo-tree-id179 . -1) (529 . 531)) nil (25246 3984 183539 400000) 0 nil])
([nil nil ((nil rear-nonsticky nil 535 . 536) (#("
" 0 1 (fontified nil)) . -550) (532 . 551) 529) nil (25246 3984 183537 800000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -550) (undo-tree-id178 . -1) (550 . 551) 536) nil (25246 3984 183536 600000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -532) (undo-tree-id177 . -1) (532 . 533) 531) nil (25246 3984 183534 900000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -537) (undo-tree-id176 . -1) (533 . 538) (531 . 533)) nil (25246 3984 183533 400000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -559) (undo-tree-id175 . -1) (555 . 560)) nil (25246 3984 183531 700000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -515) (undo-tree-id169 . -1) (514 . 516) (#("l" 0 1 (fontified t)) . -514) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (#("j" 0 1 (fontified t)) . -515) (undo-tree-id172 . -1) (undo-tree-id173 . -1) 516 (515 . 516) (#("j" 0 1 (fontified t)) . -515) (undo-tree-id174 . -1) (509 . 516) (#("raw" 0 3 (fontified t)) . 509)) nil (25246 3984 183529 100000) 0 nil])
([nil nil (514) nil (25246 3984 183523 700000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -491) (undo-tree-id168 . -1) (491 . 492)) nil (25246 3984 183522 700000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-variable-name-face)) . -501) (undo-tree-id167 . -1) (495 . 502) (#("task" 0 4 (fontified t face font-lock-variable-name-face)) . 495)) nil (25246 3984 183520 700000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -519) (undo-tree-id166 . -1) (519 . 520) 500) nil (25246 3984 183511 800000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -517) (undo-tree-id165 . -1) (516 . 518)) nil (25246 3984 183507 400000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -545) (undo-tree-id185 . -1) (539 . 546) (#("task" 0 4 (fontified t)) . 539) (t 25246 3984 177467 300000)) nil (25246 3987 559418 300000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -563) (undo-tree-id191 . -1) (563 . 564) (#("d" 0 1 (fontified t)) . -563) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (#("e" 0 1 (fontified t)) . -564) (undo-tree-id194 . -1) (undo-tree-id195 . -1) 565 (563 . 565) (#("task" 0 4 (fontified t)) . 563) (t 25246 3987 557467 300000)) nil (25246 3991 388467 900000) 0 nil])
([nil nil ((#("			println!(\"{}\")
" 0 2 (fontified t) 2 3 (rear-nonsticky t fontified t) 3 11 (fontified t face rust-builtin-formatting-macro) 11 12 (fontified t) 12 13 (fontified t face font-lock-string-face) 13 15 (fontified t face rust-string-interpolation) 15 16 (fontified t face font-lock-string-face) 16 17 (fontified t) 17 18 (fontified t)) . 547) (undo-tree-id186 . 2) (undo-tree-id187 . -17) (undo-tree-id188 . -17) (undo-tree-id189 . -15) (undo-tree-id190 . -15) 562) nil (25246 3991 388455 900000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . 509) (t 25246 3991 387467 300000)) nil (25246 4008 916649 200000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 550) (t 25246 4008 917467 300000)) nil (25246 4101 52018 100000) 0 nil])
([nil nil ((apply -9 489 559 undo--wrap-and-run-primitive-undo 489 559 ((554 . 557) (525 . 528) (491 . 494) 548)) (t 25246 4101 47467 300000)) nil (25246 4124 402287 900000) 0 nil])
([nil nil ((#("		" 0 2 (fontified nil)) . -489) (undo-tree-id201 . -2) (undo-tree-id202 . -2) 491 (#("j" 0 1 (fontified t)) . -491) (undo-tree-id203 . -1) (488 . 492) (t 25246 4124 397467 300000)) nil (25246 4127 536308 400000) 0 nil])
([nil nil ((#("		" 0 2 (fontified nil)) . -490) (undo-tree-id196 . -2) (undo-tree-id197 . -2) 492 (#("j" 0 1 (fontified t)) . -492) (undo-tree-id198 . -1) (490 . 493) (#("		" 0 2 (fontified nil)) . 489) (undo-tree-id199 . -2) (undo-tree-id200 . -2) (488 . 492)) nil (25246 4127 536282 700000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 490) (undo-tree-id205 . 1) (t 25246 4127 537467 300000)) nil (25246 4137 944950 500000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -504) (undo-tree-id204 . -1) (492 . 505) (490 . 492) (490 . 491)) nil (25246 4137 944944 900000) 0 nil])
([nil nil ((#("		task_details
" 0 14 (fontified t) 14 15 (fontified t)) . 490) (undo-tree-id235 . 1) (undo-tree-id236 . -13) (undo-tree-id237 . -13) (undo-tree-id238 . -13) 503 (t 25246 4137 937467 300000)) nil (25246 4195 617428 400000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 490) (undo-tree-id233 . 1) (undo-tree-id234 . -1)) nil (25246 4195 617424 500000) 0 nil])
([nil nil ((#("		" 0 2 (fontified nil)) . -490) (undo-tree-id228 . -2) (undo-tree-id229 . -2) 492 (#("j" 0 1 (fontified t)) . -492) (undo-tree-id230 . -1) (492 . 493) (490 . 492) (#("		" 0 2 (fontified nil)) . 489) (undo-tree-id231 . -2) (undo-tree-id232 . -2) (488 . 492)) nil (25246 4195 617421 700000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 490) (undo-tree-id227 . 1)) nil (25246 4195 617416 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 489) (undo-tree-id226 . 1)) nil (25246 4195 617414 300000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 489) (undo-tree-id221 . 1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . 1)) nil (25246 4195 617412 300000) 0 nil])
([nil nil ((#("		" 0 2 (fontified nil)) . -489) (undo-tree-id218 . -2) (undo-tree-id219 . -2) 491 (#("j" 0 1 (fontified t)) . -491) (undo-tree-id220 . -1) (488 . 492)) nil (25246 4195 617407 900000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-variable-name-face)) . -504) (undo-tree-id213 . -1) (495 . 505) (#("T" 0 1 (fontified t face font-lock-type-face)) . -495) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (#("a" 0 1 (fontified t face font-lock-type-face)) . -496) (undo-tree-id216 . -1) (undo-tree-id217 . -1) 497 (491 . 497) (488 . 491)) nil (25246 4195 617403 600000) 0 nil])
([nil nil ((#("		let curr_task
" 0 2 (fontified t) 2 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t) 6 15 (fontified t face font-lock-variable-name-face) 15 16 (fontified t)) . 489) (undo-tree-id210 . 1) (undo-tree-id211 . -14) (undo-tree-id212 . -14) 503) nil (25246 4195 617397 300000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 489) (undo-tree-id206 . 1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1)) nil (25246 4195 617389 900000) 0 nil])
([nil nil ((#("	" 0 1 (fontified nil)) . -413) (undo-tree-id250 . -1) (undo-tree-id251 . -1) 414 (#("j" 0 1 (fontified t)) . -414) (undo-tree-id252 . -1) (413 . 415) (#("	" 0 1 (fontified nil)) . 412) (412 . 413) (412 . 413) (t 25246 4195 617467 300000)) nil (25246 4323 893761 600000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-type-face)) . -418) (undo-tree-id249 . -1) (414 . 419) (413 . 414) (#("	" 0 1 (fontified nil)) . 412) (412 . 413) (412 . 413)) nil (25246 4323 893749 300000) 0 nil])
([nil nil ((#("	Task
" 0 1 (fontified t) 1 5 (fontified t face font-lock-type-face) 5 6 (fontified t)) . 413) (undo-tree-id245 . 1) (undo-tree-id246 . -4) (undo-tree-id247 . 1) (undo-tree-id248 . -4) 417) nil (25246 4323 893746 800000) 0 nil])
([nil nil ((#("		" 0 2 (fontified nil)) . -490) (undo-tree-id242 . -2) (undo-tree-id243 . -2) 492 (#("j" 0 1 (fontified t)) . -492) (undo-tree-id244 . -1) (489 . 493)) nil (25246 4323 893742 500000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 490) (undo-tree-id239 . 1) (undo-tree-id240 . -1) (undo-tree-id241 . -1)) nil (25246 4323 893736 500000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 413) (undo-tree-id253 . 1) (t 25246 4323 887467 300000)) nil (25246 4326 237611 500000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -698) (undo-tree-id275 . -1) (698 . 699) (#("	" 0 1 (fontified nil)) . -697) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (698 . 699) (696 . 698) (#("		" 0 2 (fontified nil)) . 695) (undo-tree-id278 . -2) (undo-tree-id279 . -2) (694 . 698) (688 . 694) (#("{" 0 1 (fontified t)) . -688) (undo-tree-id280 . -1) (undo-tree-id281 . -1) 689 (685 . 689) (#("=" 0 1 (fontified t)) . -685) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (#(">" 0 1 (fontified t syntax-table (1))) . -686) (undo-tree-id284 . -1) (undo-tree-id285 . -1) 687 (684 . 687) (#("j" 0 1 (fontified t)) . -684) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (#("i" 0 1 (fontified t)) . -685) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (#("c" 0 1 (fontified t)) . -686) (undo-tree-id290 . -1) (undo-tree-id291 . -1) 687 (684 . 687) (#("j" 0 1 (fontified t)) . -684) (undo-tree-id292 . -1) (676 . 685) (675 . 676) (#("	" 0 1 (fontified nil)) . 674) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (673 . 676) (t 25246 4326 237467 300000)) nil (25246 4395 667619 100000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -694) (undo-tree-id274 . -1) (694 . 695) 676) nil (25246 4395 667578 800000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -712) (undo-tree-id254 . -1) (704 . 713) (#("i" 0 1 (fontified t)) . -704) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (#("e" 0 1 (fontified t)) . -705) (undo-tree-id257 . -1) (undo-tree-id258 . -1) 706 (705 . 706) (#("o" 0 1 (fontified t)) . -705) (undo-tree-id259 . -1) (undo-tree-id260 . -1) 706 (#("n" 0 1 (fontified t)) . -706) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (#(":" 0 1 (fontified t)) . -707) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (#(" " 0 1 (fontified t)) . -708) (undo-tree-id265 . -1) (undo-tree-id266 . -1) 709 (704 . 709) (#("e" 0 1 (fontified t)) . -704) (undo-tree-id267 . -1) (#("d" 0 1 (fontified t)) . -705) (undo-tree-id268 . -1) 706 (689 . 706) (#("i" 0 1 (fontified t)) . -689) (undo-tree-id269 . -1) (#("S" 0 1 (fontified t)) . -690) (undo-tree-id270 . -1) 691 (689 . 691) (688 . 689) (#("S" 0 1 (fontified t face font-lock-type-face)) . -688) (undo-tree-id271 . -1) (#("t" 0 1 (fontified t face font-lock-type-face)) . -689) (undo-tree-id272 . -1) 690 (688 . 690) (687 . 688) (#(";" 0 1 (fontified t)) . -687) (undo-tree-id273 . -1) 688 (683 . 688)) nil (25246 4395 667570 800000) 0 nil])
([nil nil ((nil rear-nonsticky nil 725 . 726) (#("
" 0 1 (fontified nil)) . -771) (723 . 772) 680 (t 25246 4395 667467 300000)) nil (25246 4403 664607 100000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 772)) nil (25246 4403 664605 400000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -767) (undo-tree-id296 . -1) (767 . 768) 748) nil (25246 4403 664603 800000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -771) (undo-tree-id295 . -1) (770 . 772) (762 . 770) (#("false" 0 5 (fontified t face font-lock-keyword-face)) . 762)) nil (25246 4403 664598 700000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-function-name-face)) . -683) (undo-tree-id297 . -1) (683 . 684) (682 . 683) (t 25246 4403 657467 300000)) nil (25246 4413 168736 0) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -519) (undo-tree-id299 . -1) (510 . 520) (#("k" 0 1 (fontified t face font-lock-type-face)) . -510) (undo-tree-id300 . -1) (undo-tree-id301 . -1) 511 (508 . 511) (506 . 508) (#(" " 0 1 (fontified t)) . -506) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (#("=" 0 1 (fontified t)) . -507) (undo-tree-id304 . -1) (undo-tree-id305 . -1) 508 (491 . 508) (488 . 491) (t 25246 4413 177467 300000)) nil (25246 4439 595874 200000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -520) (undo-tree-id298 . -1) (519 . 521)) nil (25246 4439 595861 500000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -518) (undo-tree-id310 . -1) (518 . 519) (#("\"" 0 1 (fontified t face font-lock-string-face)) . -518) (undo-tree-id311 . -1) (#("\"" 0 1 (fontified t face font-lock-string-face)) . -519) (undo-tree-id312 . -1) 520 (518 . 520) (t 25246 4439 597467 300000)) nil (25246 4451 358614 200000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -532) (undo-tree-id309 . -1) (518 . 533)) nil (25246 4451 358609 100000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -532) (undo-tree-id308 . -1) (531 . 533)) nil (25246 4451 358606 400000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -549) (undo-tree-id307 . -1) (533 . 550)) nil (25246 4451 358603 400000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -549) (undo-tree-id306 . -1) (548 . 550)) nil (25246 4451 358598 0) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -564) (undo-tree-id320 . -1) (555 . 565) (552 . 555) (t 25246 4451 357467 300000)) nil (25246 4476 483669 400000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -565) (undo-tree-id319 . -1) (563 . 566)) nil (25246 4476 483667 400000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -563) (undo-tree-id318 . -1) (562 . 564)) nil (25246 4476 483665 300000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -567) (undo-tree-id317 . -1) (567 . 568) 562) nil (25246 4476 483663 200000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-string-face)) . -567) (undo-tree-id316 . -1) (565 . 568)) nil (25246 4476 483661 100000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -755) (undo-tree-id315 . -1) (755 . 756)) nil (25246 4476 483658 900000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -570) (undo-tree-id314 . -1) (569 . 571)) nil (25246 4476 483656 0) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -574) (undo-tree-id313 . -1) (570 . 575) (568 . 570)) nil (25246 4476 483638 900000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-variable-name-face)) . -500) (undo-tree-id322 . -1) (495 . 501) (t 25246 4476 487467 300000)) nil (25246 4484 582308 800000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -580) (undo-tree-id321 . -1) (575 . 581)) nil (25246 4484 582303 200000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face rust-string-interpolation)) . -573) (undo-tree-id323 . -1) (571 . 574) (t 25246 4484 577467 300000)) nil (25246 4494 13865 100000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -199) (undo-tree-id349 . -1) (191 . 200) (#("d" 0 1 (fontified t)) . -191) (undo-tree-id350 . -1) (undo-tree-id351 . -1) 192 (190 . 192) (#("{" 0 1 (fontified t)) . -190) (undo-tree-id352 . -1) (undo-tree-id353 . -1) 191 (189 . 191) (189 . 190) 201 (t 25246 4494 7467 300000)) nil (25246 4510 850584 400000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -205) (undo-tree-id324 . -1) (203 . 206) (#("]" 0 1 (fontified t face font-lock-preprocessor-face)) . -203) (undo-tree-id325 . -1) (undo-tree-id326 . -1) 204 (199 . 204) (#("E" 0 1 (fontified t face font-lock-type-face)) . -199) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (#("b" 0 1 (fontified t face font-lock-type-face)) . -200) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (#("u" 0 1 (fontified t face font-lock-type-face)) . -201) (undo-tree-id331 . -1) (undo-tree-id332 . -1) 202 (198 . 202) (#("d" 0 1 (fontified t)) . -198) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (#("e" 0 1 (fontified t)) . -199) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (#("b" 0 1 (fontified t)) . -200) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (#("u" 0 1 (fontified t)) . -201) (undo-tree-id339 . -1) (undo-tree-id340 . -1) 202 (198 . 202) (#("d" 0 1 (fontified t)) . -198) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (#("e" 0 1 (fontified t)) . -199) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (#("b" 0 1 (fontified t)) . -200) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (#("u" 0 1 (fontified t)) . -201) (undo-tree-id347 . -1) (undo-tree-id348 . -1) 202 (198 . 202)) nil (25246 4510 850571 500000) 0 nil])
([nil nil ((#("]" 0 1 (fontified t face font-lock-preprocessor-face)) . 204) (t 25246 4510 847467 300000)) nil (25246 4516 475717 800000) 0 nil])
([nil nil ((nil rear-nonsticky nil 205 . 206) (nil fontified nil 205 . 206) (205 . 206) 204) nil (25246 4516 475713 200000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t face font-lock-preprocessor-face)) . 204) (undo-tree-id354 . 1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (t 25246 4516 477467 300000)) nil (25246 4520 16344 100000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -540) (undo-tree-id359 . -1) (539 . 541) (t 25246 4520 7467 300000)) nil (25246 4536 368461 0) 0 nil])
([nil nil ((539 . 540) (#(")" 0 1 (fontified t)) . 539)) nil (25246 4629 236143 300000) 0 nil])
([nil nil ((apply -6 506 613 undo--wrap-and-run-primitive-undo 506 613 ((581 . 584) (508 . 511) 606)) (t 25246 4631 347467 300000)) nil (25246 4635 508591 700000) 0 nil] [nil nil ((#("j" 0 1 (fontified t)) . -611) (undo-tree-id360 . -1) (604 . 612) (t 25246 4536 367467 300000)) ((#(".next()j" 0 7 (fontified nil) 7 8 (fontified nil)) . 604) (undo-tree-id361 . -6) (undo-tree-id362 . -6) (undo-tree-id363 . -6) (undo-tree-id364 . -6) (undo-tree-id365 . -6) (611 . 612) (t 25246 4621 717467 300000)) (25246 4621 716142 100000) 0 nil])
([nil nil ((apply 3 506 576 undo--wrap-and-run-primitive-undo 506 576 ((#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -508) 548)) (t 25246 4635 547467 300000)) nil (25246 4637 941812 500000) 0 nil])
nil
([nil nil ((#("[" 0 1 (fontified t)) . 553) (t 25246 4637 937467 300000)) nil (25246 4661 257155 500000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . 553)) nil (25246 4661 257154 200000) 0 nil])
([nil nil ((#("]" 0 1 (fontified t)) . 553)) nil (25246 4661 257153 200000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -560) (undo-tree-id368 . -1) (553 . 561)) nil (25246 4661 257151 900000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -579) (undo-tree-id367 . -1) (579 . 580) 559) nil (25246 4661 257149 400000) 0 nil])
([nil nil ((#("[" 0 1 (fontified t)) . 574)) nil (25246 4661 257146 400000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . 574)) nil (25246 4661 257145 200000) 0 nil])
([nil nil ((#("]" 0 1 (fontified t)) . 574)) nil (25246 4661 257143 700000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -581) (undo-tree-id366 . -1) (574 . 582)) nil (25246 4661 257139 800000) 0 nil])
([nil nil ((apply 3 584 615 undo--wrap-and-run-primitive-undo 584 615 ((#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -586) 616)) (t 25246 4661 257467 300000)) nil (25246 4665 875627 500000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -583) (undo-tree-id370 . -1) (583 . 584) 541 (t 25246 4665 877467 300000)) nil (25246 4703 909913 500000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -569) (undo-tree-id369 . -1) (560 . 570) (t 25246 4665 877467 300000)) nil (25246 4703 909908 200000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -592) (undo-tree-id372 . -1) (592 . 593) 568 (t 25246 4703 907467 300000)) nil (25246 4707 572204 900000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -599) (undo-tree-id371 . -1) (590 . 600) (t 25246 4703 907467 300000)) nil (25246 4707 572199 400000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -581) (undo-tree-id373 . -1) (569 . 582) (t 25246 4707 567467 300000)) nil (25246 4716 646866 400000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -613) (undo-tree-id383 . -1) (613 . 614) 580 (t 25246 4716 647467 300000)) nil (25246 4732 684142 400000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-variable-name-face)) . -630) (undo-tree-id374 . -1) (622 . 631) (#("=" 0 1 (fontified t)) . -622) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (#(" " 0 1 (fontified t)) . -623) (undo-tree-id377 . -1) (undo-tree-id378 . -1) 624 (622 . 624) (#(")" 0 1 (fontified t)) . -622) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (#(" " 0 1 (fontified t)) . -623) (undo-tree-id381 . -1) (undo-tree-id382 . -1) 624 (611 . 624) (t 25246 4716 647467 300000)) nil (25246 4732 684135 600000) 0 nil])
([nil nil ((627 . 628) (#("'" 0 1 (fontified t syntax-table (7) face font-lock-string-face)) . 627) (t 25246 4732 677467 300000)) nil (25246 4745 7688 100000) 0 nil])
([nil nil ((629 . 630) (#("'" 0 1 (fontified t face font-lock-string-face)) . 629)) nil (25246 4745 7686 300000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -642) (undo-tree-id384 . -1) (635 . 643) (#("r" 0 1 (fontified t)) . -635) (undo-tree-id385 . -1) (undo-tree-id386 . -1) 636 (630 . 636)) nil (25246 4745 7682 600000) 0 nil])
([nil nil (641) nil (25246 4780 297042 400000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -508) (undo-tree-id393 . -1) (508 . 509) (t 25246 4745 17467 300000)) nil (25246 4780 297041 400000) 0 nil])
([nil nil (569) nil (25246 4780 297039 700000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-comment-face)) . -511) (undo-tree-id392 . -1) (508 . 512) (t 25246 4745 17467 300000)) nil (25246 4780 297038 700000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -505) (undo-tree-id391 . -1) (505 . 506) 459) nil (25246 4780 297036 900000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -517) (undo-tree-id390 . -1) (508 . 518) (505 . 508)) nil (25246 4780 297034 900000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -518) (undo-tree-id389 . -1) (516 . 519)) nil (25246 4780 297033 100000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-string-face)) . -519) (undo-tree-id388 . -1) (517 . 520)) nil (25246 4780 297031 300000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -522) (undo-tree-id387 . -1) (520 . 523)) nil (25246 4780 297028 600000) 0 nil])
([nil nil ((nil rear-nonsticky nil 561 . 562) (nil fontified nil 522 . 562) (522 . 562) 521) nil (25246 4780 297019 100000) 0 nil])
([nil nil ((apply -3 706 740 undo--wrap-and-run-primitive-undo 706 740 ((708 . 711) 735))) nil (25246 4780 297014 500000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -564) (undo-tree-id394 . -1) (563 . 565) (t 25246 4780 307467 300000)) nil (25246 4781 674334 200000) 0 nil])
([nil nil (563) nil (25246 4789 998861 900000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -508) (undo-tree-id397 . -1) (508 . 509) (t 25246 4781 667467 300000)) nil (25246 4789 998860 700000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -516) (undo-tree-id396 . -1) (516 . 517) (t 25246 4781 667467 300000)) nil (25246 4789 998857 800000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -516) (undo-tree-id395 . -1) (515 . 517) (t 25246 4781 667467 300000)) nil (25246 4830 447973 100000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -551) (undo-tree-id406 . -1) (551 . 552) (#(".to_string()" 0 11 (fontified t) 11 12 (fontified t rear-nonsticky t)) . 551) (undo-tree-id407 . -11) (undo-tree-id408 . -11) (undo-tree-id409 . -11) (undo-tree-id410 . -11) (undo-tree-id411 . -12) (undo-tree-id412 . -11) (undo-tree-id413 . -11) 562) nil (25246 4835 445294 0) 0 nil] [nil nil ((#("j" 0 1 (fontified t)) . -542) (undo-tree-id398 . -1) (542 . 543) (#(".unwrap().to_string()" 0 20 (fontified t) 20 21 (fontified t rear-nonsticky t)) . 542) (undo-tree-id399 . -20) (undo-tree-id400 . -20) (undo-tree-id401 . -20) (undo-tree-id402 . -20) (undo-tree-id403 . -21) (undo-tree-id404 . -20) (undo-tree-id405 . -20) 562 (t 25246 4789 997467 300000)) ((542 . 563) (#("j" 0 1 (fontified nil)) . 542) (542 . 543) (t 25246 4825 857467 300000)) (25246 4825 864314 400000) 0 nil])
([nil nil (499) nil (25246 4844 666044 900000) 0 nil])
nil
([nil nil ((#("j" 0 1 (fontified t)) . -457) (undo-tree-id415 . -1) (457 . 458) (t 25246 4835 447467 300000)) nil (25246 4844 666043 100000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-variable-name-face)) . -465) (undo-tree-id414 . -1) (461 . 466) (t 25246 4835 447467 300000)) nil (25246 4844 666037 100000) 0 nil])
([nil nil ((#("		println!(\"{}\", task_details.next().unwrap());
" 0 2 (fontified t) 2 10 (fontified t face rust-builtin-formatting-macro) 10 11 (fontified t) 11 12 (fontified t face font-lock-string-face) 12 14 (fontified t face rust-string-interpolation) 14 15 (fontified t face font-lock-string-face) 15 17 (fontified t) 17 36 (fontified t) 36 45 (fontified t) 45 48 (fontified t)) . 510) (undo-tree-id416 . -45) (undo-tree-id417 . -17) (undo-tree-id418 . -45) (undo-tree-id419 . -45) (undo-tree-id420 . 3) (undo-tree-id421 . -45) (undo-tree-id422 . -45) (undo-tree-id423 . -9) (undo-tree-id424 . -9) 519 (t 25246 4844 667467 300000)) nil (25246 4853 112904 800000) 0 nil])
([nil nil ((apply 15 510 741 undo--wrap-and-run-primitive-undo 510 741 ((#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -739) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -713) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -682) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -651) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -512) 755))) nil (25246 4853 112869 500000) 0 nil])
([nil nil ((#("		for detail in task_details {
			println!(\"{}\", detail)
		}
" 0 2 (fontified t) 2 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t) 6 12 (fontified t face font-lock-variable-name-face) 12 13 (fontified t) 13 15 (fontified t face font-lock-keyword-face) 15 16 (fontified t) 16 30 (fontified t) 30 31 (fontified t) 31 33 (fontified t) 33 34 (fontified t) 34 42 (fontified t face rust-builtin-formatting-macro) 42 43 (fontified t) 43 44 (fontified t face font-lock-string-face) 44 46 (fontified t face rust-string-interpolation) 46 47 (fontified t face font-lock-string-face) 47 55 (fontified t) 55 56 (fontified t) 56 57 (fontified t) 57 59 (fontified t) 59 60 (fontified t) 60 61 (fontified t)) . 680) (undo-tree-id428 . -60) (undo-tree-id429 . -6) (undo-tree-id430 . -60) (undo-tree-id431 . -60) (undo-tree-id432 . -61) (undo-tree-id433 . -6) (undo-tree-id434 . -60) (undo-tree-id435 . -57) (undo-tree-id436 . -60) 740 (t 25246 4853 107467 300000)) nil (25246 4872 390790 900000) 0 nil])
([nil nil ((#("		println!();
" 0 2 (fontified t) 2 10 (fontified t face rust-builtin-formatting-macro) 10 13 (fontified t) 13 14 (fontified t)) . 680) (undo-tree-id425 . 14) (undo-tree-id426 . -2) (undo-tree-id427 . -2) 682) nil (25246 4872 390779 800000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 429) (t 25246 4872 387467 300000)) nil (25246 4880 118149 200000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -460) (undo-tree-id441 . -1) (456 . 461) (453 . 456) (t 25246 4880 117467 300000)) nil (25246 4895 689815 200000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-type-face)) . -471) (undo-tree-id438 . -1) (459 . 472) (#("t" 0 1 (fontified t)) . -459) (undo-tree-id439 . -1) (undo-tree-id440 . -1) 460 (459 . 460)) nil (25246 4895 689811 800000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -482) (undo-tree-id437 . -1) (476 . 483) (472 . 476)) nil (25246 4895 689782 600000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -482) (undo-tree-id442 . -1) (482 . 483) (#(";" 0 1 (fontified t)) . -482) (undo-tree-id443 . -1) (undo-tree-id444 . -1) 483 (482 . 483) (t 25246 4895 697467 300000)) nil (25246 4899 819336 200000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -474) (undo-tree-id448 . -1) (473 . 475) (472 . 473) (t 25246 4899 817467 300000)) nil (25246 4902 5553 600000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -488) (undo-tree-id445 . -1) (488 . 489) (#("	" 0 1 (fontified nil)) . -487) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (488 . 489) (484 . 488)) nil (25246 4902 5547 700000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -472) (undo-tree-id449 . -1) (463 . 473) (t 25246 4902 7467 300000)) nil (25246 4909 783086 800000) 0 nil])
([nil nil ((#("unwrap()" 0 8 (fontified t)) . 464) (undo-tree-id455 . -7) (undo-tree-id456 . -7) (undo-tree-id457 . -7) (undo-tree-id458 . -7) (undo-tree-id459 . -8) (undo-tree-id460 . -7) (undo-tree-id461 . -7) 471 (t 25246 4909 777467 300000)) nil (25246 4919 836688 100000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 463) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1)) nil (25246 4919 836676 300000) 0 nil])
([nil nil ((458 . 459) (#("(" 0 1 (fontified t)) . 458) (t 25246 4919 837467 300000)) nil (25246 4928 125460 300000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -474) (undo-tree-id462 . -1) (474 . 475) 458) nil (25246 4928 125457 100000) 0 nil])
([nil nil ((471 . 472) (#(")" 0 1 (fontified t)) . 471)) nil (25246 4928 125421 300000) 0 nil])
([nil nil ((#("None  " 0 4 (fontified t face font-lock-type-face) 4 5 (fontified t) 5 6 (fontified t)) . 467) (undo-tree-id477 . -4) (t 25246 4928 117467 300000)) nil (25246 4942 317790 900000) 0 nil])
([nil nil ((#("=" 0 1 (fontified t)) . 464)) nil (25246 4942 317788 900000) 0 nil])
([nil nil ((#("=" 0 1 (fontified t)) . 464)) nil (25246 4942 317787 700000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 464) (undo-tree-id476 . -1)) nil (25246 4942 317865 500000) 0 nil])
([nil nil ((#("		if task {
			break;
		}
" 0 2 (fontified t) 2 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t) 5 10 (fontified t) 10 12 (fontified t) 12 15 (fontified t) 15 20 (fontified t face font-lock-keyword-face) 20 22 (fontified t) 22 25 (fontified t) 25 26 (fontified t)) . 454) (undo-tree-id478 . 15) (undo-tree-id479 . -24) (undo-tree-id480 . -24) (undo-tree-id481 . -2) (undo-tree-id482 . -10) (undo-tree-id483 . -2) (undo-tree-id484 . -26) (undo-tree-id485 . -2) (undo-tree-id486 . -24) (undo-tree-id487 . -2) 456) nil (25246 4944 12653 900000) 0 nil] [nil nil ((#("		if task {
			break;
		}
		let mut task_details: Split<&str> = task.split(\",\");
" 0 2 (fontified t) 2 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t) 5 10 (fontified t) 10 12 (fontified t) 12 15 (fontified t) 15 20 (fontified t face font-lock-keyword-face) 20 22 (fontified t) 22 25 (fontified t) 25 26 (fontified t) 26 28 (fontified t) 28 31 (fontified t face font-lock-keyword-face) 31 32 (fontified t) 32 35 (fontified t face font-lock-keyword-face) 35 36 (fontified t) 36 48 (fontified t face font-lock-variable-name-face) 48 50 (fontified t) 50 55 (fontified t face font-lock-type-face) 55 56 (fontified t) 56 57 (fontified t face rust-ampersand-face) 57 60 (fontified t face font-lock-type-face) 60 72 (fontified t) 72 73 (fontified t) 73 74 (fontified t) 74 75 (fontified t) 75 78 (fontified t face font-lock-string-face) 78 81 (fontified t)) . 454) (undo-tree-id463 . 70) (undo-tree-id464 . -36) (undo-tree-id465 . -81) (undo-tree-id466 . -81) (undo-tree-id467 . -10) (undo-tree-id468 . -36) (undo-tree-id469 . -10) (undo-tree-id470 . -36) (undo-tree-id471 . -81) (undo-tree-id472 . -10) (undo-tree-id473 . -36) (undo-tree-id474 . -26) (undo-tree-id475 . -36) 490) ((454 . 535)) (25246 4942 317781 0) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -516) (undo-tree-id499 . -1) (511 . 517) (508 . 511) (t 25246 4944 7467 300000)) nil (25246 4964 141695 900000) 0 nil])
nil
([nil nil ((#("j" 0 1 (fontified t)) . -655) (undo-tree-id498 . -1) (655 . 656) 523) nil (25246 4964 141693 100000) 0 nil])
([nil nil ((#("		" 0 2 (fontified nil)) . -520) (517 . 520) 654) nil (25246 4964 141690 600000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -660) (undo-tree-id496 . -1) (660 . 661) (#("	" 0 1 (fontified nil)) . -659) (undo-tree-id497 . -1) (660 . 661) (656 . 660)) nil (25246 4964 141688 600000) 0 nil])
([nil nil ((#("		}
" 0 3 (fontified t) 3 4 (fontified t)) . 657) (undo-tree-id494 . 1) (undo-tree-id495 . -2) 659) nil (25246 4964 141684 600000) 0 nil])
([nil nil ((#("		try {
" 0 2 (fontified t) 2 5 (fontified t face font-lock-keyword-face) 5 7 (fontified t) 7 8 (fontified t)) . 509) (undo-tree-id490 . -8) (undo-tree-id491 . -8) (undo-tree-id492 . -2) (undo-tree-id493 . -2) 511) nil (25246 4964 141680 800000) 0 nil])
([nil nil ((#("			" 0 3 (fontified nil)) . -511) (undo-tree-id488 . -2) (undo-tree-id489 . -2) (509 . 511) 511) nil (25246 4964 141673 300000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -544) (undo-tree-id500 . -1) (538 . 545) (534 . 538) (518 . 534) (#("-" 0 1 (fontified t)) . -518) (undo-tree-id501 . -1) (#("d" 0 1 (fontified t)) . -519) (undo-tree-id502 . -1) (#("e" 0 1 (fontified t)) . -520) (undo-tree-id503 . -1) (#("t" 0 1 (fontified t)) . -521) (undo-tree-id504 . -1) (#("a" 0 1 (fontified t)) . -522) (undo-tree-id505 . -1) 523 (511 . 523) (508 . 511) (t 25246 4964 137467 300000)) nil (25246 4988 605111 800000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -536) (undo-tree-id509 . -1) (534 . 537) (t 25246 4988 607467 300000)) nil (25246 4996 977951 800000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -550) (undo-tree-id506 . -1) (550 . 551) (#("	" 0 1 (fontified nil)) . -549) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (550 . 551) (546 . 550)) nil (25246 4996 977946 600000) 0 nil])
([nil nil ((#("		if task_details == None {
			break;
		}
" 0 2 (fontified t) 2 4 (fontified t face font-lock-keyword-face) 4 21 (fontified t) 21 25 (fontified t face font-lock-type-face) 25 27 (fontified t) 27 28 (fontified t) 28 31 (fontified t) 31 36 (fontified t face font-lock-keyword-face) 36 38 (fontified t) 38 41 (fontified t) 41 42 (fontified t)) . 509) (undo-tree-id532 . 1) (undo-tree-id533 . -41) (undo-tree-id534 . -42) (undo-tree-id535 . -42) (undo-tree-id536 . -17) (undo-tree-id537 . -41) (undo-tree-id538 . -40) (undo-tree-id539 . -41) (undo-tree-id540 . -42) (undo-tree-id541 . -17) (undo-tree-id542 . -41) (undo-tree-id543 . -38) (undo-tree-id544 . -41) 550 (t 25246 4996 977467 300000)) nil (25246 5045 315939 600000) 0 nil])
([nil nil ((#("		" 0 2 (fontified nil)) . -509) (undo-tree-id529 . -2) (undo-tree-id530 . -2) 511 (#("j" 0 1 (fontified t)) . -511) (undo-tree-id531 . -1) (508 . 512)) nil (25246 5045 315927 900000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -551) (undo-tree-id518 . -1) (543 . 552) (#("n" 0 1 (fontified t)) . -543) (undo-tree-id519 . -1) (undo-tree-id520 . -1) 544 (532 . 544) (521 . 532) (#("t" 0 1 (fontified t face font-lock-variable-name-face)) . -521) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (#("e" 0 1 (fontified t face font-lock-variable-name-face)) . -522) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (#("x" 0 1 (fontified t face font-lock-variable-name-face)) . -523) (undo-tree-id525 . -1) (undo-tree-id526 . -1) 524 (512 . 524) (510 . 512) (#("		" 0 2 (fontified nil)) . 509) (undo-tree-id527 . -2) (undo-tree-id528 . -2) (508 . 512)) nil (25246 5045 315922 700000) 0 nil])
([nil nil ((nil rear-nonsticky nil 553 . 554) (#("
" 0 1 (fontified nil)) . -593) (551 . 594) 550) nil (25246 5045 315909 600000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-variable-name-face)) . -558) (undo-tree-id517 . -1) (558 . 559) (#("task" 0 4 (fontified t face font-lock-variable-name-face)) . 558)) nil (25246 5045 315907 700000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-variable-name-face)) . -558) (undo-tree-id515 . -1) (558 . 559) (#("_detail" 0 7 (fontified t face font-lock-variable-name-face)) . 558) (undo-tree-id516 . 7)) nil (25246 5045 315905 0) 0 nil])
([nil nil ((#("s" 0 1 (fontified t face font-lock-variable-name-face)) . 558) (undo-tree-id514 . 1)) nil (25246 5045 315901 300000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-variable-name-face)) . -568) (undo-tree-id511 . -1) (568 . 569) (#(" " 0 1 (fontified t)) . -568) (undo-tree-id512 . -1) (undo-tree-id513 . -1) 569 (558 . 569)) nil (25246 5045 315898 500000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -591) (undo-tree-id510 . -1) (591 . 592) 568) nil (25246 5045 315890 600000) 0 nil])
([nil nil ((apply -6 593 769 undo--wrap-and-run-primitive-undo 593 769 ((737 . 740) (595 . 598) 762)) (t 25246 5045 317467 300000)) nil (25246 5069 431994 100000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -604) (undo-tree-id582 . -1) (595 . 605) (593 . 595) (#("		" 0 2 (fontified nil)) . 592) (undo-tree-id583 . -2) (undo-tree-id584 . -2) (591 . 595)) nil (25246 5069 431992 500000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -603) (undo-tree-id581 . -1) (603 . 604)) nil (25246 5069 431988 400000) 0 nil])
([nil nil ((#("		println()
" 0 11 (fontified t) 11 12 (fontified t)) . 593) (undo-tree-id578 . 2) (undo-tree-id579 . -9) (undo-tree-id580 . -9) 602) nil (25246 5069 431986 400000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 592) (undo-tree-id577 . 1)) nil (25246 5069 431982 700000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -599) (undo-tree-id574 . -1) (595 . 600) (593 . 595) (#("		" 0 2 (fontified nil)) . 592) (undo-tree-id575 . -2) (undo-tree-id576 . -2) (591 . 595)) nil (25246 5069 431980 500000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -598) (undo-tree-id573 . -1) (598 . 599)) nil (25246 5069 431976 500000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 592) (undo-tree-id572 . 1)) nil (25246 5069 431974 600000) 0 nil])
([nil nil ((#("		if()
" 0 2 (fontified t) 2 4 (fontified t face font-lock-keyword-face) 4 6 (fontified t) 6 7 (fontified t)) . 592) (undo-tree-id568 . 2) (undo-tree-id569 . 1) (undo-tree-id570 . 7) (undo-tree-id571 . -6)) nil (25246 5069 431972 500000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -604) (undo-tree-id565 . -1) (597 . 605) (595 . 597) (593 . 595) (#("		" 0 2 (fontified nil)) . 592) (undo-tree-id566 . -2) (undo-tree-id567 . -2) (591 . 595)) nil (25246 5069 431968 100000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -603) (undo-tree-id564 . -1) (603 . 604)) nil (25246 5069 431963 300000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -604) (undo-tree-id560 . -1) (603 . 605) (#("0" 0 1 (fontified t)) . -603) (undo-tree-id561 . 1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) 604) nil (25246 5069 431960 900000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -605) (undo-tree-id559 . -1) (603 . 606)) nil (25246 5069 431956 100000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -603) (undo-tree-id558 . -1) (602 . 604)) nil (25246 5069 431953 900000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -607) (undo-tree-id557 . -1) (607 . 608) 603) nil (25246 5069 431951 800000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-string-face)) . -607) (undo-tree-id556 . -1) (605 . 608)) nil (25246 5069 431949 400000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -609) (undo-tree-id555 . -1) (609 . 610) 607) nil (25246 5069 431947 200000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -615) (undo-tree-id550 . -1) (612 . 616) (#("s" 0 1 (fontified t)) . -612) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (#("k" 0 1 (fontified t)) . -613) (undo-tree-id553 . -1) (undo-tree-id554 . -1) 614 (608 . 614)) nil (25246 5069 431944 0) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-variable-name-face)) . -516) (undo-tree-id549 . -1) (516 . 517) (#("task" 0 4 (fontified t face font-lock-variable-name-face)) . 516)) nil (25246 5069 431937 200000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-variable-name-face)) . -518) (undo-tree-id547 . -1) (516 . 519) (#("_" 0 1 (fontified t face font-lock-variable-name-face)) . 516) (undo-tree-id548 . 1)) nil (25246 5069 431933 800000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-variable-name-face)) . -520) (undo-tree-id545 . -1) (516 . 521) (#("cwdetails" 0 2 (fontified t face font-lock-variable-name-face) 2 9 (fontified t face font-lock-variable-name-face)) . 516) (undo-tree-id546 . 7)) nil (25246 5069 431927 500000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -608) (undo-tree-id598 . -1) (608 . 609) 594 (t 25246 5069 437467 300000)) nil (25246 5075 123762 400000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -607) (undo-tree-id597 . -1) (607 . 608) (t 25246 5069 437467 300000)) nil (25246 5075 123760 100000) 0 nil])
([nil nil ((#("task_" 0 5 (fontified t)) . 602) (undo-tree-id591 . -4) (undo-tree-id592 . -4) (undo-tree-id593 . -4) (undo-tree-id594 . -5) (undo-tree-id595 . -4) (undo-tree-id596 . -4) 606 (t 25246 5069 437467 300000)) nil (25246 5075 123757 300000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -606) (undo-tree-id585 . -1) (606 . 607) (#("j" 0 1 (fontified t)) . -606) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (#("k" 0 1 (fontified t)) . -607) (undo-tree-id588 . -1) (undo-tree-id589 . -1) 608 (606 . 608) (#("j" 0 1 (fontified t)) . -606) (undo-tree-id590 . -1) (602 . 607)) nil (25246 5075 123748 600000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -591) (undo-tree-id627 . -1) (587 . 592) (585 . 587) (#("		" 0 2 (fontified nil)) . 584) (undo-tree-id628 . -2) (undo-tree-id629 . -2) (583 . 587) (t 25246 5075 127467 300000)) nil (25246 5090 930388 300000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -598) (undo-tree-id626 . -1) (590 . 599)) nil (25246 5090 930372 300000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-type-face)) . -602) (undo-tree-id625 . -1) (598 . 603)) nil (25246 5090 930370 100000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -613) (undo-tree-id614 . -1) (611 . 614) (#("l" 0 1 (fontified t)) . -611) (undo-tree-id615 . -1) (undo-tree-id616 . -1) 612 (607 . 612) (#("n" 0 1 (fontified t)) . -607) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (#("r" 0 1 (fontified t)) . -608) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (#("e" 0 1 (fontified t)) . -609) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (#("a" 0 1 (fontified t)) . -610) (undo-tree-id623 . -1) (undo-tree-id624 . -1) 611 (607 . 611) (603 . 607)) nil (25246 5090 930366 900000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-type-face)) . -608) (undo-tree-id613 . -1) (607 . 609) (#("break" 0 5 (fontified t face font-lock-keyword-face)) . 607)) nil (25246 5090 930354 900000) 0 nil])
([nil nil ((#("			C;
" 0 3 (fontified t) 3 4 (fontified t face font-lock-type-face) 4 5 (fontified t) 5 6 (fontified t)) . 604) (undo-tree-id610 . 2) (undo-tree-id611 . -3) (undo-tree-id612 . -3) 607) nil (25246 5090 930352 100000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -610) (undo-tree-id601 . -1) (610 . 611) (#("	" 0 1 (fontified nil)) . -609) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (610 . 611) (#("|" 0 1 (fontified t)) . -610) (undo-tree-id604 . -1) (undo-tree-id605 . -1) 611 (610 . 611) (#("|" 0 1 (fontified t)) . -610) (undo-tree-id606 . -1) (undo-tree-id607 . -1) 611 (610 . 611) (607 . 610) (#("			" 0 3 (fontified nil)) . 606) (undo-tree-id608 . -3) (undo-tree-id609 . -3) (605 . 610) (603 . 605)) nil (25246 5090 930346 700000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 606) (undo-tree-id600 . 1)) nil (25246 5090 930333 900000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -615) (undo-tree-id599 . -1) (609 . 616) (605 . 609)) nil (25246 5090 930329 100000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -643) (undo-tree-id634 . -1) (643 . 644) 632 (t 25246 5090 937467 300000)) nil (25246 5096 447630 800000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -649) (undo-tree-id633 . -1) (642 . 650) (t 25246 5090 937467 300000)) nil (25246 5096 447714 400000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -649) (undo-tree-id638 . -1) (643 . 650) (#("next" 0 4 (fontified t)) . 643) (undo-tree-id639 . -4) (undo-tree-id640 . -4)) nil (25246 5103 82734 0) 0 nil] [nil nil ((#("j" 0 1 (fontified t)) . -647) (undo-tree-id630 . -1) (647 . 648) (#("())" 0 2 (fontified t) 2 3 (fontified t)) . 647) (undo-tree-id631 . 1) (undo-tree-id632 . 1)) ((647 . 650) (#("j" 0 1 (fontified nil)) . 647) (647 . 648)) (25246 5096 447621 0) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -652) (undo-tree-id637 . -1) (652 . 653) 649) nil (25246 5103 82730 500000) 0 nil])
nil
([nil nil ((#("j" 0 1 (fontified t)) . -663) (undo-tree-id636 . -1) (651 . 664)) nil (25246 5103 82727 500000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -665) (undo-tree-id635 . -1) (664 . 666)) nil (25246 5103 82722 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 620) (t 25246 5103 77467 300000)) nil (25246 5104 626512 300000) 0 nil])
([nil nil ((nil rear-nonsticky nil 666 . 667) (#("
" 0 1 (fontified nil)) . -709) (664 . 710) 620 (t 25246 5104 627467 300000)) nil (25246 5110 94379 900000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -692) (undo-tree-id641 . -1) (682 . 693) (#("text" 0 4 (fontified t)) . 682)) nil (25246 5110 94375 500000) 0 nil])
([nil nil ((589 . 590) (#("(" 0 1 (fontified t)) . 589) (t 25246 5110 107467 300000)) nil (25246 5124 555783 0) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -605) (undo-tree-id645 . -1) (605 . 606) 589) nil (25246 5124 555781 200000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . 602)) nil (25246 5124 555777 900000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-type-face)) . -624) (undo-tree-id642 . -1) (604 . 625) (#(" " 0 1 (fontified t)) . -604) (undo-tree-id643 . -1) 605 (603 . 605) (#(" " 0 1 (fontified t)) . -603) (undo-tree-id644 . -1) 604 (603 . 604)) nil (25246 5124 555772 800000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -625) (undo-tree-id646 . -1) (624 . 626) (t 25246 5124 557467 300000)) nil (25246 5125 469455 900000) 0 nil])
([nil nil ((#("		println!(\"{}\", text.unwrap().to_string());
		println!(\"{}\", completion.unwrap().to_string());
" 0 2 (fontified t) 2 10 (fontified t face rust-builtin-formatting-macro) 10 11 (fontified t) 11 12 (fontified t face font-lock-string-face) 12 14 (fontified t face rust-string-interpolation) 14 15 (fontified t face font-lock-string-face) 15 28 (fontified t) 28 42 (fontified t) 42 44 (fontified t) 44 45 (fontified t) 45 46 (fontified t) 46 47 (rear-nonsticky t fontified t) 47 55 (fontified t face rust-builtin-formatting-macro) 55 56 (fontified t) 56 57 (fontified t face font-lock-string-face) 57 59 (fontified t face rust-string-interpolation) 59 60 (fontified t face font-lock-string-face) 60 79 (fontified t) 79 93 (fontified t) 93 95 (fontified t) 95 96 (fontified t)) . 641) (undo-tree-id661 . -84) (undo-tree-id662 . -45) (undo-tree-id663 . -95) (undo-tree-id664 . -39) (undo-tree-id665 . -84) (undo-tree-id666 . -17) (undo-tree-id667 . -22) (undo-tree-id668 . -84) (undo-tree-id669 . -96) (undo-tree-id670 . -39) (undo-tree-id671 . -84) (undo-tree-id672 . -45) (undo-tree-id673 . -84) 725 (t 25246 5125 467467 300000)) nil (25246 5165 320941 0) 0 nil])
([nil nil ((apply 3 642 781 undo--wrap-and-run-primitive-undo 642 781 ((#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -644)))) nil (25246 5165 320912 900000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -681) (undo-tree-id654 . -1) (677 . 682) (#("task_details.next()" 0 19 (fontified t)) . 677) (undo-tree-id655 . -18) (undo-tree-id656 . -18) (undo-tree-id657 . -18) (undo-tree-id658 . -19) (undo-tree-id659 . -18) (undo-tree-id660 . -18) 695) nil (25246 5165 320911 200000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -713) (undo-tree-id647 . -1) (704 . 714) (#("task_details.next()" 0 19 (fontified t)) . 704) (undo-tree-id648 . -18) (undo-tree-id649 . -18) (undo-tree-id650 . -18) (undo-tree-id651 . -19) (undo-tree-id652 . -18) (undo-tree-id653 . -18) 722) nil (25246 5165 320903 100000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -705) (undo-tree-id674 . -1) (704 . 706) (t 25246 5165 327467 300000)) nil (25246 5167 23498 300000) 0 nil])
([nil nil ((apply 3 757 788 undo--wrap-and-run-primitive-undo 757 788 ((#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -759) 789)) (t 25246 5167 27467 300000)) nil (25246 5171 402684 600000) 0 nil])
([nil nil ((apply -18 806 907 undo--wrap-and-run-primitive-undo 806 907 ((902 . 905) (895 . 898) (872 . 875) (854 . 857) (842 . 845) (807 . 810))) (t 25246 5171 397467 300000)) nil (25246 5184 712402 600000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -1980) (undo-tree-id687 . -1) (1967 . 1981) (1966 . 1967) (#("	" 0 1 (fontified nil)) . 1965) (undo-tree-id688 . -1) (1964 . 1967) (t 25246 5184 707467 300000)) nil (25246 5224 439805 200000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -1986) (undo-tree-id682 . -1) (1986 . 1987) (#("	" 0 1 (fontified nil)) . -1985) (undo-tree-id683 . -1) (1986 . 1987) (1984 . 1986) (#("		" 0 2 (fontified nil)) . 1983) (undo-tree-id684 . -2) (1982 . 1986) (1980 . 1982) (#("{" 0 1 (fontified t)) . -1980) (undo-tree-id685 . -1) 1981 (1979 . 1981) (#("0" 0 1 (fontified t)) . -1979) (undo-tree-id686 . -1) 1980) nil (25246 5224 439800 700000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -1982) (undo-tree-id681 . -1) (1982 . 1983) 1967) nil (25246 5224 439793 0) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-type-face)) . -1989) (undo-tree-id678 . -1) (1988 . 1990) (1987 . 1988) (#("s" 0 1 (fontified t face font-lock-type-face)) . -1987) (undo-tree-id679 . -1) 1988 (1979 . 1988) (#("T" 0 1 (fontified t face font-lock-type-face)) . -1979) (undo-tree-id680 . -1) 1980 (1979 . 1980)) nil (25246 5224 439789 600000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1993)) nil (25246 5224 439784 100000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2000) (undo-tree-id677 . -1) (1995 . 2001) (1992 . 1995)) nil (25246 5224 439782 800000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-variable-name-face)) . -1986) (undo-tree-id676 . -1) (1979 . 1987)) nil (25246 5224 439779 400000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -1984) (undo-tree-id675 . -1) (1980 . 1985)) nil (25246 5224 439761 900000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2023) (undo-tree-id690 . -1) (2017 . 2024) (2011 . 2017) (t 25246 5224 437467 300000)) nil (25246 5230 618963 400000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2026) (undo-tree-id689 . -1) (2022 . 2027)) nil (25246 5230 618958 900000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2028) (undo-tree-id691 . -1) (2027 . 2029) (t 25246 5230 617467 300000)) nil (25246 5231 587779 800000) 0 nil])
([nil nil ((#("	// println!(\"{}\", contents);
" 0 1 (fontified t) 1 4 (fontified t face font-lock-comment-delimiter-face) 4 12 (fontified t face font-lock-comment-face) 12 13 (fontified t face font-lock-comment-face) 13 14 (fontified t face font-lock-comment-face) 14 16 (fontified t face font-lock-comment-face) 16 17 (fontified t face font-lock-comment-face) 17 27 (fontified t face font-lock-comment-face) 27 30 (fontified t face font-lock-comment-face)) . 347) (undo-tree-id692 . -28) (undo-tree-id693 . -5) (undo-tree-id694 . -5) 352 (t 25246 5231 587467 300000)) nil (25246 5248 663144 600000) 0 nil])
([nil nil ((#("	" 0 1 (fontified nil)) . -347) (undo-tree-id708 . -1) (undo-tree-id709 . -1) 348 (#("j" 0 1 (fontified t)) . -348) (undo-tree-id710 . -1) (347 . 349) (347 . 348) 352 (t 25246 5248 657467 300000)) nil (25246 5259 549517 100000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-type-face)) . -361) (undo-tree-id705 . -1) (349 . 362) (348 . 349) (#("	" 0 1 (fontified nil)) . 347) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (346 . 349)) nil (25246 5259 549511 700000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -357) (undo-tree-id702 . -1) (355 . 358) (#(" " 0 1 (fontified t)) . -355) (undo-tree-id703 . -1) (undo-tree-id704 . -1) 356 (353 . 356)) nil (25246 5259 549506 400000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -384) (undo-tree-id695 . -1) (376 . 385) (368 . 376) (#("n" 0 1 (fontified t)) . -368) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (#("e" 0 1 (fontified t)) . -369) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (#("w" 0 1 (fontified t)) . -370) (undo-tree-id700 . -1) (undo-tree-id701 . -1) 371 (365 . 371)) nil (25246 5259 549498 200000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -665) (undo-tree-id716 . -1) (653 . 666) (#("let curr_task: Task =" 0 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t) 4 9 (fontified t face font-lock-variable-name-face) 9 13 (fontified t face font-lock-variable-name-face) 13 15 (fontified t) 15 19 (fontified t face font-lock-type-face) 19 21 (fontified t)) . 653) (undo-tree-id717 . -20) (undo-tree-id718 . -20) (undo-tree-id719 . -20) (undo-tree-id720 . -21) (undo-tree-id721 . -20) (undo-tree-id722 . -20) 673 (t 25246 5259 557467 300000)) nil (25246 5290 541240 600000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 665) (undo-tree-id714 . 1) (undo-tree-id715 . 1)) nil (25246 5290 541233 200000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -756) (undo-tree-id711 . -1) (754 . 757) (#(";" 0 1 (fontified t)) . -754) (undo-tree-id712 . -1) (undo-tree-id713 . -1) 755) nil (25246 5290 541225 900000) 0 nil])
([nil nil ((#("		println!(\"{:?}\", curr_task);
" 0 2 (fontified t) 2 10 (fontified t face rust-builtin-formatting-macro) 10 11 (fontified t) 11 12 (fontified t face font-lock-string-face) 12 16 (fontified t face rust-string-interpolation) 16 17 (fontified t face font-lock-string-face) 17 28 (fontified t) 28 30 (fontified t) 30 31 (fontified t)) . 757) (undo-tree-id723 . -13) (undo-tree-id724 . -13) (undo-tree-id725 . -29) (undo-tree-id726 . -29) (undo-tree-id727 . -29) 786 (t 25246 5290 537467 300000)) nil (25246 5293 139021 300000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-variable-name-face)) . -357) (undo-tree-id728 . -1) (353 . 358) (t 25246 5293 137467 300000)) nil (25246 5338 374212 500000) 0 nil])
([nil nil ((#("	" 0 1 (fontified nil)) . -442) (undo-tree-id791 . -1) (undo-tree-id792 . -1) 443 (#("j" 0 1 (fontified t)) . -443) (undo-tree-id793 . -1) (442 . 444) (442 . 443) 443 (t 25246 5339 377467 300000)) nil (25246 5344 668043 800000) 0 nil] [nil nil ((#("j" 0 1 (fontified t)) . -778) (undo-tree-id729 . -1) (766 . 779) (765 . 766) (#("	" 0 1 (fontified nil)) . 764) (undo-tree-id730 . -1) (763 . 766) (t 25246 5306 647467 300000)) ((#("
	
" 0 1 (fontified t) 1 2 (fontified nil) 2 3 (fontified nil)) . 763) (undo-tree-id761 . 3) (undo-tree-id762 . -3) (undo-tree-id763 . -3) (undo-tree-id764 . -3) (undo-tree-id765 . -1) (undo-tree-id766 . 3) (undo-tree-id767 . -3) (undo-tree-id768 . -3) (undo-tree-id769 . -3) (undo-tree-id770 . -3) (undo-tree-id771 . -3) (undo-tree-id772 . -3) (undo-tree-id773 . -3) (undo-tree-id774 . -3) (764 . 765) (#("	" 0 1 (fontified nil)) . 765) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (#("tl.display()j" 0 12 (fontified nil) 12 13 (fontified nil)) . 766) (undo-tree-id783 . -12) (undo-tree-id784 . -12) (undo-tree-id785 . -12) (undo-tree-id786 . -12) (undo-tree-id787 . -12) (undo-tree-id788 . -11) (undo-tree-id789 . -12) (undo-tree-id790 . -11) (778 . 779)) (25246 5337 906448 500000) 0 nil])
([nil nil ((#("	let mut tl: TaskList = TaskList::new();
" 0 1 (fontified t) 1 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t) 5 8 (fontified t face font-lock-keyword-face) 8 9 (fontified t) 9 11 (fontified t face font-lock-variable-name-face) 11 13 (fontified t) 13 21 (fontified t face font-lock-type-face) 21 24 (fontified t) 24 32 (fontified t face font-lock-type-face) 32 40 (fontified t) 40 41 (fontified t)) . 348) (undo-tree-id803 . -41) (undo-tree-id804 . -5) (undo-tree-id805 . -1) (undo-tree-id806 . -1) 349 (t 25246 5344 667467 300000)) nil (25246 5350 337700 100000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -779) (undo-tree-id732 . -1) (778 . 780) (t 25246 5313 777467 300000)) ((#(";j" 0 1 (fontified nil) 1 2 (fontified nil)) . 778) (779 . 780) (t 25246 5331 637467 300000)) (25246 5330 911912 600000) 0 nil])
([nil nil ((nil rear-nonsticky nil 271 . 272) (271 . 312)) nil (25246 5350 337695 700000) 0 nil])
([nil nil ((#("	tl.display();
" 0 14 (fontified t) 14 15 (fontified t)) . 765) (undo-tree-id737 . 1) (undo-tree-id738 . -13) (undo-tree-id739 . -13) (undo-tree-id740 . -13) (undo-tree-id741 . -13) 778 (t 25246 5314 577467 300000)) ((765 . 780)) (25246 5330 480643 400000) 0 nil])
([nil nil ((#("

" 0 1 (fontified t) 1 2 (fontified t)) . 388) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -2) (undo-tree-id802 . -1)) nil (25246 5350 337693 500000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 764) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1)) ((764 . 765)) (25246 5330 45574 800000) 0 nil])
([nil nil ((#("	" 0 1 (fontified nil)) . -312) (undo-tree-id794 . -1) (undo-tree-id795 . -1) 313 (#("j" 0 1 (fontified t)) . -313) (undo-tree-id796 . -1) (312 . 314) (312 . 313)) nil (25246 5350 337684 400000) 0 nil])
([nil nil ((#("	" 0 1 (fontified nil)) . -765) (undo-tree-id751 . -1) (undo-tree-id752 . -1) 766 (#("j" 0 1 (fontified t)) . -766) (undo-tree-id753 . -1) (765 . 767) (#("	" 0 1 (fontified nil)) . 764) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (763 . 766) (t 25246 5323 927467 300000)) ((#("
	
" 0 1 (fontified t) 1 2 (fontified nil) 2 3 (fontified nil)) . 763) (undo-tree-id756 . 1) (undo-tree-id757 . -1) (undo-tree-id758 . -2) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (764 . 765) (#("	j" 0 1 (fontified nil) 1 2 (fontified nil)) . 765) (765 . 767)) (25246 5329 925961 100000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -270) (undo-tree-id808 . -1) (270 . 271) 255 (t 25246 5350 337467 300000)) nil (25246 5356 486631 900000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 764) (undo-tree-id750 . 1)) ((764 . 765)) (25246 5329 822608 0) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -282) (undo-tree-id807 . -1) (273 . 283) (269 . 273) (t 25246 5350 337467 300000)) nil (25246 5356 486625 900000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 764) (undo-tree-id743 . 1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . 1)) ((764 . 765) (t 25246 5329 467467 300000)) (25246 5329 460360 800000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -781) (undo-tree-id809 . -1) (780 . 782) (#("a" 0 1 (fontified t)) . -780) (undo-tree-id810 . -1) (undo-tree-id811 . -1) 781 (779 . 781) (778 . 779) (#("	" 0 1 (fontified nil)) . 777) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (776 . 779) (t 25246 5356 487467 300000)) nil (25246 5360 187449 500000) 0 nil])
nil
([nil nil ((apply 120 2052 3315 undo--wrap-and-run-primitive-undo 2052 3315 ((#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -3276) (#<marker at 1642 in main.rs> . -1) (#<marker at 1642 in main.rs> . -1) (#<marker at 1566 in main.rs> . -1) (#<marker in no buffer> . -1) (#<marker in no buffer> . -1) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -3232) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -3194) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -3158) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -3154) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -3131) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -3104) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -3100) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -3089) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -2994) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -2988) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -2982) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -2952) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -2915) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -2858) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -2852) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -2837) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -2801) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -2766) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -2760) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -2754) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -2724) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -2687) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -2652) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -2646) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -2640) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -2610) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -2547) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -2512) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -2472) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -2452) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -2425) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -2371) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -2349) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -2326) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -2269) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -2213) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -2157) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -2101) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -2053) (#<marker at 1566 in main.rs> . -1) (#<marker in no buffer> . -1) (#<marker at 2639 in main.rs> . -1) (#<marker in no buffer> . -1) 3394)) (t 25246 5360 187467 300000)) nil (25246 5383 373565 100000) 0 nil])
([nil nil (2053) nil (25246 5383 373564 0) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-comment-face)) . -2056) (undo-tree-id824 . -1) (2053 . 2057)) nil (25246 5383 373563 0) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2136) (undo-tree-id819 . -1) (2124 . 2137) (2116 . 2124) (#(")" 0 1 (fontified t)) . -2116) (undo-tree-id820 . -1) (undo-tree-id821 . -1) 2117 (2104 . 2117) (2103 . 2104) (#("	" 0 1 (fontified nil)) . 2102) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (2101 . 2104)) nil (25246 5383 373559 800000) 0 nil])
([nil nil ((#("	read_file();
" 0 3 (fontified t) 3 14 (fontified t)) . 2038) (undo-tree-id814 . -14) (undo-tree-id815 . -11) (undo-tree-id816 . -11) (undo-tree-id817 . -12) (undo-tree-id818 . -12) 2050) nil (25246 5383 373545 200000) 0 nil])
([nil nil ((apply -12 2124 2361 undo--wrap-and-run-primitive-undo 2124 2361 ((2302 . 2305) (2243 . 2246) (2184 . 2187) (2125 . 2128) 2348)) (t 25246 5383 377467 300000)) nil (25246 5398 843730 100000) 0 nil])
([nil nil ((#("	// todo_list.todos.push(Task::new(\"Task 1\".to_string()));
	// todo_list.todos.push(Task::new(\"Task 2\".to_string()));
	// todo_list.todos.push(Task::new(\"Task 3\".to_string()));
	// todo_list.todos.push(Task::new(\"Task 4\".to_string()));
" 0 1 (fontified t) 1 4 (fontified t face font-lock-comment-delimiter-face) 4 25 (fontified t face font-lock-comment-face) 25 29 (fontified t face font-lock-comment-face) 29 35 (fontified t face font-lock-comment-face) 35 43 (fontified t face font-lock-comment-face) 43 59 (fontified t face font-lock-comment-face) 59 60 (fontified t) 60 63 (fontified t face font-lock-comment-delimiter-face) 63 84 (fontified t face font-lock-comment-face) 84 88 (fontified t face font-lock-comment-face) 88 94 (fontified t face font-lock-comment-face) 94 102 (fontified t face font-lock-comment-face) 102 118 (fontified t face font-lock-comment-face) 118 119 (fontified t) 119 122 (fontified t face font-lock-comment-delimiter-face) 122 143 (fontified t face font-lock-comment-face) 143 147 (fontified t face font-lock-comment-face) 147 153 (fontified t face font-lock-comment-face) 153 161 (fontified t face font-lock-comment-face) 161 177 (fontified t face font-lock-comment-face) 177 178 (fontified t) 178 181 (fontified t face font-lock-comment-delimiter-face) 181 184 (fontified t face font-lock-comment-face) 184 202 (fontified t face font-lock-comment-face) 202 206 (fontified t face font-lock-comment-face) 206 209 (fontified t face font-lock-comment-face) 209 212 (fontified t face font-lock-comment-face) 212 220 (fontified t face font-lock-comment-face) 220 223 (fontified t face font-lock-comment-face) 223 236 (fontified t face font-lock-comment-face)) . 2124) (undo-tree-id826 . -192) (undo-tree-id827 . -15) (undo-tree-id828 . -192) (undo-tree-id829 . -15) (undo-tree-id830 . -15) (undo-tree-id831 . -15) (undo-tree-id832 . -15) (undo-tree-id833 . -15) (undo-tree-id834 . -192) (undo-tree-id835 . -236) (undo-tree-id836 . -15) (undo-tree-id837 . -192) (undo-tree-id838 . -177) (undo-tree-id839 . -192) 2316 (t 25246 5398 847467 300000)) nil (25246 5415 875514 300000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2124) (undo-tree-id825 . 1)) nil (25246 5415 875499 200000) 0 nil])
([nil nil ((#("	// let mut todo_list:TaskList = TaskList::new();
" 0 1 (fontified t) 1 4 (fontified t face font-lock-comment-delimiter-face) 4 6 (fontified t face font-lock-comment-face) 6 7 (fontified t face font-lock-comment-face) 7 8 (fontified t face font-lock-comment-face) 8 11 (fontified t face font-lock-comment-face) 11 12 (fontified t face font-lock-comment-face) 12 21 (fontified t face font-lock-comment-face) 21 22 (fontified t face font-lock-comment-face) 22 29 (fontified t face font-lock-comment-face) 29 30 (fontified t face font-lock-comment-face) 30 33 (fontified t face font-lock-comment-face) 33 41 (fontified t face font-lock-comment-face) 41 49 (fontified t face font-lock-comment-face) 49 50 (fontified t face font-lock-comment-face)) . 2038) (undo-tree-id840 . -1) (undo-tree-id841 . -4) (undo-tree-id842 . -4) 2042 (t 25246 5415 877467 300000)) nil (25246 5419 299254 300000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2038)) nil (25246 5419 299239 100000) 0 nil])
([nil nil ((#("	// fn new(name: String) -> Task {
	// 	Task {
	// 		text: name,
	// 		completed: false
	// 	}
	// }
" 0 1 (fontified t) 1 4 (fontified t face font-lock-comment-delimiter-face) 4 6 (fontified t face font-lock-comment-face) 6 7 (fontified t face font-lock-comment-face) 7 10 (fontified t face font-lock-comment-face) 10 11 (fontified t face font-lock-comment-face) 11 15 (fontified t face font-lock-comment-face) 15 17 (fontified t face font-lock-comment-face) 17 23 (fontified t face font-lock-comment-face) 23 26 (fontified t face font-lock-comment-face) 26 27 (syntax-table (1) fontified t face font-lock-comment-face) 27 28 (fontified t face font-lock-comment-face) 28 32 (fontified t face font-lock-comment-face) 32 34 (fontified t face font-lock-comment-face) 34 35 (fontified t face font-lock-comment-face) 35 36 (fontified t) 36 39 (fontified t face font-lock-comment-delimiter-face) 39 40 (fontified t face font-lock-comment-delimiter-face) 40 44 (fontified t face font-lock-comment-face) 44 47 (fontified t face font-lock-comment-face) 47 48 (fontified t) 48 51 (fontified t face font-lock-comment-delimiter-face) 51 53 (fontified t face font-lock-comment-delimiter-face) 53 57 (fontified t face font-lock-comment-face) 57 65 (fontified t face font-lock-comment-face) 65 66 (fontified t) 66 69 (fontified t face font-lock-comment-delimiter-face) 69 70 (fontified t face font-lock-comment-delimiter-face) 70 71 (fontified t face font-lock-comment-delimiter-face) 71 80 (fontified t face font-lock-comment-face) 80 82 (fontified t face font-lock-comment-face) 82 87 (fontified t face font-lock-comment-face) 87 88 (fontified t face font-lock-comment-face) 88 89 (fontified t) 89 92 (fontified t face font-lock-comment-delimiter-face) 92 93 (fontified t face font-lock-comment-delimiter-face) 93 94 (fontified t face font-lock-comment-face) 94 95 (fontified t face font-lock-comment-face) 95 96 (fontified t) 96 99 (fontified t face font-lock-comment-delimiter-face) 99 101 (fontified t face font-lock-comment-face)) . 797) (undo-tree-id844 . -95) (undo-tree-id845 . -95) (undo-tree-id846 . -96) (undo-tree-id847 . -7) (undo-tree-id848 . -7) (undo-tree-id849 . -95) (undo-tree-id850 . -101) (undo-tree-id851 . -95) (undo-tree-id852 . -95) (undo-tree-id853 . -95) 892 (t 25246 5419 297467 300000)) nil (25246 5469 433873 600000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 797) (undo-tree-id843 . 1)) nil (25246 5469 433861 800000) 0 nil])
([nil nil ((nil fontified t 801 . 803) (nil face font-lock-function-name-face 801 . 803) (nil fontified t 800 . 801) (nil face font-lock-function-name-face 800 . 801) (#("new_" 0 2 (fontified t face font-lock-function-name-face) 2 4 (fontified t face font-lock-function-name-face)) . 800) (804 . 807) (nil fontified t 690 . 691) (t 25246 5469 437467 300000) (#("new_" 0 3 (fontified t) 3 4 (fontified t)) . 688) (t 25246 5469 437467 300000) (692 . 695) (t 25246 5469 437467 300000)) nil (25246 5474 254112 300000) 0 nil])
([nil nil ((#("		" 0 2 (fontified nil)) . -1017) (undo-tree-id863 . -2) 1019 (#("j" 0 1 (fontified t)) . -1019) (undo-tree-id864 . -1) (1016 . 1020) (t 25246 5474 257467 300000)) nil (25246 5516 406100 300000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1017) (undo-tree-id862 . 1)) nil (25246 5516 406096 500000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-string-face)) . -1638) (undo-tree-id861 . -1) (1638 . 1639)) nil (25246 5516 406094 300000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-preprocessor-face)) . -1632) (undo-tree-id860 . -1) (1632 . 1633)) nil (25246 5516 406091 900000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-preprocessor-face)) . -1635) (undo-tree-id859 . -1) (1633 . 1636)) nil (25246 5525 862574 300000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -1685) (undo-tree-id878 . -1) (1675 . 1686) (1672 . 1675) (t 25246 5527 7467 300000)) nil (25246 5540 602304 300000) 0 nil] [nil nil ((#("j" 0 1 (fontified t face font-lock-string-face)) . -1653) (undo-tree-id854 . -1) (1653 . 1654) (#("j" 0 1 (fontified t face font-lock-string-face)) . -1653) (undo-tree-id855 . -1) (#("k" 0 1 (fontified t face font-lock-string-face)) . -1654) (undo-tree-id856 . -1) (#(":" 0 1 (fontified t face font-lock-string-face)) . -1655) (undo-tree-id857 . -1) 1656 (1653 . 1656) (#("j" 0 1 (fontified t face font-lock-string-face)) . -1653) (undo-tree-id858 . -1) (1640 . 1654)) ((#("TODO\\--------j" 0 5 (fontified nil face font-lock-string-face) 5 13 (fontified nil face font-lock-string-face) 13 14 (fontified nil face font-lock-string-face)) . 1640) (undo-tree-id866 . 9) (undo-tree-id867 . -5) (undo-tree-id868 . -5) (undo-tree-id869 . -5) (1653 . 1654) (#("jk:" 0 1 (fontified nil face font-lock-string-face) 1 2 (fontified nil face font-lock-string-face) 2 3 (fontified nil face font-lock-string-face)) . 1653) (1653 . 1656) (#("j" 0 1 (fontified nil face font-lock-string-face)) . 1653) (1653 . 1654)) (25246 5525 219746 400000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -1686) (undo-tree-id877 . -1) (1684 . 1687)) nil (25246 5540 602302 0) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-string-face)) . -1646) (undo-tree-id865 . -1) (1645 . 1647) (t 25246 5516 407467 300000)) ((#("nj" 0 1 (fontified nil face font-lock-string-face) 1 2 (fontified nil face font-lock-string-face)) . 1645) (1646 . 1647) (t 25246 5518 567467 300000)) (25246 5518 565505 600000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-string-face)) . -1685) (undo-tree-id876 . -1) (1685 . 1686)) nil (25246 5540 602300 200000) 0 nil])
nil
([nil nil ((#("l" 0 1 (fontified t face rust-builtin-formatting-macro)) . 1633)) nil (25246 5540 602298 300000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t face font-lock-preprocessor-face)) . 1633)) nil (25246 5540 602297 500000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -1685) (undo-tree-id875 . -1) (1685 . 1686) 1678) nil (25246 5540 602296 400000) 0 nil])
([nil nil ((#("			" 0 3 (fontified nil)) . -1686) (undo-tree-id873 . -3) 1689 (#("j" 0 1 (fontified t)) . -1689) (undo-tree-id874 . -1) (1685 . 1690) 1683) nil (25246 5540 602293 100000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1686) (undo-tree-id872 . 1)) nil (25246 5540 602289 200000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -1686) (undo-tree-id871 . -1) (1685 . 1687)) nil (25246 5540 602286 600000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-string-face)) . -1697) (undo-tree-id870 . -1) (1689 . 1698) (1683 . 1689)) nil (25246 5540 602278 0) 0 nil])
([nil nil ((#("		println!(\"TODO\\n--------\");
" 0 2 (fontified t) 2 10 (fontified t face rust-builtin-formatting-macro) 10 11 (fontified t) 11 27 (fontified t face font-lock-string-face) 27 29 (fontified t) 29 30 (fontified t)) . 1671) (undo-tree-id879 . 4) (undo-tree-id880 . -25) (undo-tree-id881 . -25) (undo-tree-id882 . -25) 1696 (t 25246 5540 607467 300000)) nil (25246 5548 317839 600000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1968) (undo-tree-id883 . -1) (t 25246 5548 317467 300000)) nil (25246 5568 196708 300000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -1389) (undo-tree-id892 . -1) (1389 . 1390) (#("	" 0 1 (fontified nil)) . -1388) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (1389 . 1390) (1387 . 1389) (#("		" 0 2 (fontified nil)) . 1386) (undo-tree-id895 . -2) (undo-tree-id896 . -2) (1385 . 1389) (1375 . 1385) (1374 . 1375) (#("	" 0 1 (fontified nil)) . 1373) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (1372 . 1375) (t 25246 5568 197467 300000)) nil (25246 5605 796692 800000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1386) (undo-tree-id891 . 1)) nil (25246 5605 796683 500000) 0 nil])
([nil nil ((#("		" 0 2 (fontified nil)) . -1386) (undo-tree-id888 . -2) (undo-tree-id889 . -2) 1388 (#("j" 0 1 (fontified t)) . -1388) (undo-tree-id890 . -1) (1385 . 1389)) nil (25246 5605 796680 800000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -1385) (undo-tree-id887 . -1) (1385 . 1386) 1374) nil (25246 5605 796673 200000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -1391) (undo-tree-id884 . -1) (1383 . 1392) (#("u" 0 1 (fontified t)) . -1383) (undo-tree-id885 . -1) (undo-tree-id886 . -1) 1384 (1382 . 1384)) nil (25246 5605 796667 100000) 0 nil])
([nil nil ((#("				if todo_list.selected + 1 < todo_list.todos.len() as i32 {
					todo_list.selected += 1;
				}
" 0 1 (fontified t) 1 4 (fontified t) 4 6 (fontified t face font-lock-keyword-face) 6 7 (fontified t) 7 17 (fontified t) 17 18 (fontified t) 18 30 (fontified t) 30 31 (syntax-table (1) fontified t) 31 53 (fontified t) 53 54 (fontified t) 54 56 (fontified t face font-lock-keyword-face) 56 57 (fontified t) 57 60 (fontified t face font-lock-type-face) 60 63 (fontified t) 63 64 (fontified t) 64 68 (fontified t) 68 93 (fontified t) 93 94 (fontified t) 94 97 (fontified t) 97 99 (fontified t)) . 2215) (undo-tree-id917 . -97) (undo-tree-id918 . -97) (undo-tree-id919 . -4) (undo-tree-id920 . -4) (undo-tree-id921 . -4) (undo-tree-id922 . -97) 2219 (t 25246 5605 807467 300000)) nil (25246 5642 842395 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1398 . 1399) (#("
" 0 1 (fontified nil)) . -1493) (1394 . 1494) 1374) nil (25246 5642 842389 0) 0 nil])
([nil nil ((#("				" 0 1 (fontified nil) 1 4 (fontified nil)) . -1483) (undo-tree-id911 . -4) (undo-tree-id912 . -4) (undo-tree-id913 . -4) (undo-tree-id914 . -4) (1482 . 1483) (#("					" 0 1 (fontified nil) 1 5 (fontified nil)) . -1457) (1455 . 1457) (#("				" 0 1 (fontified nil) 1 3 (fontified nil) 3 4 (fontified nil rear-nonsticky t)) . -1396) (undo-tree-id915 . -4) (undo-tree-id916 . -4) (1395 . 1396) 1492) nil (25246 5642 842386 400000) 0 nil])
([nil nil ((#("	" 0 1 (fontified nil)) . -1486) (1484 . 1486) (#("		" 0 2 (fontified nil)) . -1459) (1456 . 1459) (#("	" 0 1 (fontified nil)) . -1397) (1395 . 1397) 1484) nil (25246 5642 842378 300000) 0 nil])
([nil nil ((#("	fn inc(&mut self) {
		if todo_list.selected + 1 < todo_list.todos.len() as i32 {
			todo_list.selected += 1;
		}

	}
" 0 1 (fontified t) 1 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t) 4 7 (fontified t face font-lock-function-name-face) 7 8 (fontified t) 8 9 (fontified t face rust-ampersand-face) 9 12 (fontified t face font-lock-keyword-face) 12 13 (fontified t) 13 17 (fontified t face font-lock-keyword-face) 17 20 (fontified t) 20 21 (fontified t) 21 23 (fontified t) 23 25 (fontified t face font-lock-keyword-face) 25 26 (fontified t) 26 36 (fontified t) 36 37 (fontified t) 37 49 (fontified t) 49 50 (fontified t syntax-table (1)) 50 72 (fontified t) 72 73 (fontified t) 73 75 (fontified t face font-lock-keyword-face) 75 76 (fontified t) 76 79 (fontified t face font-lock-type-face) 79 85 (fontified t) 85 112 (fontified t) 112 113 (fontified t) 113 114 (fontified t) 114 115 (fontified t) 115 117 (fontified t) 117 118 (fontified t)) . 1374) (undo-tree-id901 . 101) (undo-tree-id902 . -117) (undo-tree-id903 . -21) (undo-tree-id904 . -113) (undo-tree-id905 . -5) (undo-tree-id906 . -117) (undo-tree-id907 . -16) (undo-tree-id908 . -117) (undo-tree-id909 . -5) (undo-tree-id910 . -117) 1491) nil (25246 5642 842375 400000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1920 . 1921) (#("
" 0 1 (fontified nil)) . -2037) (1919 . 2038) 1917) nil (25246 5642 842365 200000) 0 nil])
([nil nil ((#("	" 0 1 (fontified nil)) . -1920) (undo-tree-id899 . -1) 1921 (#("j" 0 1 (fontified t)) . -1921) (undo-tree-id900 . -1) (1920 . 1922) (1920 . 1921) 1921) nil (25246 5642 842362 300000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2035)) nil (25246 5642 842347 500000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -1941) (undo-tree-id934 . -1) (1941 . 1942) 1922 (t 25246 5642 847467 300000)) nil (25246 5654 431650 600000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -1951) (undo-tree-id933 . -1) (1951 . 1952) (#("_" 0 1 (fontified t)) . 1951) (t 25246 5642 847467 300000)) nil (25246 5654 431647 900000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -1952) (undo-tree-id931 . -1) (1947 . 1953) (#("todolist" 0 8 (fontified t)) . 1947) (undo-tree-id932 . 4)) nil (25246 5654 431644 900000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 1952) (undo-tree-id930 . 1)) nil (25246 5654 431640 400000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2006) (undo-tree-id929 . -1) (2001 . 2007) (#("todo" 0 4 (fontified t)) . 2001)) nil (25246 5654 431638 400000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . 2006) (undo-tree-id928 . 1)) nil (25246 5654 431635 900000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . 2006) (undo-tree-id927 . 1)) nil (25246 5654 431633 800000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 2006) (undo-tree-id926 . 1)) nil (25246 5654 431632 0) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . 2006) (undo-tree-id925 . 1)) nil (25246 5654 431629 500000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 2006) (undo-tree-id924 . 1)) nil (25246 5654 431626 800000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 2006) (undo-tree-id923 . 1)) nil (25246 5654 431621 700000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -1971) (undo-tree-id935 . -1) (1971 . 1972) (#("." 0 1 (fontified t)) . -1971) (undo-tree-id936 . -1) (undo-tree-id937 . -1) 1972 (1967 . 1972) (#("todo_list" 0 5 (fontified t) 5 9 (fontified t)) . 1967) (undo-tree-id938 . -8) (undo-tree-id939 . -8) (undo-tree-id940 . -8) (undo-tree-id941 . -9) (undo-tree-id942 . -8) (undo-tree-id943 . -8) 1975 (t 25246 5654 437467 300000)) nil (25246 5659 768187 100000) 0 nil])
([nil nil ((#("			},
" 0 1 (fontified t) 1 3 (fontified t) 3 6 (fontified t)) . 2293) (undo-tree-id953 . -4) (undo-tree-id954 . -4) 2297 (t 25246 5659 777467 300000)) nil (25246 5674 528995 300000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2307) (undo-tree-id944 . -1) (2295 . 2308) (#(")" 0 1 (fontified t)) . -2295) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (#("l" 0 1 (fontified t)) . -2296) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (#("i" 0 1 (fontified t)) . -2297) (undo-tree-id949 . -1) (undo-tree-id950 . -1) 2298 (2291 . 2298) (#("{" 0 1 (fontified t)) . -2291) (undo-tree-id951 . -1) (undo-tree-id952 . -1) 2292) nil (25246 5674 528984 500000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2307) (undo-tree-id955 . -1) (2306 . 2308) (#(";" 0 1 (fontified t)) . -2306) (undo-tree-id956 . -1) (undo-tree-id957 . -1) 2307 (t 25246 5674 537467 300000)) nil (25246 5677 896798 400000) 0 nil])
([nil nil ((#("				if todo_list.selected - 1 >= 0 {
					todo_list.selected -= 1;
				}
" 0 1 (fontified t) 1 4 (fontified t) 4 6 (fontified t face font-lock-keyword-face) 6 23 (fontified t) 23 30 (fontified t) 30 31 (syntax-table (1) fontified t) 31 37 (fontified t) 37 38 (fontified t) 38 42 (fontified t) 42 62 (fontified t) 62 67 (fontified t) 67 68 (fontified t) 68 71 (fontified t) 71 73 (fontified t)) . 2343) (undo-tree-id999 . -71) (undo-tree-id1000 . -71) (undo-tree-id1001 . -4) (undo-tree-id1002 . -4) (undo-tree-id1003 . -73) (undo-tree-id1004 . -4) (undo-tree-id1005 . -71) (undo-tree-id1006 . -4) 2347 (t 25246 5677 897467 300000)) nil (25246 5711 729961 600000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2019) (undo-tree-id998 . -1) (2019 . 2020) 2016) nil (25246 5711 729940 400000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2033) (undo-tree-id995 . -1) (2025 . 2034) (2024 . 2025) (#("	" 0 1 (fontified nil)) . 2023) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (2022 . 2025)) nil (25246 5711 729937 400000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2037) (undo-tree-id988 . -1) (2037 . 2038) (#("		" 0 2 (fontified nil)) . -2036) (undo-tree-id989 . -2) (undo-tree-id990 . -2) (2038 . 2039) (2036 . 2038) (#("		" 0 2 (fontified nil)) . 2035) (undo-tree-id991 . -2) (undo-tree-id992 . -2) (2034 . 2038) (2033 . 2034) (#(" " 0 1 (fontified t)) . -2033) (undo-tree-id993 . -1) (undo-tree-id994 . -1) 2034 (2033 . 2034)) nil (25246 5711 729878 200000) 0 nil])
([nil nil ((2036 . 2037)) nil (25246 5711 729870 0) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-type-face)) . -2034) (undo-tree-id983 . -1) (2034 . 2035) (2033 . 2034) (#("K" 0 1 (fontified t face font-lock-type-face)) . -2033) (undo-tree-id984 . -1) (undo-tree-id985 . -1) 2034 (2033 . 2034) (#("P" 0 1 (fontified t face font-lock-type-face)) . -2033) (undo-tree-id986 . -1) (undo-tree-id987 . -1) 2034) nil (25246 5711 729868 200000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2039 . 2040) (#("
" 0 1 (fontified nil)) . -2108) (2035 . 2109)) nil (25246 5711 729862 0) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2034) (undo-tree-id980 . -1) (2033 . 2035) (#("P" 0 1 (fontified t face font-lock-type-face)) . -2033) (undo-tree-id981 . -1) (undo-tree-id982 . -1) 2034) nil (25246 5711 729860 100000) 0 nil])
([nil nil ((#("					" 0 1 (fontified nil) 1 5 (fontified nil)) . -2072) (undo-tree-id972 . -3) (undo-tree-id973 . -3) (undo-tree-id974 . -3) (undo-tree-id975 . -3) (undo-tree-id976 . -3) (2070 . 2072) (#("				" 0 1 (fontified nil) 1 3 (fontified nil) 3 4 (rear-nonsticky t fontified nil)) . -2037) (undo-tree-id977 . -3) (undo-tree-id978 . -3) (undo-tree-id979 . -3) (2036 . 2037) 2076) nil (25246 5711 729855 500000) 0 nil])
([nil nil ((#("				" 0 1 (fontified nil) 1 4 (fontified nil)) . -2100) (undo-tree-id969 . 4) (undo-tree-id970 . -3) (undo-tree-id971 . -3) (2097 . 2100) 2100) nil (25246 5711 729845 900000) 0 nil])
([nil nil ((#("			" 0 3 (fontified nil)) . -2099) (undo-tree-id967 . -3) (undo-tree-id968 . -3) (2097 . 2099) 2100) nil (25246 5711 729841 600000) 0 nil])
([nil nil ((#("		" 0 2 (fontified nil)) . -2074) (undo-tree-id962 . -2) (undo-tree-id963 . -2) (undo-tree-id964 . -2) (undo-tree-id965 . -2) (undo-tree-id966 . -2) (2071 . 2074) (#("	" 0 1 (fontified nil)) . -2038) (2036 . 2038) 2072) nil (25246 5711 729837 700000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2035) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (undo-tree-id961 . -1)) nil (25246 5711 729830 400000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2040 . 2041) (nil fontified nil 2032 . 2041) (2032 . 2041) 2031) nil (25246 5711 729815 100000) 0 nil])
([nil nil ((#("			},
" 0 1 (fontified t) 1 3 (fontified t) 3 6 (fontified t)) . 2434) (undo-tree-id1009 . -4) (undo-tree-id1010 . -4) 2438 (t 25246 5711 727467 300000)) nil (25246 5724 237729 700000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2448) (undo-tree-id1007 . -1) (2432 . 2449) (#("{" 0 1 (fontified t)) . -2432) (undo-tree-id1008 . -1) 2433) nil (25246 5724 237723 200000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2448) (undo-tree-id1011 . -1) (2447 . 2449) (#(";" 0 1 (fontified t)) . -2447) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) 2448 (t 25246 5724 237467 300000)) nil (25246 5728 130169 700000) 0 nil])
([nil nil (2077) nil (25246 5741 265902 300000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2046) (undo-tree-id1032 . -1) (2046 . 2047) (t 25246 5728 127467 300000)) nil (25246 5741 265901 100000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2053) (undo-tree-id1023 . -1) (2051 . 2054) (#("f" 0 1 (fontified t)) . -2051) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) 2052 (2049 . 2052) (#("todo_list" 0 9 (fontified t)) . 2049) (undo-tree-id1026 . -8) (undo-tree-id1027 . -8) (undo-tree-id1028 . -8) (undo-tree-id1029 . -9) (undo-tree-id1030 . -8) (undo-tree-id1031 . -8) 2057 (t 25246 5728 127467 300000)) nil (25246 5741 265898 200000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2077) (undo-tree-id1022 . -1) (2077 . 2078) (#("todo" 0 4 (fontified t)) . 2077)) nil (25246 5741 265888 700000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . 2077) (undo-tree-id1021 . 1)) nil (25246 5741 265885 800000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . 2077) (undo-tree-id1020 . 1)) nil (25246 5741 265883 800000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 2077) (undo-tree-id1019 . 1)) nil (25246 5741 265881 600000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . 2077) (undo-tree-id1018 . 1)) nil (25246 5741 265879 300000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 2077) (undo-tree-id1017 . 1)) nil (25246 5741 265876 500000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2081) (undo-tree-id1014 . -1) (2081 . 2082) (#("." 0 1 (fontified t)) . -2081) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) 2082 (2077 . 2082)) nil (25246 5741 265871 700000) 0 nil])
([nil nil ((#("				if todo_list.selected - 1 >= 0 {
					todo_list.selected -= 1;
				}
" 0 1 (fontified t) 1 4 (fontified t) 4 6 (fontified t face font-lock-keyword-face) 6 9 (fontified t) 9 16 (fontified t) 16 21 (fontified t) 21 22 (fontified t) 22 30 (fontified t) 30 31 (syntax-table (1) fontified t) 31 37 (fontified t) 37 38 (fontified t) 38 42 (fontified t) 42 46 (fontified t) 46 67 (fontified t) 67 68 (fontified t) 68 71 (fontified t) 71 73 (fontified t)) . 2588) (undo-tree-id1033 . -71) (undo-tree-id1034 . -71) (undo-tree-id1035 . -4) (undo-tree-id1036 . -4) (undo-tree-id1037 . -4) (undo-tree-id1038 . -71) 2592 (t 25246 5741 267467 300000)) nil (25246 19135 960310 600000) 0 nil])
([nil nil ((#("				if todo_list.todos.len() == 0 {
					continue;
				}
				todo_list.todos.remove(todo_list.selected as usize);
" 0 1 (fontified t) 1 4 (fontified t) 4 6 (fontified t face font-lock-keyword-face) 6 22 (fontified t) 22 24 (fontified t) 24 25 (fontified t) 25 36 (fontified t) 36 37 (fontified t) 37 40 (fontified t) 40 41 (fontified t) 41 45 (fontified t face font-lock-keyword-face) 45 47 (fontified t face font-lock-keyword-face) 47 49 (fontified t face font-lock-keyword-face) 49 51 (fontified t) 51 52 (fontified t) 52 55 (fontified t) 55 57 (fontified t) 57 58 (fontified t) 58 61 (fontified t) 61 62 (fontified t) 62 68 (fontified t) 68 69 (fontified t) 69 74 (fontified t) 74 95 (fontified t) 95 103 (fontified t) 103 105 (fontified t face font-lock-keyword-face) 105 106 (fontified t) 106 111 (fontified t face font-lock-type-face) 111 114 (fontified t)) . 2474) (undo-tree-id1126 . -61) (undo-tree-id1127 . -61) (undo-tree-id1128 . -4) (undo-tree-id1129 . -114) (undo-tree-id1130 . -4) (undo-tree-id1131 . -4) (undo-tree-id1132 . -61) 2478 (t 25246 19109 720247 0)) nil (25246 19153 363269 400000) 0 nil] [nil nil ((#("				if todo_list.todos.len() == 0 {
					continue;
				}
				todo_list.todos.remove(todo_list.selected as usize);
" 0 1 (fontified t) 1 4 (fontified t) 4 6 (fontified t face font-lock-keyword-face) 6 22 (fontified t) 22 24 (fontified t) 24 25 (fontified t) 25 36 (fontified t) 36 37 (fontified t) 37 40 (fontified t) 40 41 (fontified t) 41 45 (fontified t face font-lock-keyword-face) 45 47 (fontified t face font-lock-keyword-face) 47 49 (fontified t face font-lock-keyword-face) 49 51 (fontified t) 51 52 (fontified t) 52 55 (fontified t) 55 57 (fontified t) 57 58 (fontified t) 58 61 (fontified t) 61 62 (fontified t) 62 68 (fontified t) 68 69 (fontified t) 69 74 (fontified t) 74 95 (fontified t) 95 103 (fontified t) 103 105 (fontified t face font-lock-keyword-face) 105 106 (fontified t) 106 111 (fontified t face font-lock-type-face) 111 114 (fontified t)) . 2474) (undo-tree-id1051 . -61) (undo-tree-id1052 . -4) (undo-tree-id1053 . -61) (undo-tree-id1054 . -114) (undo-tree-id1055 . -61) (undo-tree-id1056 . -114) (undo-tree-id1057 . -4) (undo-tree-id1058 . -61) (undo-tree-id1059 . -57) (undo-tree-id1060 . -61) 2535 (t 25246 19109 720247 0)) ((2474 . 2588)) (25246 19135 463748 500000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2131) (undo-tree-id1121 . -1) (2131 . 2132) (#("	" 0 1 (fontified nil)) . -2130) (undo-tree-id1122 . -1) (2131 . 2132) (2129 . 2131) (#("		" 0 2 (fontified nil)) . 2128) (undo-tree-id1123 . -2) (2127 . 2131) (2126 . 2127) (#("{" 0 1 (fontified t)) . -2126) (undo-tree-id1124 . -1) 2127 (2119 . 2127) (2106 . 2119) (2105 . 2106) (#("	" 0 1 (fontified nil)) . 2104) (undo-tree-id1125 . -1) (2103 . 2106)) nil (25246 19153 363258 300000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2126) (undo-tree-id1048 . -1) (2106 . 2127) (2105 . 2106) (#("	" 0 1 (fontified nil)) . 2104) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (2103 . 2106)) ((#("
	
" 0 1 (fontified t) 1 2 (fontified nil) 2 3 (fontified nil)) . 2103) (undo-tree-id1088 . -3) (undo-tree-id1089 . -3) (undo-tree-id1090 . -3) (undo-tree-id1091 . -3) (undo-tree-id1092 . -3) (undo-tree-id1093 . -3) (undo-tree-id1094 . -3) (undo-tree-id1095 . -3) (undo-tree-id1096 . -3) (undo-tree-id1097 . -3) (undo-tree-id1098 . -3) (undo-tree-id1099 . -3) (2104 . 2105) (#("	" 0 1 (fontified nil)) . 2105) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) (#("fn remove_selected()j" 0 2 (fontified nil face font-lock-keyword-face) 2 3 (fontified nil) 3 18 (fontified nil face font-lock-function-name-face) 18 20 (fontified nil) 20 21 (fontified nil)) . 2106) (undo-tree-id1109 . -20) (undo-tree-id1110 . -20) (undo-tree-id1111 . -20) (undo-tree-id1112 . -19) (undo-tree-id1113 . -20) (undo-tree-id1114 . -20) (undo-tree-id1115 . -20) (undo-tree-id1116 . -20) (undo-tree-id1117 . -19) (2126 . 2127)) (25246 19135 138177 400000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2132 . 2133) (#("
" 0 1 (fontified nil)) . -2242) (2128 . 2243)) nil (25246 19153 363247 200000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2131) (undo-tree-id1043 . -1) (2131 . 2132) (#("	" 0 1 (fontified nil)) . -2130) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (2131 . 2132) (2129 . 2131) (#("		" 0 2 (fontified nil)) . 2128) (undo-tree-id1046 . -2) (undo-tree-id1047 . -2) (2127 . 2131) (2126 . 2127)) ((#("{" 0 1 (fontified nil)) . 2126) (undo-tree-id1070 . -1) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (#("
		
" 0 1 (fontified t) 1 3 (fontified nil) 3 4 (fontified nil)) . 2127) (undo-tree-id1079 . 4) (undo-tree-id1080 . -3) (undo-tree-id1081 . 1) (undo-tree-id1082 . -1) (undo-tree-id1083 . -4) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (2128 . 2130) (#("		" 0 1 (fontified nil) 1 2 (fontified nil)) . 2129) (undo-tree-id1086 . -2) (#("}" 0 1 (fontified nil)) . 2131) (undo-tree-id1087 . -1) (2130 . 2131) (#("j" 0 1 (fontified nil)) . 2131) (2131 . 2132)) (25246 19134 776938 500000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2128) (undo-tree-id1120 . -1)) nil (25246 19153 363244 900000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2128) (undo-tree-id1042 . 1)) ((2128 . 2129)) (25246 19134 628291 900000) 0 nil])
([nil nil ((#("		" 0 2 (fontified t)) . -2181) (#("		" 0 2 (fontified t)) . -2177) (#("		" 0 1 (fontified t) 1 2 (fontified t)) . -2165) (#("		" 0 1 (fontified t) 1 2 (fontified t rear-nonsticky t)) . -2130) 2242) nil (25246 19153 363228 900000) 0 nil])
([nil nil ((#("		" 0 2 (fontified nil)) . -2128) (undo-tree-id1039 . -2) (undo-tree-id1040 . -2) 2130 (#("j" 0 1 (fontified t)) . -2130) (undo-tree-id1041 . -1) (2127 . 2131)) ((#("
		j" 0 1 (fontified t) 1 3 (fontified nil) 3 4 (fontified nil)) . 2127) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) (undo-tree-id1067 . -4) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (2128 . 2131)) (25246 19134 567628 200000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2127) (undo-tree-id1119 . -1) (2127 . 2128) 2106) nil (25246 19153 363345 900000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2128 . 2129) (#("
" 0 1 (fontified nil)) . -2129) (2128 . 2130)) ((#("

" 0 1 (fontified nil rear-nonsticky nil) 1 2 (fontified nil)) . 2128) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) (2129 . 2130) (nil rear-nonsticky t 2128 . 2129)) (25246 19134 567466 700000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2134) (undo-tree-id1135 . -1) (2125 . 2135)) nil (25246 19160 504013 700000) 0 nil] [nil nil ((#("j" 0 1 (fontified t face font-lock-function-name-face)) . -2126) (undo-tree-id1118 . -1) (2124 . 2127)) ((#("lij" 0 2 (fontified nil face font-lock-function-name-face) 2 3 (fontified nil face font-lock-function-name-face)) . 2124) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (2126 . 2127)) (25246 19153 363218 100000) 0 nil])
nil
([nil nil ((#("j" 0 1 (fontified t)) . -2146) (undo-tree-id1140 . -1) (2146 . 2147) (#("." 0 1 (fontified t)) . -2146) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) 2147 (2142 . 2147) (#("todo_list" 0 9 (fontified t)) . 2142) (t 25246 19160 520247 0)) nil (25246 19264 232748 700000) 0 nil])
nil
([nil nil ((#("j" 0 1 (fontified t)) . -2190) (undo-tree-id1139 . -1) (2190 . 2191) (#("list" 0 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . 2190)) nil (25246 19264 232740 200000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2189) (undo-tree-id1136 . -1) (2189 . 2190) (#("." 0 1 (fontified t)) . -2189) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) 2190 (2185 . 2190) (#("todo" 0 1 (fontified t) 1 4 (fontified t)) . 2185)) nil (25246 19264 232733 0) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . 2189) (undo-tree-id1143 . 1) (t 25246 19264 240247 0)) nil (25246 19266 264345 700000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2165) (undo-tree-id1156 . -1) (2165 . 2166) 2143 (t 25246 19266 270247 0)) nil (25246 19275 218977 400000) 0 nil])
([nil nil ((#("=" 0 1 (fontified t)) . 2159) (t 25246 19266 270247 0)) nil (25246 19275 218975 100000) 0 nil])
([nil nil ((#("=" 0 1 (fontified t)) . 2159)) nil (25246 19275 218973 900000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2160) (undo-tree-id1155 . -1) (2159 . 2161)) nil (25246 19275 218972 700000) 0 nil])
([nil nil ((#("		self.todos.remove(todo_list.selected as usize);
" 0 1 (fontified t) 1 2 (fontified t) 2 6 (fontified t face font-lock-keyword-face) 6 10 (fontified t) 10 31 (fontified t) 31 39 (fontified t) 39 41 (fontified t face font-lock-keyword-face) 41 42 (fontified t) 42 47 (fontified t face font-lock-type-face) 47 49 (fontified t) 49 50 (fontified t)) . 2182) (undo-tree-id1149 . -50) (undo-tree-id1150 . -49) (undo-tree-id1151 . -50) (undo-tree-id1152 . -6) (undo-tree-id1153 . -22) (undo-tree-id1154 . -22) 2204) nil (25246 19275 218970 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 2166 . 2167) (#("
" 0 1 (fontified nil)) . -2214) (2164 . 2215) 2138) nil (25246 19275 218963 700000) 0 nil])
([nil nil ((#("			continue;
" 0 1 (fontified t) 1 3 (fontified t) 3 7 (fontified t face font-lock-keyword-face) 7 9 (fontified t face font-lock-keyword-face) 9 11 (fontified t face font-lock-keyword-face) 11 13 (fontified t)) . 2215) (undo-tree-id1147 . -2) (undo-tree-id1148 . -2) 2217) nil (25246 19275 218961 300000) 0 nil])
([nil nil ((#("		" 0 1 (fontified nil) 1 2 (fontified nil rear-nonsticky t)) . -2168) (undo-tree-id1144 . -2) (undo-tree-id1145 . -2) (undo-tree-id1146 . -2) (2165 . 2168) 2167) nil (25246 19275 218954 600000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2190) (undo-tree-id1157 . -1) (2190 . 2191) (#("." 0 1 (fontified t)) . -2190) (undo-tree-id1158 . -1) (undo-tree-id1159 . -1) 2191 (2186 . 2191) (#("todo_list" 0 9 (fontified t)) . 2186) (undo-tree-id1160 . -8) (undo-tree-id1161 . -8) (undo-tree-id1162 . -8) (undo-tree-id1163 . -9) (undo-tree-id1164 . -8) (undo-tree-id1165 . -8) 2194 (t 25246 19275 230247 0)) nil (25246 19283 945420 0) 0 nil])
([nil nil ((#("			},
" 0 1 (fontified t) 1 3 (fontified t) 3 5 (fontified t) 5 6 (fontified t)) . 2588) (undo-tree-id1171 . -4) (undo-tree-id1172 . -4) 2592 (t 25246 19283 960247 0)) nil (25246 19292 46556 600000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2614) (undo-tree-id1166 . -1) (2606 . 2615) (2585 . 2606) (#(" " 0 1 (fontified t)) . -2585) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (#("{" 0 1 (fontified t)) . -2586) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) 2587) nil (25246 19292 46549 100000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2222) (undo-tree-id1186 . -1) (2218 . 2223) (2216 . 2218) (#("		" 0 2 (fontified nil)) . 2215) (undo-tree-id1187 . -2) (undo-tree-id1188 . -2) (2214 . 2218) (t 25246 19292 60247 0)) nil (25246 19329 322605 200000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2253) (undo-tree-id1183 . -1) (2247 . 2254) (2226 . 2247) (#("e" 0 1 (fontified t)) . -2226) (undo-tree-id1184 . -1) (undo-tree-id1185 . -1) 2227 (2221 . 2227)) nil (25246 19329 322599 700000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2261) (undo-tree-id1178 . -1) (2261 . 2262) (#("	" 0 1 (fontified nil)) . -2260) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1) (2261 . 2262) (2258 . 2261) (#("			" 0 3 (fontified nil)) . 2257) (undo-tree-id1181 . -3) (undo-tree-id1182 . -3) (2256 . 2261) (2255 . 2256) (2254 . 2255)) nil (25246 19329 322593 300000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2257) (undo-tree-id1177 . 1)) nil (25246 19329 322586 600000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2273) (undo-tree-id1176 . -1) (2260 . 2274) (2256 . 2260)) nil (25246 19329 322584 400000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2237) (undo-tree-id1175 . -1) (2236 . 2238)) nil (25246 19329 322581 600000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2297) (undo-tree-id1174 . -1) (2296 . 2298) (2295 . 2296) (2274 . 2295)) nil (25246 19329 322578 200000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2298) (undo-tree-id1173 . -1) (2297 . 2299)) nil (25246 19329 322571 200000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . 2254) (t 25246 19329 330247 0)) nil (25246 19337 107524 900000) 0 nil])
([nil nil ((2220 . 2221) (#("(" 0 1 (fontified t)) . 2220)) nil (25246 19337 107518 800000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2245) (undo-tree-id1192 . -1) (2235 . 2246) (t 25246 19337 110247 0)) nil (25246 19346 186535 900000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2243)) nil (25246 19346 186533 200000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2245) (undo-tree-id1191 . -1) (2244 . 2246)) nil (25246 19346 186531 300000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2222) (undo-tree-id1189 . -1) (2222 . 2223) (#("*" 0 1 (fontified t)) . -2222) (undo-tree-id1190 . -1) 2223 (2221 . 2223)) nil (25246 19346 186524 700000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2288) (undo-tree-id1198 . -1) (2287 . 2289) (t 25246 19346 200247 0)) nil (25246 19350 953182 400000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2317) (undo-tree-id1193 . -1) (2308 . 2318) (#("0" 0 1 (fontified t)) . -2308) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) 2309 (2308 . 2309) (#(";" 0 1 (fontified t)) . -2308) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) 2309) nil (25246 19350 953175 100000) 0 nil])
([nil nil ((#("		" 0 2 (fontified nil)) . -2322) (undo-tree-id1209 . -2) 2324 (#("j" 0 1 (fontified t)) . -2324) (undo-tree-id1210 . -1) (2321 . 2325) (t 25246 19350 970247 0)) nil (25246 19385 65519 400000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2322) (undo-tree-id1208 . 1)) nil (25246 19385 65515 800000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2222) (undo-tree-id1207 . -1) (2218 . 2223) (2216 . 2218) (2216 . 2217) 2222) nil (25246 19385 65513 600000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2242) (undo-tree-id1206 . -1) (2221 . 2243)) nil (25246 19385 65510 800000) 0 nil])
([nil nil ((#("		if(self.todos.len() == 0)
" 0 2 (fontified t) 2 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t) 5 9 (fontified t face font-lock-keyword-face) 9 26 (fontified t) 26 27 (fontified t) 27 28 (fontified t)) . 2216) (undo-tree-id1204 . 2) (undo-tree-id1205 . -25) 2241) nil (25246 19385 65508 300000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2228) (undo-tree-id1200 . -1) (2228 . 2229) (#("	" 0 1 (fontified nil)) . -2227) (undo-tree-id1201 . -1) (2228 . 2229) (2225 . 2228) (#("			" 0 3 (fontified nil)) . 2224) (undo-tree-id1202 . -3) (2223 . 2228) (2217 . 2223) (2215 . 2217) (#(" " 0 1 (fontified nil)) . 2214) (undo-tree-id1203 . -1) (2215 . 2216) (2214 . 2215)) nil (25246 19385 65503 100000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2224)) nil (25246 19393 817615 800000) 0 nil])
([nil nil ((#("		else {
		}
" 0 2 (fontified t) 2 6 (fontified t face font-lock-keyword-face) 6 8 (fontified t) 8 9 (fontified t) 9 12 (fontified t) 12 13 (fontified t)) . 2215) (undo-tree-id1218 . 5) (undo-tree-id1219 . -12) (undo-tree-id1220 . -7) (undo-tree-id1221 . -12) (undo-tree-id1222 . -9) (undo-tree-id1223 . -12) (undo-tree-id1224 . -8) (undo-tree-id1225 . -12) (undo-tree-id1226 . -8) (undo-tree-id1227 . -13) (undo-tree-id1228 . -7) (undo-tree-id1229 . -12) (undo-tree-id1230 . -9) (undo-tree-id1231 . -12) 2227) nil (25246 19396 487237 0) 0 nil] [nil nil ((#("j" 0 1 (fontified t)) . -2234) (undo-tree-id1199 . -1) (2227 . 2235) (2223 . 2227)) ((#("
			" 0 1 (fontified t) 1 4 (fontified nil)) . 2223) (undo-tree-id1211 . -4) (undo-tree-id1212 . -4) (undo-tree-id1213 . -1) (undo-tree-id1214 . -4) (#("return;j" 0 6 (fontified nil face font-lock-keyword-face) 6 7 (fontified nil) 7 8 (fontified nil)) . 2227) (undo-tree-id1215 . -6) (undo-tree-id1216 . -6) (undo-tree-id1217 . -6) (2234 . 2235) (t 25246 19385 80247 0)) (25246 19385 65488 500000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2222) (undo-tree-id1248 . -1) (2218 . 2223) (2216 . 2218) (2216 . 2217) 2222 (t 25246 19396 500247 0)) nil (25246 19413 431935 100000) 0 nil])
nil
([nil nil ((#("j" 0 1 (fontified t)) . -2237) (undo-tree-id1247 . -1) (2231 . 2238) (2221 . 2231)) nil (25246 19413 431931 200000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2242) (undo-tree-id1246 . -1) (2237 . 2243)) nil (25246 19413 431928 200000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2249) (undo-tree-id1241 . -1) (2249 . 2250) (#("	" 0 1 (fontified nil)) . -2248) (undo-tree-id1242 . -1) (undo-tree-id1243 . -1) (2249 . 2250) (2246 . 2249) (#("			" 0 3 (fontified nil)) . 2245) (undo-tree-id1244 . -3) (undo-tree-id1245 . -3) (2244 . 2249) (2243 . 2244)) nil (25246 19413 431923 900000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2245) (undo-tree-id1240 . 1)) nil (25246 19413 431915 300000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2255) (undo-tree-id1239 . -1) (2248 . 2256) (2244 . 2248)) nil (25246 19413 431912 200000) 0 nil])
([nil nil (2272) nil (25246 19413 431900 400000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2267) (undo-tree-id1232 . -1) (2267 . 2268) (#("k" 0 1 (fontified t)) . -2267) (undo-tree-id1233 . -1) (undo-tree-id1234 . -1) (#(":" 0 1 (fontified t)) . -2268) (undo-tree-id1235 . -1) (undo-tree-id1236 . -1) (#("w" 0 1 (fontified t)) . -2269) (undo-tree-id1237 . -1) (undo-tree-id1238 . -1) 2270 (2262 . 2270)) nil (25246 19450 449501 600000) 0 nil])
([nil nil ((2220 . 2221) (#("(" 0 1 (fontified t)) . 2220) (t 25246 19441 890247 0)) nil (25246 19455 454515 900000) 0 nil] [nil nil ((#("(" 0 1 (fontified t)) . 2270) (undo-tree-id1250 . -1) (t 25246 19441 890247 0)) ((2270 . 2271)) (25246 19449 483547 0) 0 nil] [nil nil ((apply -9 1551 1681 undo--wrap-and-run-primitive-undo 1551 1681 ((1635 . 1638) (1593 . 1596) (1553 . 1556) 1633)) (t 25246 19413 440247 0)) ((apply 9 1551 1672 undo--wrap-and-run-primitive-undo 1551 1672 ((#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . 1553) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . 1593) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . 1635) 1560)) (t 25246 19433 770247 0)) (25246 19433 765653 200000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2244) (undo-tree-id1251 . -1) (2244 . 2245) 2220) nil (25246 19455 454512 900000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2315) (undo-tree-id1249 . -1) (2315 . 2316) 2270) ((#("j" 0 1 (fontified nil)) . 2315) (2315 . 2316)) (25246 19449 483471 500000) 0 nil])
nil
([nil nil ((2242 . 2243) (#(")" 0 1 (fontified t)) . 2242)) nil (25246 19455 454498 200000) 0 nil])
nil
([nil nil ((#("
" 0 1 (fontified t)) . -3094) (undo-tree-id1252 . -1) (undo-tree-id1253 . -1) (undo-tree-id1254 . -1) (undo-tree-id1255 . -1) 3095 (t 25246 19455 470247 0)) nil (25246 19466 332676 300000) 0 nil])
([nil nil ((3094 . 3095)) nil (25246 19466 332658 300000) 0 nil])
([nil nil ((apply -60 2389 3153 undo--wrap-and-run-primitive-undo 2389 3153 ((3111 . 3114) (3064 . 3067) (3023 . 3026) (2984 . 2987) (2977 . 2980) (2951 . 2954) (2921 . 2924) (2914 . 2917) (2900 . 2903) (2802 . 2805) (2737 . 2740) (2684 . 2687) (2631 . 2634) (2588 . 2591) (2565 . 2568) (2535 . 2538) (2478 . 2481) (2453 . 2456) (2427 . 2430) (2390 . 2393))) (t 25246 19466 340247 0)) nil (25246 19501 82432 200000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2401) (undo-tree-id1257 . -1) (2390 . 2402) (2388 . 2390) (t 25246 19501 100247 0)) nil (25246 19506 912093 600000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2402) (undo-tree-id1256 . -1) (2401 . 2403)) nil (25246 19506 912087 100000) 0 nil])
([nil nil (2401) nil (25246 19519 511277 0) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2416) (undo-tree-id1258 . -1) (2403 . 2417) (#(":" 0 1 (fontified t)) . -2403) (undo-tree-id1259 . -1) (undo-tree-id1260 . -1) 2404 (2390 . 2404) (t 25246 19506 910247 0)) nil (25246 19519 511271 900000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2428) (undo-tree-id1269 . -1) (2428 . 2429) 2415 (t 25246 19519 520247 0)) nil (25246 19577 661016 0) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2426) (undo-tree-id1268 . -1) (2426 . 2427) (t 25246 19519 520247 0)) nil (25246 19577 661013 400000) 0 nil])
([nil nil ((#("	termion::input::TermRead::read_line();
" 0 1 (fontified t) 1 8 (fontified t face font-lock-constant-face) 8 10 (fontified t) 10 15 (fontified t face font-lock-constant-face) 15 17 (fontified t) 17 25 (fontified t face font-lock-type-face) 25 27 (fontified t) 27 36 (fontified t) 36 40 (fontified t)) . 2389) (undo-tree-id1261 . 3) (undo-tree-id1262 . -40) (undo-tree-id1263 . -40) (undo-tree-id1264 . -40) (undo-tree-id1265 . -40) (undo-tree-id1266 . -26) (undo-tree-id1267 . -36) 2425 (t 25246 19519 520247 0)) nil (25246 19577 661010 200000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2533 . 2534) (#("
" 0 1 (fontified nil)) . -2572) (2532 . 2573) 2512) nil (25246 19577 660992 900000) 0 nil])
([nil nil ((apply 12 2389 2521 undo--wrap-and-run-primitive-undo 2389 2521 ((#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -2469) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -2447) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -2424) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -2390)))) nil (25246 19577 660987 900000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2560) (undo-tree-id1271 . -1) (2560 . 2561) 2522 (t 25246 19577 670247 0)) nil (25246 19584 892160 700000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2563) (undo-tree-id1270 . -1) (2558 . 2564) (t 25246 19577 670247 0)) nil (25246 19584 892153 500000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2563) (undo-tree-id1272 . -1) (2558 . 2564) (t 25246 19584 900247 0)) nil (25246 19597 395895 700000) 0 nil])
([nil nil ((#("stdin" 0 5 (fontified t)) . 2563) (undo-tree-id1276 . 5) (t 25246 19597 410247 0)) nil (25246 19605 456333 200000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2564) (undo-tree-id1273 . -1) (2563 . 2565) (#(")" 0 1 (fontified t)) . -2563) (undo-tree-id1274 . -1) (undo-tree-id1275 . -1) 2564 (2563 . 2564)) nil (25246 19605 456326 400000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2539) (undo-tree-id1280 . -1) (2523 . 2540) (2522 . 2523) (#("	" 0 1 (fontified nil)) . 2521) (undo-tree-id1281 . -1) (undo-tree-id1282 . -1) (2520 . 2523) (t 25246 19605 470247 0)) nil (25246 19615 942532 600000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2540) (undo-tree-id1279 . -1) (2539 . 2541)) nil (25246 19615 942526 200000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2586) (undo-tree-id1278 . -1) (2586 . 2587) 2558) nil (25246 19615 942522 600000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . 2583)) nil (25246 19615 942517 800000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2586) (undo-tree-id1277 . -1) (2583 . 2587)) nil (25246 19615 942513 100000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2540) (undo-tree-id1283 . -1) (2540 . 2541) (#(";" 0 1 (fontified t)) . -2540) (undo-tree-id1284 . -1) (undo-tree-id1285 . -1) 2541 (2540 . 2541) (t 25246 19615 960247 0)) nil (25246 19621 227899 100000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2551) (undo-tree-id1286 . -1) (2543 . 2552) (#("S" 0 1 (fontified t)) . -2543) (undo-tree-id1287 . -1) (undo-tree-id1288 . -1) 2544 (2542 . 2544) (#("S" 0 1 (fontified t)) . -2542) (undo-tree-id1289 . -1) (undo-tree-id1290 . -1) 2543 (2539 . 2543) (t 25246 19621 240247 0)) nil (25246 19646 143771 100000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2537) (undo-tree-id1298 . -1) (2537 . 2538) (#("\"\"." 0 2 (fontified t face font-lock-string-face) 2 3 (fontified t)) . 2537) (t 25246 19646 160247 0)) nil (25246 19715 507775 900000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2550) (undo-tree-id1291 . -1) (2537 . 2551) (#("to_string()" 0 11 (fontified t)) . 2537) (undo-tree-id1292 . 11) (undo-tree-id1293 . -10) (undo-tree-id1294 . -10) (undo-tree-id1295 . -10) (undo-tree-id1296 . -10) (undo-tree-id1297 . -10) 2547) nil (25246 19715 507769 0) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2539) (undo-tree-id1300 . -1) (2537 . 2540) (#("String::new()" 0 6 (fontified t face font-lock-type-face) 6 13 (fontified t)) . 2537) (undo-tree-id1301 . -12) (undo-tree-id1302 . -12) (undo-tree-id1303 . -12) (undo-tree-id1304 . -12) (undo-tree-id1305 . -12) 2549 (t 25246 19715 520247 0)) nil (25246 19741 18696 100000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2546) (undo-tree-id1299 . -1) (2538 . 2547)) nil (25246 19741 18683 300000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2540) (undo-tree-id1306 . -1) (2538 . 2541) (#("s" 0 1 (fontified t)) . -2538) (undo-tree-id1307 . -1) (undo-tree-id1308 . -1) 2539 (2538 . 2539) (#("char" 0 4 (fontified t face font-lock-type-face)) . 2538) (t 25246 19741 30247 0)) nil (25246 19750 361571 800000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . 2538)) nil (25246 19750 361558 200000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . 2538)) nil (25246 19750 361552 900000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2541) (undo-tree-id1309 . -1) (2538 . 2542) (t 25246 19750 370247 0)) nil (25246 19752 423704 700000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-variable-name-face)) . -2540) (undo-tree-id1314 . -1) (2538 . 2541) (#("i32" 0 3 (fontified t face font-lock-type-face)) . 2538) (undo-tree-id1315 . -2) (t 25246 19752 440247 0)) nil (25246 19768 279639 900000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2542) (undo-tree-id1313 . -1) (2542 . 2543) (#("10" 0 2 (fontified t)) . 2542)) nil (25246 19768 279636 300000) 0 nil])
([nil nil ((#("'" 0 1 (fontified t)) . 2538)) nil (25246 19768 279634 0) 0 nil])
([nil nil ((#("'" 0 1 (fontified t)) . 2538)) nil (25246 19768 279633 0) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2540) (undo-tree-id1312 . -1) (2538 . 2541)) nil (25246 19768 279631 700000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2546) (undo-tree-id1311 . -1) (2542 . 2547)) nil (25246 19768 279628 600000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-variable-name-face)) . -2540) (undo-tree-id1310 . -1) (2538 . 2541) (#("\"\";" 0 2 (fontified t face font-lock-string-face) 2 3 (fontified t)) . 2538)) nil (25246 19768 279622 500000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2541) (undo-tree-id1316 . -1) (2540 . 2542) (t 25246 19768 290247 0)) nil (25246 19773 602738 700000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2540) (undo-tree-id1327 . -1) (2539 . 2541) (t 25246 19773 620247 0)) nil (25246 19789 997042 700000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-string-face)) . 2539)) nil (25246 19789 997040 400000) 0 nil])
([nil nil ((#("'" 0 1 (fontified t)) . 2538)) nil (25246 19789 997039 400000) 0 nil])
([nil nil ((#("'" 0 1 (fontified t)) . 2538) (undo-tree-id1325 . 1) (undo-tree-id1326 . -1)) nil (25246 19789 997038 300000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . 2538) (undo-tree-id1324 . 1)) nil (25246 19789 997035 500000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2538) (undo-tree-id1323 . 1)) nil (25246 19789 997033 700000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t face font-lock-type-face)) . 2538) (undo-tree-id1322 . 1)) nil (25246 19789 997031 900000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . 2538) (undo-tree-id1321 . 1)) nil (25246 19789 997029 800000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . 2538) (undo-tree-id1320 . 1)) nil (25246 19789 997027 800000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . 2538) (undo-tree-id1319 . 1)) nil (25246 19789 997025 400000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2541) (undo-tree-id1318 . -1) (2538 . 2542)) nil (25246 19789 997022 100000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2545) (undo-tree-id1317 . -1) (2541 . 2546)) nil (25246 19789 997016 300000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2543) (undo-tree-id1329 . -1) (2543 . 2544) (t 25246 19790 10247 0)) nil (25246 19791 678925 700000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2543) (undo-tree-id1328 . -1) (2542 . 2544) (t 25246 19790 10247 0)) nil (25246 19791 678919 900000) 0 nil])
([nil nil ((#("'" 0 1 (fontified t)) . 2538) (t 25246 19791 690247 0)) nil (25246 19798 872698 200000) 0 nil])
([nil nil ((#("'" 0 1 (fontified t)) . 2538)) nil (25246 19798 872696 800000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2542) (undo-tree-id1331 . -1) (2538 . 2543)) nil (25246 19798 872694 800000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-variable-name-face)) . -2546) (undo-tree-id1330 . -1) (2544 . 2547) (#("char" 0 4 (fontified t face font-lock-type-face)) . 2544)) nil (25246 19798 872688 800000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2541) (undo-tree-id1334 . -1) (2538 . 2542) (#("char" 0 4 (fontified t face font-lock-type-face)) . 2538) (t 25246 19798 890247 0)) nil (25246 19809 539563 600000) 0 nil])
([nil nil ((#("'" 0 1 (fontified t)) . 2543) (undo-tree-id1333 . -1)) nil (25246 19809 539559 900000) 0 nil])
([nil nil ((#("'" 0 1 (fontified t)) . 2543)) nil (25246 19809 539556 200000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2544) (undo-tree-id1332 . -1) (2543 . 2545)) nil (25246 19809 539551 700000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2539) (undo-tree-id1336 . -1) (2538 . 2540) (#("i32" 0 3 (fontified t face font-lock-type-face)) . 2538) (t 25246 19809 550247 0)) nil (25246 19814 478292 100000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2542) (undo-tree-id1335 . -1) (2541 . 2543)) nil (25246 19814 478285 300000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . 2538) (t 25246 19814 490247 0)) nil (25246 19823 403217 200000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2540) (undo-tree-id1337 . -1) (2538 . 2541)) nil (25246 19823 403212 500000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified t face font-lock-string-face)) . 2538) (undo-tree-id1339 . -1) (t 25246 19823 420247 0)) nil (25246 19825 592944 500000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified t face font-lock-string-face)) . 2538)) nil (25246 19825 592939 800000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-variable-name-face)) . -2540) (undo-tree-id1338 . -1) (2538 . 2541)) nil (25246 19825 592934 500000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2540) (undo-tree-id1340 . -1) (2539 . 2541) (t 25246 19825 610247 0)) nil (25246 19829 531568 0) 0 nil])
([nil nil ((#("	let mut foo = [' '; 10];
" 0 1 (fontified t) 1 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t) 5 8 (fontified t face font-lock-keyword-face) 8 9 (fontified t) 9 12 (fontified t face font-lock-variable-name-face) 12 16 (fontified t) 16 17 (fontified t syntax-table (7) face font-lock-string-face) 17 18 (fontified t face font-lock-string-face) 18 19 (fontified t syntax-table (7) face font-lock-string-face) 19 23 (fontified t) 23 24 (fontified t) 24 25 (fontified t) 25 26 (fontified t)) . 2522) (undo-tree-id1344 . 8) (undo-tree-id1345 . -15) (undo-tree-id1346 . -26) (undo-tree-id1347 . -15) (undo-tree-id1348 . 2) (undo-tree-id1349 . -15) (undo-tree-id1350 . -15) (undo-tree-id1351 . -17) (undo-tree-id1352 . -9) 2531 (t 25246 19829 550247 0)) nil (25246 19896 515341 500000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2533) (undo-tree-id1343 . -1) (2523 . 2534) (2522 . 2523) (2522 . 2523) 2531) nil (25246 19896 515318 600000) 0 nil])
([nil nil ((#("	let foo = 
" 0 1 (fontified t) 1 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t) 5 8 (fontified t face font-lock-variable-name-face) 8 11 (fontified t) 11 12 (fontified t)) . 2522) (undo-tree-id1341 . 1) (undo-tree-id1342 . -10) 2532) nil (25246 19896 515311 400000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2569) (undo-tree-id1354 . -1) (2569 . 2570) 2532 (t 25246 19896 530247 0)) nil (25246 19916 194741 600000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2557) (undo-tree-id1353 . -1) (2544 . 2558) (2523 . 2544) (2522 . 2523) (2522 . 2523) 2564 (t 25246 19896 530247 0)) nil (25246 19916 194734 900000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2606) (undo-tree-id1355 . -1) (2600 . 2607) (#("f" 0 1 (fontified t)) . -2600) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) 2601 (2600 . 2601) (#("foo" 0 3 (fontified t)) . 2600) (t 25246 19916 210247 0)) nil (25246 19919 640901 600000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -35) (undo-tree-id1359 . -1) (35 . 36) (t 25246 19919 650247 0)) nil (25246 19930 935332 400000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -26) (undo-tree-id1358 . -1) (18 . 27) (15 . 18) (t 25246 19919 650247 0)) nil (25246 19930 935326 300000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2568) (undo-tree-id1361 . -1) (2568 . 2569) 2533 (t 25246 19930 950247 0)) nil (25246 19943 119 100000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2571) (undo-tree-id1360 . -1) (2566 . 2572) (t 25246 19930 950247 0)) nil (25246 19966 448927 800000) 0 nil])
([nil nil ((2574 . 2613) 2611 (t 25246 19943 10247 0)) nil (25246 19970 460269 400000) 0 nil] [nil nil ((2533 . 2572) 2570 (t 25246 19943 10247 0)) ((#("		print!(\"{}\", termion::cursor::Hide);
" 0 2 (fontified t) 2 8 (fontified t face rust-builtin-formatting-macro) 8 9 (fontified t) 9 10 (fontified t face font-lock-string-face) 10 12 (fontified t face rust-string-interpolation) 12 13 (fontified t face font-lock-string-face) 13 15 (fontified t) 15 22 (fontified t face font-lock-constant-face) 22 24 (fontified t) 24 30 (fontified t face font-lock-constant-face) 30 32 (fontified t) 32 36 (fontified t face font-lock-type-face) 36 39 (fontified t)) . 2533) (undo-tree-id1362 . -39) (undo-tree-id1363 . -38) (undo-tree-id1364 . -2) (undo-tree-id1365 . -2)) (25246 19966 448753 900000) 0 nil])
([nil nil ((#("		" 0 2 (fontified nil)) . -2575) (undo-tree-id1367 . -2) (undo-tree-id1368 . -2) (2574 . 2575) 2576) nil (25246 19970 460265 900000) 0 nil])
nil
([nil nil ((#("j" 0 1 (fontified t face font-lock-type-face)) . -2609) (undo-tree-id1366 . -1) (2605 . 2610) (#("Hide" 0 4 (fontified t face font-lock-type-face)) . 2605)) nil (25246 19970 460256 200000) 0 nil])
([nil nil (2608) nil (25246 20036 993909 600000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-preprocessor-face)) . -2575) (undo-tree-id1370 . -1) (2575 . 2576) (t 25246 19970 470247 0)) nil (25246 20036 993908 0) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-string-face)) . -2595) (undo-tree-id1369 . -1) (2585 . 2596) (t 25246 19970 470247 0)) nil (25246 20036 993903 500000) 0 nil])
([nil nil ((apply -6 2400 2462 undo--wrap-and-run-primitive-undo 2400 2462 ((2438 . 2441) (2401 . 2404) 2420))) nil (25246 20036 993887 600000) 0 nil])
([nil nil ((#("	let mut reader = BufReader::new(stdin);
	print!(\"{}asdfasdf: \", termion::cursor::Show);
	termion::input::TermRead::read_line(&mut reader);
" 0 1 (fontified t) 1 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t) 5 8 (fontified t face font-lock-keyword-face) 8 9 (fontified t) 9 15 (fontified t face font-lock-variable-name-face) 15 18 (fontified t) 18 27 (fontified t face font-lock-type-face) 27 40 (fontified t) 40 41 (fontified t) 41 42 (fontified t) 42 48 (fontified t face rust-builtin-formatting-macro) 48 49 (fontified t) 49 50 (fontified t face font-lock-string-face) 50 52 (fontified t face rust-string-interpolation) 52 62 (fontified t face font-lock-string-face) 62 63 (fontified t face font-lock-string-face) 63 65 (fontified t) 65 72 (fontified t face font-lock-constant-face) 72 74 (fontified t) 74 80 (fontified t face font-lock-constant-face) 80 82 (fontified t) 82 86 (fontified t face font-lock-type-face) 86 89 (fontified t) 89 90 (rear-nonsticky t fontified t) 90 97 (fontified t face font-lock-constant-face) 97 99 (fontified t) 99 104 (fontified t face font-lock-constant-face) 104 106 (fontified t) 106 114 (fontified t face font-lock-type-face) 114 116 (fontified t) 116 125 (fontified t) 125 126 (fontified t) 126 127 (fontified t face rust-ampersand-face) 127 130 (fontified t face font-lock-keyword-face) 130 137 (fontified t) 137 139 (fontified t) 139 140 (fontified t)) . 2539) (undo-tree-id1373 . 78) (undo-tree-id1374 . -112) (undo-tree-id1375 . -41) (undo-tree-id1376 . -88) (undo-tree-id1377 . -112) (undo-tree-id1378 . -23) (undo-tree-id1379 . -136) (undo-tree-id1380 . -136) (undo-tree-id1381 . -64) (undo-tree-id1382 . -23) (undo-tree-id1383 . -23) (undo-tree-id1384 . -112) 2562 (t 25246 20037 10247 0)) nil (25246 20061 653322 700000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2539) (undo-tree-id1371 . 1) (undo-tree-id1372 . 1)) nil (25246 20061 653310 100000) 0 nil])
([nil nil ((apply 6 2400 2456 undo--wrap-and-run-primitive-undo 2400 2456 ((#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -2435) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -2401) 2400))) nil (25246 20061 653294 500000) 0 nil])
([nil nil ((apply 48 2533 3104 undo--wrap-and-run-primitive-undo 2533 3104 ((#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -3065) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -3021) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -2983) (#("// " 0 1 (fontified t face font-lock-comment-delimiter-face) 1 3 (fontified t face font-lock-comment-delimiter-face)) . -2947) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -2943) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -2920) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -2893) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -2889) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -2878) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -2783) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -2721) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -2671) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -2621) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -2581) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -2561) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -2534) 3109)) (t 25246 20061 670247 0)) nil (25246 20064 712709 900000) 0 nil])
([nil nil ((#("BufReader" 0 9 (fontified t face font-lock-type-face)) . 15) (t 25246 20064 730247 0)) nil (25246 20072 149487 400000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . 15)) nil (25246 20072 149484 700000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 15)) nil (25246 20072 149479 300000) 0 nil])
([nil nil ((#("use std::io::{Write, stdin, stdout};
" 0 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t) 4 7 (fontified t face font-lock-constant-face) 7 9 (fontified t) 9 11 (fontified t face font-lock-constant-face) 11 14 (fontified t) 14 19 (fontified t face font-lock-type-face) 19 37 (fontified t)) . 1) (undo-tree-id1385 . -14) (undo-tree-id1386 . -14) (undo-tree-id1387 . -14) 15 (t 25246 20072 160247 0)) nil (25246 21068 846864 300000) 0 nil])
([nil nil ((nil rear-nonsticky nil 13 . 14) (#("
" 0 1 (fontified nil)) . -50) (13 . 51) 12) nil (25246 21068 846824 100000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 776) (t 25246 21068 860247 0)) nil (25246 21085 875485 500000) 0 nil])
([nil nil ((apply -60 2388 3152 undo--wrap-and-run-primitive-undo 2388 3152 ((3110 . 3113) (3063 . 3066) (3022 . 3025) (2983 . 2986) (2976 . 2979) (2950 . 2953) (2920 . 2923) (2913 . 2916) (2899 . 2902) (2801 . 2804) (2736 . 2739) (2683 . 2686) (2630 . 2633) (2587 . 2590) (2564 . 2567) (2534 . 2537) (2477 . 2480) (2452 . 2455) (2426 . 2429) (2389 . 2392) 3057)) (t 25246 21085 890247 0)) nil (25246 21220 744245 500000) 0 nil])
([nil nil ((apply 6 2451 2526 undo--wrap-and-run-primitive-undo 2451 2526 ((#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -2474) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -2452) 2484))) nil (25246 21220 744244 0) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2472) (undo-tree-id1404 . -1) (2472 . 2473) 2456) nil (25246 21220 744242 600000) 0 nil])
([nil nil ((#("	" 0 1 (fontified nil)) . -2527) (undo-tree-id1399 . -1) (undo-tree-id1400 . -1) 2528 (#("j" 0 1 (fontified t)) . -2528) (undo-tree-id1401 . -1) (2527 . 2529) (#("	" 0 1 (fontified nil)) . 2526) (undo-tree-id1402 . -1) (undo-tree-id1403 . -1) (2525 . 2528)) nil (25246 21220 744239 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2526) (undo-tree-id1398 . 1)) nil (25246 21220 744231 400000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2550) (undo-tree-id1389 . -1) (2542 . 2551) (#("." 0 1 (fontified t)) . -2542) (undo-tree-id1390 . -1) (undo-tree-id1391 . -1) 2543 (2538 . 2543) (#("d" 0 1 (fontified t)) . -2538) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) 2539 (2534 . 2539) (2528 . 2534) (2527 . 2528) (#("	" 0 1 (fontified nil)) . 2526) (undo-tree-id1394 . -1) (undo-tree-id1395 . -1) (2527 . 2528) (#("s" 0 1 (fontified t)) . -2527) (undo-tree-id1396 . -1) (undo-tree-id1397 . -1) 2528 (2527 . 2528) (2525 . 2527)) nil (25246 21220 744226 100000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2551) (undo-tree-id1388 . -1) (2550 . 2552)) nil (25246 21220 744207 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 2552 . 2553) (#("
" 0 1 (fontified nil)) . -2576) (2551 . 2577) 2550 (t 25246 21220 760247 0)) nil (25246 21227 159221 300000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2558) (undo-tree-id1407 . -1) (2553 . 2559) (#("stdout" 0 6 (fontified t)) . 2553)) nil (25246 21227 159218 900000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2551) (undo-tree-id1406 . -1) (2551 . 2552) 2534) nil (25246 21227 159215 200000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2566) (undo-tree-id1405 . -1) (2561 . 2567) (#("stdout" 0 6 (fontified t)) . 2561)) nil (25246 21227 159209 100000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2623) (undo-tree-id1421 . -1) (2623 . 2624) (nil rear-nonsticky nil 2622 . 2623) (nil fontified nil 2576 . 2623) (2576 . 2623) (2574 . 2576) (t 25246 21227 170247 0)) nil (25246 21258 259018 0) 0 nil])
([nil nil ((#("	    " 0 1 (fontified nil) 1 5 (fontified nil)) . -2576) (undo-tree-id1420 . -1) (2575 . 2576)) nil (25246 21258 259014 600000) 0 nil])
([nil nil ((#("	" 0 1 (fontified nil)) . -2575) (undo-tree-id1417 . -1) (undo-tree-id1418 . -1) 2576 (#("j" 0 1 (fontified t)) . -2576) (undo-tree-id1419 . -1) (2575 . 2577) (2575 . 2576)) nil (25246 21258 259011 300000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2603) (undo-tree-id1408 . -1) (2598 . 2604) (#("i" 0 1 (fontified t)) . -2598) (undo-tree-id1409 . -1) (undo-tree-id1410 . -1) 2599 (2598 . 2599) (#("_passwd" 0 7 (fontified t)) . 2598) (undo-tree-id1411 . -6) (undo-tree-id1412 . -6) (undo-tree-id1413 . -6) (undo-tree-id1414 . -7) (undo-tree-id1415 . -6) (undo-tree-id1416 . -6) 2604) nil (25246 21258 259001 400000) 0 nil])
([nil nil ((apply -6 2527 2581 undo--wrap-and-run-primitive-undo 2527 2581 ((2556 . 2559) (2528 . 2531) 2548)) (t 25246 21258 270247 0)) nil (25246 21293 926058 100000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2657) (undo-tree-id1433 . -1) (2657 . 2658) (nil rear-nonsticky nil 2656 . 2657) (nil fontified nil 2583 . 2657) (2583 . 2657) (2582 . 2583) (#("	" 0 1 (fontified nil)) . 2581) (undo-tree-id1434 . -1) (undo-tree-id1435 . -1) (2580 . 2583) (t 25246 21294 890247 0)) nil (25246 21325 74321 700000) 0 nil] [nil nil ((#("j" 0 1 (fontified t)) . -2627) (undo-tree-id1422 . -1) (2624 . 2628) (2621 . 2624) (t 25246 21277 580247 0)) ((#(".lo" 0 3 (fontified nil)) . 2621) (undo-tree-id1424 . -3) (undo-tree-id1425 . -3) (undo-tree-id1426 . -3) (#("c()j" 0 1 (fontified nil) 1 3 (fontified nil) 3 4 (fontified nil)) . 2624) (undo-tree-id1427 . 3) (undo-tree-id1428 . -1) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (2627 . 2628)) (25246 21293 490367 600000) 0 nil])
([nil nil ((#("	    " 0 1 (fontified nil) 1 5 (fontified nil)) . -2583) (undo-tree-id1432 . -1) (2582 . 2583) 2606) nil (25246 21325 74311 700000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2626) (undo-tree-id1423 . -1) (2625 . 2627) (t 25246 21287 970247 0)) ((#("kj" 0 1 (fontified nil) 1 2 (fontified nil)) . 2625) (2626 . 2627) (t 25246 21289 560247 0)) (25246 21289 551479 400000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2696) (undo-tree-id1431 . -1) (2696 . 2697) 2679) nil (25246 21325 74303 700000) 0 nil])
nil
([nil nil ((#("j" 0 1 (fontified t)) . -2668) (undo-tree-id1436 . -1) (2655 . 2669) (2653 . 2655) (t 25246 21325 90247 0)) nil (25246 21332 516901 200000) 0 nil])
([nil nil ((#("	stdout.lock()
" 0 14 (fontified t) 14 15 (fontified t)) . 2654) (undo-tree-id1448 . 1) (undo-tree-id1449 . -13) (undo-tree-id1450 . -13) 2667 (t 25246 21332 530247 0)) nil (25246 21362 35370 700000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2665) (undo-tree-id1446 . -1) (2662 . 2666) (2656 . 2662) (2655 . 2656) (#("	" 0 1 (fontified nil)) . 2654) (undo-tree-id1447 . -1) (2653 . 2656)) nil (25246 21362 35365 0) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2689) (undo-tree-id1443 . -1) (2680 . 2690) (#("I" 0 1 (fontified t)) . -2680) (undo-tree-id1444 . -1) (undo-tree-id1445 . -1) 2681 (2665 . 2681)) nil (25246 21362 35359 200000) 0 nil])
([nil nil ((#("	stdout = std::io::stdout().lock()
" 0 10 (fontified t) 10 13 (fontified t face font-lock-constant-face) 13 15 (fontified t) 15 17 (fontified t face font-lock-constant-face) 17 34 (fontified t) 34 35 (fontified t)) . 2655) (undo-tree-id1437 . 1) (undo-tree-id1438 . -35) (undo-tree-id1439 . -33) (undo-tree-id1440 . -9) (undo-tree-id1441 . -9) (undo-tree-id1442 . -33) 2688) nil (25246 21362 35351 100000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2625 . 2626) (2625 . 2660)) nil (25246 21362 35309 800000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2653) (undo-tree-id1451 . -1) (2652 . 2654) (#("." 0 1 (fontified t)) . -2652) (undo-tree-id1452 . -1) (undo-tree-id1453 . -1) (#("l" 0 1 (fontified t)) . -2653) (undo-tree-id1454 . -1) (undo-tree-id1455 . -1) (#("o" 0 1 (fontified t)) . -2654) (undo-tree-id1456 . -1) (undo-tree-id1457 . -1) (#("c" 0 1 (fontified t)) . -2655) (undo-tree-id1458 . -1) (undo-tree-id1459 . -1) (#("k" 0 1 (fontified t)) . -2656) (undo-tree-id1460 . -1) (undo-tree-id1461 . -1) (#("(" 0 1 (fontified t)) . -2657) (undo-tree-id1462 . -1) (undo-tree-id1463 . -1) (#(")" 0 1 (fontified t)) . -2658) (undo-tree-id1464 . -1) (undo-tree-id1465 . -1) 2659 (t 25246 21362 50247 0)) nil (25246 21392 434864 200000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2678) (undo-tree-id1466 . -1) (2677 . 2679) (2676 . 2677) (2655 . 2676) (2653 . 2655) (t 25246 21392 450247 0)) nil (25246 21398 232271 600000) 0 nil])
([nil nil (2677) nil (25246 21407 760853 800000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-variable-name-face)) . -2659) (undo-tree-id1467 . -1) (2655 . 2660) (t 25246 21398 250247 0)) nil (25246 21407 760849 500000) 0 nil])
([nil nil (2690) nil (25246 21411 617618 0) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2687) (undo-tree-id1470 . -1) (2687 . 2688) (t 25246 21407 770247 0)) nil (25246 21411 617616 200000) 0 nil])
([nil nil (2626) nil (25246 21411 617612 700000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-variable-name-face)) . -2630) (undo-tree-id1469 . -1) (2626 . 2631) (t 25246 21407 770247 0)) nil (25246 21411 617610 300000) 0 nil])
([nil nil ((#("let " 0 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t)) . 2659) (undo-tree-id1468 . -3)) nil (25246 21411 617603 0) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-variable-name-face)) . -2634) (undo-tree-id1471 . -1) (2630 . 2635) (t 25246 21411 630247 0)) nil (25246 21426 454415 900000) 0 nil])
([nil nil (2670) nil (25246 21431 981550 300000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-variable-name-face)) . -2671) (undo-tree-id1472 . -1) (2667 . 2672) (#("j" 0 1 (fontified t face font-lock-variable-name-face)) . -2667) (undo-tree-id1473 . -1) (undo-tree-id1474 . -1) 2668 (2667 . 2668) (#("j" 0 1 (fontified t face font-lock-variable-name-face)) . -2667) (undo-tree-id1475 . -1) (2663 . 2668) (t 25246 21426 470247 0)) nil (25246 21431 981545 300000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2755) (undo-tree-id1476 . -1) (2749 . 2756) (#("line" 0 4 (fontified t)) . 2749) (t 25246 21432 247 0)) nil (25246 21456 813634 900000) 0 nil])
([nil nil ((#("mut " 0 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t)) . 2667) (t 25246 21456 830247 0)) nil (25246 21471 672671 0) 0 nil])
([nil nil ((#("let " 0 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t)) . 2663) (undo-tree-id1477 . -4) (t 25246 21471 690247 0)) nil (25246 21475 67773 500000) 0 nil])
([nil nil ((#("	stdout = stdout.lock();
" 0 1 (fontified t) 1 7 (fontified t) 7 24 (fontified t) 24 25 (fontified t)) . 2662) (undo-tree-id1484 . -25) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) 2663 (t 25246 21475 80247 0)) nil (25246 21482 433363 500000) 0 nil])
([nil nil ((#("	let mut stdout = std::io::stdout();
" 0 1 (fontified t rear-nonsticky t) 1 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t) 5 8 (fontified t face font-lock-keyword-face) 8 9 (fontified t) 9 15 (fontified t face font-lock-variable-name-face) 15 18 (fontified t) 18 21 (fontified t face font-lock-constant-face) 21 23 (fontified t) 23 25 (fontified t face font-lock-constant-face) 25 37 (fontified t)) . 2625) (undo-tree-id1478 . -37) (undo-tree-id1479 . -35) (undo-tree-id1480 . -37) (undo-tree-id1481 . -1) (undo-tree-id1482 . -37) (undo-tree-id1483 . -1) 2626) nil (25246 21482 433353 300000) 0 nil])
([nil nil ((apply -3 2656 2703 undo--wrap-and-run-primitive-undo 2656 2703 ((2657 . 2660))) (t 25246 21482 450247 0)) nil (25246 21496 484757 0) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2673) (undo-tree-id1495 . -1) (2667 . 2674) (#("p" 0 1 (fontified t)) . -2667) (undo-tree-id1496 . -1) 2668 (2656 . 2668) (2655 . 2656) (#("	" 0 1 (fontified nil)) . 2654) (undo-tree-id1497 . -1) (2653 . 2656) (t 25246 21496 500247 0)) nil (25246 21526 573384 400000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2674) (undo-tree-id1494 . -1) (2673 . 2675)) nil (25246 21526 573379 0) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2680) (undo-tree-id1492 . -1) (2674 . 2681) (2663 . 2674) (#(" " 0 1 (fontified t)) . -2663) (undo-tree-id1493 . -1) 2664 (2656 . 2664) (2655 . 2656) (2655 . 2656) 2673) nil (25246 21526 573376 300000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2701) (undo-tree-id1491 . -1) (2698 . 2702)) nil (25246 21526 573371 600000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-variable-name-face)) . -2664) (undo-tree-id1490 . -1) (2660 . 2665)) nil (25246 21526 573369 100000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2707) (undo-tree-id1489 . -1) (2707 . 2708) 2693) nil (25246 21526 573365 800000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2707) (undo-tree-id1488 . -1) (2702 . 2708)) nil (25246 21526 573359 100000) 0 nil])
([nil nil (2494) nil (25246 21590 568039 300000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-comment-face)) . -2477) (undo-tree-id1514 . -1) (2474 . 2478) (t 25246 21526 590247 0)) nil (25246 21590 568037 700000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2616) (undo-tree-id1513 . -1) (2616 . 2617) (2614 . 2616) (2612 . 2614) (2607 . 2612) (2586 . 2607) (2585 . 2586) (2585 . 2586) 2588) nil (25246 21650 606822 100000) 0 nil])
([nil nil ((#("mut " 0 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t)) . 2590)) ((2590 . 2594)) (25246 21651 477989 900000) 0 nil])
([nil nil ((#("j" 0 1 (fontified nil)) . 2640) (2620 . 2641) (#("out = s" 0 1 (fontified nil face font-lock-variable-name-face) 1 2 (fontified nil face font-lock-variable-name-face) 2 3 (fontified nil face font-lock-variable-name-face) 3 4 (fontified nil) 4 5 (fontified nil) 5 6 (fontified nil) 6 7 (fontified nil)) . 2620) (2610 . 2627) (#("st" 0 2 (fontified t)) . 2610)) ((2610 . 2612) (#("let mut stout = s" 0 3 (fontified nil face font-lock-keyword-face) 3 4 (fontified nil) 4 7 (fontified nil face font-lock-keyword-face) 7 8 (fontified nil) 8 10 (fontified nil face font-lock-variable-name-face) 10 11 (fontified nil face font-lock-variable-name-face) 11 12 (fontified nil face font-lock-variable-name-face) 12 13 (fontified nil face font-lock-variable-name-face) 13 14 (fontified nil) 14 15 (fontified nil) 15 16 (fontified nil) 16 17 (fontified nil)) . 2610) (undo-tree-id1542 . -10) (2620 . 2627) (#("dout = stdout.lock()j" 0 4 (fontified nil face font-lock-variable-name-face) 4 14 (fontified nil) 14 20 (fontified nil) 20 21 (fontified nil)) . 2620) (undo-tree-id1543 . -20) (2640 . 2641)) (25246 21651 682646 100000) 0 nil])
([nil nil ((#("j" 0 1 (fontified nil)) . 2641) (2640 . 2642)) ((#(";j" 0 1 (fontified nil) 1 2 (fontified nil)) . 2640) (2641 . 2642)) (25246 21651 886969 600000) 0 nil])
([nil nil ((#("	let stdout = stdout();
	let mut stdout = stdout.lock();
	stdout.write_all(b\"password: \").unwrap();
    stdout.flush().unwrap();

	let mut foo = String::new();
	stdin.read_line(&mut foo);
" 0 1 (fontified t) 1 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t) 5 11 (fontified t face font-lock-variable-name-face) 11 23 (fontified t) 23 24 (fontified t) 24 25 (fontified t) 25 28 (fontified t face font-lock-keyword-face) 28 29 (fontified t) 29 32 (fontified t face font-lock-keyword-face) 32 33 (fontified t) 33 35 (fontified t face font-lock-variable-name-face) 35 39 (fontified t face font-lock-variable-name-face) 39 49 (fontified t) 49 55 (fontified t) 55 56 (fontified t) 56 57 (fontified t) 57 58 (fontified t) 58 76 (fontified t) 76 88 (fontified t face font-lock-string-face) 88 100 (fontified t) 100 127 (fontified t) 127 128 (rear-nonsticky t fontified t) 128 129 (fontified t) 129 130 (fontified t) 130 131 (fontified t) 131 134 (fontified t face font-lock-keyword-face) 134 135 (fontified t) 135 138 (fontified t face font-lock-keyword-face) 138 139 (fontified t) 139 142 (fontified t face font-lock-variable-name-face) 142 145 (fontified t) 145 151 (fontified t face font-lock-type-face) 151 159 (fontified t) 159 160 (fontified t) 160 177 (fontified t) 177 178 (fontified t face rust-ampersand-face) 178 181 (fontified t face font-lock-keyword-face) 181 182 (fontified t) 182 187 (fontified t) 187 188 (fontified t)) . 2585) (undo-tree-id1552 . 132) (undo-tree-id1553 . -182) (undo-tree-id1554 . -22) (undo-tree-id1555 . -182) (undo-tree-id1556 . -58) (undo-tree-id1557 . -24) (undo-tree-id1558 . -56) (undo-tree-id1559 . -55) (undo-tree-id1560 . -182) (undo-tree-id1561 . -188) (undo-tree-id1562 . -22) (undo-tree-id1563 . -182) (undo-tree-id1564 . -160) (undo-tree-id1565 . -182) 2767 (t 25246 21653 920247 0)) nil (25246 21674 250509 500000) 0 nil] [nil nil ((#("	// stdout = stdout.lock();
	// stdin = stdin.lock();
" 0 1 (fontified t) 1 4 (fontified t face font-lock-comment-delimiter-face) 4 27 (fontified t face font-lock-comment-face) 27 28 (fontified t face font-lock-comment-face) 28 29 (rear-nonsticky t fontified t) 29 32 (fontified t face font-lock-comment-delimiter-face) 32 37 (fontified t face font-lock-comment-face) 37 54 (fontified t face font-lock-comment-face)) . 2530) (undo-tree-id1517 . -29) (undo-tree-id1518 . -1) (undo-tree-id1519 . -29) (undo-tree-id1520 . -53) (undo-tree-id1521 . -52) (undo-tree-id1522 . -29) (undo-tree-id1524 . -1) (undo-tree-id1525 . -29) (undo-tree-id1527 . -29) 2559 (t 25246 21601 370247 0)) ((2530 . 2584)) (25246 21642 242904 400000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2395) (undo-tree-id1545 . -1) (2395 . 2396) (#("	" 0 1 (fontified nil)) . -2394) (undo-tree-id1546 . -1) (undo-tree-id1547 . -1) (2395 . 2396) (2394 . 2395) (#("	" 0 1 (fontified nil)) . 2393) (undo-tree-id1548 . -1) (undo-tree-id1549 . -1) (2392 . 2395) (2382 . 2392) (#("-" 0 1 (fontified t)) . -2382) (undo-tree-id1550 . -1) (undo-tree-id1551 . -1) 2383 (2376 . 2383) (2374 . 2376)) nil (25246 21674 250474 500000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2530) (undo-tree-id1516 . 1)) ((2530 . 2531)) (25246 21641 723106 200000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2394 . 2395) (#("
" 0 1 (fontified nil)) . -2581) (2393 . 2582)) nil (25246 21674 250465 200000) 0 nil])
([nil nil ((apply 3 2473 2526 undo--wrap-and-run-primitive-undo 2473 2526 ((#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -2474))) (t 25246 21621 980247 0)) ((apply -3 2473 2529 undo--wrap-and-run-primitive-undo 2473 2529 ((2474 . 2477) 2716))) (25246 21641 223924 100000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2393) (undo-tree-id1544 . -1)) nil (25246 21674 250463 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 2717 . 2718) (#("
" 0 1 (fontified nil)) . -2769) (2716 . 2770) (t 25246 21624 270247 0)) ((#("
	let mut stdout = stdout().into_raw_mode().unwrap();
" 0 1 (fontified t) 1 2 (fontified nil rear-nonsticky nil) 2 5 (fontified nil face font-lock-keyword-face) 5 6 (fontified nil) 6 8 (fontified nil face font-lock-keyword-face) 8 9 (fontified nil face font-lock-keyword-face) 9 10 (fontified nil) 10 16 (fontified nil face font-lock-variable-name-face) 16 53 (fontified nil) 53 54 (fontified nil)) . 2716) (undo-tree-id1529 . -53) (undo-tree-id1530 . -1) (undo-tree-id1531 . -53) (2769 . 2770) (nil rear-nonsticky t 2717 . 2718)) (25246 21641 12103 400000) 0 nil])
([nil nil ((apply -3 2659 2684 undo--wrap-and-run-primitive-undo 2659 2684 ((2660 . 2663)))) nil (25246 21674 250452 400000) 0 nil])
([nil nil ((#("	// let pass = stdin.read_passwd(&mut stdout);
" 0 1 (fontified t) 1 4 (fontified t face font-lock-comment-delimiter-face) 4 7 (fontified t face font-lock-comment-face) 7 8 (fontified t face font-lock-comment-face) 8 12 (fontified t face font-lock-comment-face) 12 33 (fontified t face font-lock-comment-face) 33 34 (fontified t face font-lock-comment-face) 34 37 (fontified t face font-lock-comment-face) 37 44 (fontified t face font-lock-comment-face) 44 46 (fontified t face font-lock-comment-face) 46 47 (rear-nonsticky t fontified t face font-lock-comment-face)) . 2770) (undo-tree-id1528 . -1) 2771) ((2770 . 2817)) (25246 21640 774921 0) 0 nil])
([nil nil ((apply 69 2596 3398 undo--wrap-and-run-primitive-undo 2596 3398 ((#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -3359) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -3315) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -3277) (#("// " 0 1 (fontified t face font-lock-comment-delimiter-face) 1 3 (fontified t face font-lock-comment-delimiter-face)) . -3241) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -3237) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -3214) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -3187) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -3183) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -3172) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -3077) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -3015) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -2965) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -2915) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -2875) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -2855) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -2828) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -2781) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -2755) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -2730) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -2676) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -2654) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -2631) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -2597) 3425))) nil (25246 21674 250447 800000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2770)) ((2770 . 2771)) (25246 21640 370408 200000) 0 nil])
([nil nil ((#("

" 0 1 (fontified t) 1 2 (fontified t)) . 2778) (undo-tree-id1578 . -1) (undo-tree-id1579 . -1) (undo-tree-id1580 . -1) (undo-tree-id1581 . -1) (undo-tree-id1582 . -2) (undo-tree-id1583 . -1) (t 25246 21674 260247 0)) nil (25246 21679 132365 200000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2770)) ((2770 . 2771) (t 25246 21632 590247 0)) (25246 21632 576942 200000) 0 nil])
([nil nil ((#("

" 0 1 (fontified t) 1 2 (fontified t)) . 2823) (undo-tree-id1566 . -1) (undo-tree-id1567 . -1) (undo-tree-id1568 . -2) (undo-tree-id1569 . -2) (undo-tree-id1570 . -2) (undo-tree-id1571 . -2) (undo-tree-id1572 . -2) (undo-tree-id1573 . -1) (undo-tree-id1574 . -2) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) 2824) nil (25246 21679 132353 300000) 0 nil])
nil
([nil nil ((#("	stdout = stdout.lock();
	stdin = stdin.lock();
" 0 1 (fontified t) 1 24 (fontified t) 24 25 (fontified t) 25 26 (rear-nonsticky t fontified t) 26 31 (fontified t) 31 48 (fontified t)) . 2729) (undo-tree-id1588 . -27) (undo-tree-id1589 . -2) (undo-tree-id1590 . -27) (undo-tree-id1591 . -47) (undo-tree-id1592 . -46) (undo-tree-id1593 . -27) (undo-tree-id1594 . -2) (undo-tree-id1595 . -27) 2756 (t 25246 21679 150247 0)) nil (25246 21698 750076 400000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2729) (undo-tree-id1584 . 1) (undo-tree-id1585 . -1) (undo-tree-id1586 . -1) (undo-tree-id1587 . -1)) nil (25246 21698 750062 500000) 0 nil])
([nil nil ((2393 . 2415) 2394 (t 25246 21698 760247 0)) nil (25246 21711 691881 500000) 0 nil])
([nil nil ((#("	let pass = stdin.read_passwd(&mut stdout);
" 0 1 (fontified t) 1 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t) 5 9 (fontified t face font-lock-variable-name-face) 9 30 (fontified t) 30 31 (fontified t face rust-ampersand-face) 31 34 (fontified t face font-lock-keyword-face) 34 41 (fontified t) 41 43 (fontified t) 43 44 (rear-nonsticky t fontified t)) . 2751) (undo-tree-id1602 . 44) (undo-tree-id1603 . -18) (undo-tree-id1604 . -18) 2769 (t 25246 21711 710247 0)) nil (25246 21722 61003 400000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2751) (undo-tree-id1596 . 1) (undo-tree-id1597 . -1) (undo-tree-id1598 . -1) (undo-tree-id1599 . -1) (undo-tree-id1600 . -1) (undo-tree-id1601 . -1)) nil (25246 21722 60996 600000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2764) (undo-tree-id1605 . -1) (2752 . 2765) (#("r" 0 1 (fontified t)) . -2752) (undo-tree-id1606 . -1) (undo-tree-id1607 . -1) 2753 (2752 . 2753) (2751 . 2752) (#("	" 0 1 (fontified nil)) . 2750) (undo-tree-id1608 . -1) (undo-tree-id1609 . -1) (2749 . 2752) (t 25246 21722 70247 0)) nil (25246 21734 666628 700000) 0 nil])
([nil nil ((#("	todo_list.display();
" 0 1 (fontified t) 1 19 (fontified t) 19 21 (fontified t) 21 22 (fontified t)) . 2652) (undo-tree-id1612 . -12) 2664 (t 25246 21734 680247 0)) nil (25246 21753 807188 600000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2728 . 2729) (#("
" 0 1 (fontified nil)) . -2749) (2727 . 2750) 2675) nil (25246 21753 807185 100000) 0 nil])
([nil nil ((#("	" 0 1 (fontified nil)) . -2728) (undo-tree-id1610 . -1) 2729 (#("j" 0 1 (fontified t)) . -2729) (undo-tree-id1611 . -1) (2728 . 2730) (2728 . 2729) 2729) nil (25246 21753 807181 300000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2652)) nil (25246 21753 807163 500000) 0 nil])
([nil nil ((#("	let mut todo_list = read_file();
" 0 1 (fontified t) 1 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t) 5 8 (fontified t face font-lock-keyword-face) 8 9 (fontified t) 9 18 (fontified t face font-lock-variable-name-face) 18 33 (fontified t) 33 34 (fontified t)) . 2618) (undo-tree-id1613 . -1) (undo-tree-id1614 . -21) (undo-tree-id1615 . -2) 2620 (t 25246 21753 820247 0)) nil (25246 21767 183091 600000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2693 . 2694) (#("
" 0 1 (fontified nil)) . -2726) (2692 . 2727) 2642) nil (25246 21767 183072 800000) 0 nil])
([nil nil ((#("	get_input();
" 0 14 (fontified t)) . 2751) (undo-tree-id1630 . -1) (undo-tree-id1631 . -1) 2752 (t 25246 21767 200247 0)) nil (25246 21781 905477 900000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2751) (undo-tree-id1616 . -1) (undo-tree-id1617 . -1) (undo-tree-id1618 . -1) (undo-tree-id1619 . -1) (undo-tree-id1620 . -1) (undo-tree-id1621 . -1) (undo-tree-id1622 . -1) (undo-tree-id1623 . -1) (undo-tree-id1624 . -1) (undo-tree-id1625 . -1) (undo-tree-id1626 . -1) (undo-tree-id1627 . -1) (undo-tree-id1628 . -1) (undo-tree-id1629 . -1)) nil (25246 21781 905470 900000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2775) (undo-tree-id1632 . -1) (2770 . 2776) (#("c" 0 1 (fontified t)) . -2770) (undo-tree-id1633 . -1) (undo-tree-id1634 . -1) 2771 (2752 . 2771) (2751 . 2752) (#("	" 0 1 (fontified nil)) . 2750) (undo-tree-id1635 . -1) (2749 . 2752) (t 25246 21781 920247 0)) nil (25246 21790 957804 800000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2750) (t 25246 21790 960247 0)) nil (25246 21925 840519 800000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2776) (undo-tree-id1636 . -1) (2773 . 2777) (#("(" 0 1 (fontified t)) . -2773) (undo-tree-id1637 . -1) (undo-tree-id1638 . -1) (#(")" 0 1 (fontified t)) . -2774) (undo-tree-id1639 . -1) (undo-tree-id1640 . -1) 2775 (2772 . 2775) (2751 . 2772) (2749 . 2751)) nil (25246 21925 840514 300000) 0 nil])
([nil nil ((#("	stdout = stdout.lock();
" 0 24 (fontified t) 24 25 (fontified t)) . 2777) (undo-tree-id1647 . -23) (undo-tree-id1648 . -23) 2800 (t 25246 21925 860247 0)) nil (25246 21935 703228 800000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2782) (undo-tree-id1646 . -1) (2779 . 2783) (2776 . 2779)) nil (25246 21935 703224 500000) 0 nil])
([nil nil ((#("		std
" 0 6 (fontified t)) . 2777) (undo-tree-id1643 . 1) (undo-tree-id1644 . -4) (undo-tree-id1645 . -4) 2781) nil (25246 21935 703221 100000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2785) (undo-tree-id1642 . -1) (2776 . 2786)) nil (25246 21935 703215 200000) 0 nil])
([nil nil (2784) nil (25246 21935 703211 100000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2760) (undo-tree-id1641 . -1) (2751 . 2761)) nil (25246 21935 703206 500000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2795 . 2796) (#("
" 0 1 (fontified nil)) . -2839) (2794 . 2840) 2759 (t 25246 21935 720247 0)) nil (25246 21942 792017 400000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2840 . 2841) (#("
" 0 1 (fontified nil)) . -2884) (2839 . 2885) 2796) nil (25246 21942 792015 400000) 0 nil])
([nil nil ((#("	stdout = stdout.suspend_raw_mode().unwrap()
" 0 1 (fontified t rear-nonsticky t) 1 44 (fontified t) 44 45 (fontified t)) . 2840) (undo-tree-id1655 . -44) (undo-tree-id1656 . -44) (undo-tree-id1657 . -1) (undo-tree-id1658 . -1) 2841) nil (25246 21942 792013 100000) 0 nil])
([nil nil ((#("		" 0 2 (fontified nil)) . -2795) (undo-tree-id1652 . -2) (undo-tree-id1653 . -2) 2797 (#("j" 0 1 (fontified t)) . -2797) (undo-tree-id1654 . -1) (2795 . 2798) (2795 . 2796)) nil (25246 21942 792007 300000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2817) (undo-tree-id1649 . -1) (2813 . 2818) (#("s" 0 1 (fontified t)) . -2813) (undo-tree-id1650 . -1) (undo-tree-id1651 . -1) 2814 (#("uspend" 0 6 (fontified t)) . 2814)) nil (25246 21942 791999 200000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2795) (undo-tree-id1660 . -1) (2794 . 2796) (t 25246 21942 810247 0)) nil (25246 21949 385208 100000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2839) (undo-tree-id1659 . -1) 2840 (2838 . 2840)) nil (25246 21949 385194 100000) 0 nil])
([nil nil (2779) nil (25246 21976 386622 300000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2751) (undo-tree-id1663 . -1) (2751 . 2752) (t 25246 21949 400247 0)) nil (25246 21976 386620 800000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2768) (undo-tree-id1662 . -1) (2766 . 2769) (t 25246 21949 400247 0)) nil (25246 21976 386617 300000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2817) (undo-tree-id1661 . -1) (2815 . 2818)) nil (25246 21976 386610 300000) 0 nil])
([nil nil (2767) nil (25246 21992 651797 800000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-variable-name-face)) . -2755) (undo-tree-id1667 . -1) (2751 . 2756) (t 25246 21976 400247 0)) nil (25246 21992 651795 900000) 0 nil])
([nil nil (2807) nil (25246 21992 651792 900000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-variable-name-face)) . -2808) (undo-tree-id1666 . -1) (2804 . 2809)) nil (25246 21992 651791 100000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-variable-name-face)) . -2759) (undo-tree-id1665 . -1) (2755 . 2760)) nil (25246 21992 651787 500000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-variable-name-face)) . -2816) (undo-tree-id1664 . -1) (2812 . 2817)) nil (25246 21992 651780 900000) 0 nil])
([nil nil ((#("	let mut stdout = stdout().suspend_raw_mode().unwrap();
" 0 1 (fontified t) 1 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t) 5 8 (fontified t face font-lock-keyword-face) 8 9 (fontified t) 9 15 (fontified t face font-lock-variable-name-face) 15 55 (fontified t) 55 56 (fontified t)) . 2750) (undo-tree-id1668 . -8) (undo-tree-id1669 . -8) 2758 (t 25246 21992 670247 0)) nil (25246 22050 231398 100000) 0 nil])
([nil nil ((#("	let mut stdout = stdout().into_raw_mode().unwrap();
" 0 1 (rear-nonsticky t fontified t) 1 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t) 5 8 (fontified t face font-lock-keyword-face) 8 9 (fontified t) 9 15 (fontified t face font-lock-variable-name-face) 15 52 (fontified t) 52 53 (fontified t)) . 2751) (undo-tree-id1685 . 44) (undo-tree-id1686 . -53) (undo-tree-id1687 . -53) (undo-tree-id1688 . -53) (t 25246 22050 250247 0)) nil (25246 22058 614531 700000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2751) (undo-tree-id1670 . 1) (undo-tree-id1671 . -1) (undo-tree-id1672 . -1) (undo-tree-id1673 . -1) (undo-tree-id1674 . -1) (undo-tree-id1675 . -1) (undo-tree-id1676 . -1) (undo-tree-id1677 . -1) (undo-tree-id1678 . -1) (undo-tree-id1679 . -1) (undo-tree-id1680 . -1) (undo-tree-id1681 . -1) (undo-tree-id1682 . -1) (undo-tree-id1683 . -1) (undo-tree-id1684 . -1)) nil (25246 22058 614521 900000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2784) (undo-tree-id1700 . -1) (2773 . 2785) (2752 . 2773) (2751 . 2752) (#("	" 0 1 (fontified nil)) . 2750) (undo-tree-id1701 . -1) (undo-tree-id1702 . -1) (2751 . 2752) (2749 . 2751) (t 25246 22058 620247 0)) nil (25246 22084 860491 700000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2797) (undo-tree-id1689 . -1) (2779 . 2798) (#("n" 0 1 (fontified t)) . -2779) (undo-tree-id1690 . -1) (undo-tree-id1691 . -1) (#("e" 0 1 (fontified t)) . -2780) (undo-tree-id1692 . -1) (undo-tree-id1693 . -1) (#("w" 0 1 (fontified t)) . -2781) (undo-tree-id1694 . -1) (undo-tree-id1695 . -1) (#("(" 0 1 (fontified t)) . -2782) (undo-tree-id1696 . -1) (undo-tree-id1697 . -1) (#(")" 0 1 (fontified t)) . -2783) (undo-tree-id1698 . -1) (undo-tree-id1699 . -1) 2784) nil (25246 22084 860479 300000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2798) (undo-tree-id1703 . -1) (2797 . 2799) (t 25246 22084 880247 0)) nil (25246 22085 748122 300000) 0 nil])
([nil nil (2797) nil (25246 22097 17531 600000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-constant-face)) . -2752) (undo-tree-id1704 . -1) (2752 . 2753) (t 25246 22085 760247 0)) nil (25246 22097 17529 600000) 0 nil])
([nil nil ((2761 . 2762) (#("R" 0 1 (fontified t face font-lock-type-face)) . 2761) (t 25246 22085 760247 0)) nil (25246 22097 17515 500000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2798) (undo-tree-id1706 . -1) (2798 . 2799) 2761 (t 25246 22097 30247 0)) nil (25246 22112 354241 100000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2802) (undo-tree-id1705 . -1) (2796 . 2803) (t 25246 22097 30247 0)) nil (25246 22112 354233 900000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2797) (undo-tree-id1707 . -1) (2796 . 2798) (t 25246 22112 370247 0)) nil (25246 22121 14886 200000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2806 . 2807) (#("
" 0 1 (fontified nil)) . -2860) (2805 . 2861) 2796 (t 25246 22121 30247 0)) nil (25246 22133 172376 600000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2840) (undo-tree-id1708 . -1) (2834 . 2841) (#("suspend" 0 7 (fontified t)) . 2834)) nil (25246 22133 172371 100000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 2839) (t 25246 22133 190247 0)) nil (25246 22135 740136 0) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2842) (undo-tree-id1709 . -1) (2839 . 2843)) nil (25246 22135 740130 500000) 0 nil])
([nil nil ((#("	termion::raw::RawTerminal::suspend_raw_mode(&stdout);
	termion::raw::RawTerminal::activate_raw_mode(&stdout);
" 0 1 (fontified t) 1 8 (fontified t face font-lock-constant-face) 8 10 (fontified t) 10 11 (fontified t face font-lock-constant-face) 11 13 (fontified t face font-lock-constant-face) 13 15 (fontified t) 15 26 (fontified t face font-lock-type-face) 26 45 (fontified t) 45 46 (fontified t face rust-ampersand-face) 46 54 (fontified t) 54 55 (fontified t) 55 56 (fontified t rear-nonsticky t) 56 63 (fontified t face font-lock-constant-face) 63 65 (fontified t) 65 66 (fontified t face font-lock-constant-face) 66 68 (fontified t face font-lock-constant-face) 68 70 (fontified t) 70 81 (fontified t face font-lock-type-face) 81 101 (fontified t) 101 102 (fontified t face rust-ampersand-face) 102 110 (fontified t) 110 111 (fontified t)) . 2751) (undo-tree-id1732 . 20) (undo-tree-id1733 . -90) (undo-tree-id1734 . -55) (undo-tree-id1735 . -110) (undo-tree-id1736 . -35) (undo-tree-id1737 . -90) (undo-tree-id1738 . -90) (undo-tree-id1739 . -90) (undo-tree-id1740 . -90) (undo-tree-id1741 . -90) (undo-tree-id1742 . -90) (undo-tree-id1743 . -35) (undo-tree-id1744 . -111) (undo-tree-id1745 . -35) (undo-tree-id1746 . -35) (undo-tree-id1747 . -55) (undo-tree-id1748 . -90) 2841 (t 25246 22135 750247 0)) nil (25246 22170 275249 600000) 0 nil])
([nil nil ((#("			" 0 3 (fontified nil)) . -3096) (undo-tree-id1729 . -3) (undo-tree-id1730 . -3) 3099 (#("j" 0 1 (fontified t)) . -3099) (undo-tree-id1731 . -1) (3095 . 3100)) nil (25246 22170 275230 300000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3097 . 3098) (#("
" 0 1 (fontified nil)) . -3207) (3096 . 3208)) nil (25246 22170 275225 100000) 0 nil])
([nil nil ((#("	" 0 1 (rear-nonsticky t fontified nil)) . -3159) (undo-tree-id1721 . -1) (undo-tree-id1722 . -1) (undo-tree-id1723 . -1) (undo-tree-id1724 . -1) (undo-tree-id1725 . -1) (3155 . 3159) (#("	" 0 1 (fontified nil rear-nonsticky t)) . -3101) (undo-tree-id1726 . -1) (undo-tree-id1727 . -1) (undo-tree-id1728 . -1) (3097 . 3101) 3153) nil (25246 22170 275222 400000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3096) (undo-tree-id1718 . -1) (undo-tree-id1719 . -1) (undo-tree-id1720 . -1)) nil (25246 22170 275211 300000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3098 . 3099) (#("
" 0 1 (fontified nil)) . -3190) (3095 . 3191) 3001) nil (25246 22170 275206 700000) 0 nil])
([nil nil ((nil fontified nil 3121 . 3122) (nil face font-lock-string-face 3121 . 3122) (3121 . 3122) (#("c" 0 1 (fontified t face font-lock-string-face)) . 3121)) nil (25246 22170 275204 0) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -3130) (undo-tree-id1713 . -1) (3129 . 3131) (#("A" 0 1 (fontified t face font-lock-type-face)) . -3129) (undo-tree-id1714 . -1) (undo-tree-id1715 . -1) 3130 (3129 . 3130) (#("todo_list.todos[todo_list.selected as usize].toggle_status()," 0 10 (fontified t) 10 13 (fontified t) 13 14 (fontified t) 14 16 (fontified t) 16 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t) 22 35 (fontified t) 35 37 (fontified t face font-lock-keyword-face) 37 38 (fontified t) 38 43 (fontified t face font-lock-type-face) 43 46 (fontified t) 46 49 (fontified t) 49 52 (fontified t) 52 57 (fontified t) 57 61 (fontified t)) . 3129) (undo-tree-id1716 . -61) (undo-tree-id1717 . -61)) nil (25246 22170 275200 300000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -3252) (undo-tree-id1710 . -1) (3252 . 3253) (#("	" 0 1 (fontified nil)) . -3251) (undo-tree-id1711 . -1) (undo-tree-id1712 . -1) (3252 . 3253) (3247 . 3252)) nil (25246 22170 275188 900000) 0 nil])
([nil nil ((#("				" 0 4 (fontified nil)) . -3189) (undo-tree-id1764 . -4) 3193 (#("j" 0 1 (fontified t)) . -3193) (undo-tree-id1765 . -1) (3188 . 3194) (t 25246 22170 290247 0)) nil (25246 22196 302841 300000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3189) (undo-tree-id1763 . 1)) nil (25246 22196 302837 100000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -3202) (undo-tree-id1758 . -1) (3200 . 3203) (#("\"" 0 1 (fontified t face font-lock-string-face)) . -3200) (undo-tree-id1759 . -1) (undo-tree-id1760 . -1) (#("\"" 0 1 (fontified t face font-lock-string-face)) . -3201) (undo-tree-id1761 . -1) (undo-tree-id1762 . -1) 3202 (3193 . 3202) (3188 . 3193)) nil (25246 22196 302834 400000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -3202) (undo-tree-id1757 . -1) (3200 . 3203)) nil (25246 22196 302828 0) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-string-face)) . -3201) (undo-tree-id1756 . -1) (3201 . 3202)) nil (25246 22196 302825 800000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -3208) (undo-tree-id1755 . -1) (3200 . 3209)) nil (25246 22196 302823 500000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-string-face)) . -3214) (undo-tree-id1754 . -1) (3209 . 3215)) nil (25246 22196 302820 500000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -3215) (undo-tree-id1749 . -1) (3215 . 3216) (#("," 0 1 (fontified t)) . -3215) (undo-tree-id1750 . -1) (undo-tree-id1751 . -1) (#(" " 0 1 (fontified t)) . -3216) (undo-tree-id1752 . -1) (undo-tree-id1753 . -1) 3217 (3215 . 3217)) nil (25246 22196 302814 500000) 0 nil])
([nil nil (3214) nil (25246 22208 195475 700000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-comment-face)) . -3196) (undo-tree-id1766 . -1) (3193 . 3197) (t 25246 22196 320247 0)) nil (25246 22208 195471 400000) 0 nil])
([nil nil (3227) nil (25246 22209 498125 500000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-comment-face)) . -3228) (undo-tree-id1767 . -1) (3225 . 3229) (t 25246 22208 210247 0)) nil (25246 22209 498120 900000) 0 nil])
([nil nil ((apply 3 3189 3218 undo--wrap-and-run-primitive-undo 3189 3218 ((#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -3193) (#<marker at 1642 in main.rs> . -2) (#<marker at 1566 in main.rs> . -2) (#<marker at 1642 in main.rs> . -2) (#<marker at 1566 in main.rs> . -2) (#<marker in no buffer> . -2) (#<marker in no buffer> . -2) (#<marker in no buffer> . -2) (#<marker in no buffer> . -2) 3195)) (t 25246 22209 510247 0)) nil (25246 22218 753415 0) 0 nil])
([nil nil ((apply 3 3218 3277 undo--wrap-and-run-primitive-undo 3218 3277 ((#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -3222) (#<marker at 1566 in main.rs> . -2)))) nil (25246 22218 753409 600000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-preprocessor-face)) . -3193) (undo-tree-id1799 . -1) (3193 . 3194) (#("write" 0 5 (fontified t face rust-builtin-formatting-macro)) . 3193) (t 25246 22218 770247 0)) nil (25246 22227 511516 200000) 0 nil])
([nil nil ((#("				!(stdout, \"Foo: \");
" 0 4 (fontified t) 4 5 (fontified t) 5 14 (fontified t) 14 21 (fontified t face font-lock-string-face) 21 23 (fontified t) 23 24 (fontified t)) . 3189) (undo-tree-id1795 . 20) (undo-tree-id1796 . -24) (undo-tree-id1797 . -3) (undo-tree-id1798 . -3) 3192) nil (25246 22227 511513 400000) 0 nil])
([nil nil ((#("				" 0 4 (fontified nil)) . -3190) (undo-tree-id1790 . -4) (undo-tree-id1791 . -4) 3194 (#("j" 0 1 (fontified t)) . -3194) (undo-tree-id1792 . -1) (3190 . 3195) (#("				" 0 4 (fontified nil)) . 3189) (undo-tree-id1793 . -4) (undo-tree-id1794 . -4) (3188 . 3194)) nil (25246 22227 511507 800000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -3194) (undo-tree-id1768 . -1) (3194 . 3195) (3190 . 3194) (#("				" 0 4 (fontified nil)) . 3189) (undo-tree-id1769 . -4) (undo-tree-id1770 . -4) (3188 . 3194) (#("
" 0 1 (fontified t)) . -3188) (undo-tree-id1771 . -1) (undo-tree-id1772 . -1) (undo-tree-id1773 . -1) (#("
" 0 1 (fontified t)) . -3189) (undo-tree-id1774 . -1) (undo-tree-id1775 . -1) (undo-tree-id1776 . -1) (#("
" 0 1 (fontified t)) . -3190) (undo-tree-id1777 . -1) (undo-tree-id1778 . -1) (undo-tree-id1779 . -1) (#("	" 0 1 (fontified t)) . -3191) (undo-tree-id1780 . -1) (undo-tree-id1781 . -1) (#("	" 0 1 (fontified t)) . -3192) (undo-tree-id1782 . -1) (undo-tree-id1783 . -1) (#("	" 0 1 (fontified t)) . -3193) (undo-tree-id1784 . -1) (undo-tree-id1785 . -1) (#("	" 0 1 (fontified t)) . -3194) (undo-tree-id1786 . -1) (undo-tree-id1787 . -1) 3195 (3191 . 3195) (#("				" 0 4 (fontified nil)) . 3190) (undo-tree-id1788 . -4) (undo-tree-id1789 . -4) (3190 . 3195) (#("				" 0 4 (fontified nil)) . 3189) (3189 . 3193) (3189 . 3190)) nil (25246 22227 511496 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 3197 . 3198) (#("
" 0 1 (fontified nil)) . -3271) (3194 . 3272) 3190 (t 25246 22227 530247 0)) nil (25246 22252 241783 500000) 0 nil])
([nil nil ((#("				
" 0 4 (fontified t) 4 5 (fontified t)) . 3190) (undo-tree-id1817 . -5) (undo-tree-id1818 . -3) (undo-tree-id1819 . -3) (undo-tree-id1820 . -3) 3193) nil (25246 22252 241781 200000) 0 nil])
([nil nil ((#("true => " 0 2 (fontified t face font-lock-keyword-face) 2 4 (fontified t face font-lock-keyword-face) 4 6 (fontified t) 6 7 (fontified t syntax-table (1)) 7 8 (fontified t)) . 3193) (undo-tree-id1811 . -7) (undo-tree-id1812 . -7) (undo-tree-id1813 . -7) (undo-tree-id1814 . -8) (undo-tree-id1815 . -7) (undo-tree-id1816 . -7) 3200) nil (25246 22252 241776 100000) 0 nil])
([nil nil ((#("			" 0 2 (fontified nil) 2 3 (fontified nil rear-nonsticky t)) . -3194) (undo-tree-id1804 . -3) (undo-tree-id1805 . -3) (undo-tree-id1806 . -3) (undo-tree-id1807 . -3) (undo-tree-id1808 . -3) (undo-tree-id1809 . -3) (undo-tree-id1810 . -3) (3190 . 3194) 3193) nil (25246 22252 241768 800000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3189) (undo-tree-id1800 . -1) (undo-tree-id1801 . -1) (undo-tree-id1802 . -1) (undo-tree-id1803 . -1)) nil (25246 22252 241757 200000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -3258) (undo-tree-id1821 . -1) (3257 . 3259) (#("," 0 1 (fontified t)) . -3257) (undo-tree-id1822 . -1) (undo-tree-id1823 . -1) (undo-tree-id1824 . -1) (undo-tree-id1825 . -1) 3258 (t 25246 22252 260247 0)) nil (25246 22258 492106 600000) 0 nil])
([nil nil (3256) nil (25246 22264 988392 200000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-preprocessor-face)) . -3193) (undo-tree-id1827 . -1) (3193 . 3194) (t 25246 22258 510247 0)) nil (25246 22264 988390 100000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-string-face)) . -3220) (undo-tree-id1826 . -1) (3205 . 3221) (t 25246 22258 510247 0)) nil (25246 22264 988383 600000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3275 . 3276) (#("
" 0 1 (fontified nil)) . -3332) (3274 . 3333) (t 25246 22265 247 0)) nil (25246 22286 150201 700000) 0 nil])
([nil nil ((#("	" 0 1 (fontified nil)) . -3308) (undo-tree-id1858 . -1) (undo-tree-id1859 . -1) (undo-tree-id1860 . -1) (undo-tree-id1861 . -1) (undo-tree-id1862 . -1) (3306 . 3308) (#("	" 0 1 (fontified nil rear-nonsticky t)) . -3277) (undo-tree-id1863 . -1) (undo-tree-id1864 . -1) (undo-tree-id1865 . -1) (3275 . 3277) 3306) nil (25246 22286 150198 700000) 0 nil])
([nil nil ((#("		" 0 2 (fontified nil)) . -3310) (undo-tree-id1850 . -1) (undo-tree-id1851 . -1) (undo-tree-id1852 . -1) (undo-tree-id1853 . -1) (undo-tree-id1854 . -1) (3307 . 3310) (#("		" 0 2 (fontified nil)) . -3278) (undo-tree-id1855 . -1) (undo-tree-id1856 . -1) (undo-tree-id1857 . -1) (3275 . 3278) 3307) nil (25246 22286 150187 100000) 0 nil])
([nil nil ((#("			" 0 3 (fontified nil)) . -3312) (undo-tree-id1842 . -1) (undo-tree-id1843 . -1) (undo-tree-id1844 . -1) (undo-tree-id1845 . -1) (undo-tree-id1846 . -1) (3308 . 3312) (#("			" 0 3 (fontified nil)) . -3279) (undo-tree-id1847 . -1) (undo-tree-id1848 . -1) (undo-tree-id1849 . -1) (3275 . 3279) 3308) nil (25246 22286 150175 400000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3274) (undo-tree-id1837 . -1) (undo-tree-id1838 . -1) (undo-tree-id1839 . -1) (undo-tree-id1840 . -1) (undo-tree-id1841 . -1)) nil (25246 22286 150162 700000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-variable-name-face)) . -3299) (undo-tree-id1828 . -1) (3287 . 3300) (#("n" 0 1 (fontified t face font-lock-variable-name-face)) . -3287) (undo-tree-id1829 . -1) (undo-tree-id1830 . -1) (#("e" 0 1 (fontified t face font-lock-variable-name-face)) . -3288) (undo-tree-id1831 . -1) (undo-tree-id1832 . -1) (#("w" 0 1 (fontified t face font-lock-variable-name-face)) . -3289) (undo-tree-id1833 . -1) (undo-tree-id1834 . -1) (#("_" 0 1 (fontified t face font-lock-variable-name-face)) . -3290) (undo-tree-id1835 . -1) (undo-tree-id1836 . -1) 3291 (3287 . 3291) (3286 . 3287) (#("foo" 0 3 (fontified t face font-lock-variable-name-face)) . 3286)) nil (25246 22286 150149 700000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -3355) (undo-tree-id1866 . -1) (3342 . 3356) (#("f" 0 1 (fontified t)) . -3342) (undo-tree-id1867 . -1) 3343 (#("oo" 0 2 (fontified t)) . 3343) (t 25246 22286 170247 0)) nil (25246 22289 788438 700000) 0 nil])
([nil nil ((apply -6 3274 3364 undo--wrap-and-run-primitive-undo 3274 3364 ((3324 . 3327) (3278 . 3281) 3311)) (t 25246 22289 800247 0)) nil (25246 22312 254393 500000) 0 nil])
([nil nil ((#("				" 0 4 (fontified nil)) . -3274) (undo-tree-id1878 . -4) 3278 (#("j" 0 1 (fontified t)) . -3278) (undo-tree-id1879 . -1) (3273 . 3279) (t 25246 22312 270247 0)) nil (25246 22358 860967 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 3276 . 3277) (#("
" 0 1 (fontified nil)) . -3367) (3274 . 3368)) nil (25246 22358 860963 300000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3274) (undo-tree-id1877 . -1)) nil (25246 22358 860961 800000) 0 nil])
([nil nil ((#("		" 0 1 (fontified nil) 1 2 (fontified nil rear-nonsticky t)) . -3277) (3274 . 3277)) nil (25246 22358 860960 0) 0 nil])
([nil nil ((#("			" 0 3 (fontified nil)) . -3278) (3274 . 3278)) nil (25246 22358 860958 700000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-string-face)) . -3203) (undo-tree-id1876 . -1) (3201 . 3204)) nil (25246 22358 860957 400000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-constant-face)) . -3233) (undo-tree-id1874 . -1) (3231 . 3234) (#(" " 0 1 (fontified t)) . -3231) (undo-tree-id1875 . -1) 3232 (3230 . 3232) (3225 . 3230)) nil (25246 22358 860954 500000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-type-face)) . -3243) (undo-tree-id1869 . -1) (3237 . 3244) (#("o" 0 1 (fontified t)) . -3237) (undo-tree-id1870 . -1) (undo-tree-id1871 . -1) 3238 (3234 . 3238) (#("C" 0 1 (fontified t face font-lock-type-face)) . -3234) (undo-tree-id1872 . -1) (undo-tree-id1873 . -1) 3235 (3225 . 3235)) nil (25246 22358 860948 700000) 0 nil])
([nil nil ((#("g" 0 1 (fontified t face font-lock-type-face)) . 3243) (undo-tree-id1868 . 1)) nil (25246 22358 860936 600000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -3247) (undo-tree-id1882 . -1) (3247 . 3248) (t 25246 22358 880247 0)) nil (25246 22371 813562 900000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -3268) (undo-tree-id1881 . -1) (3247 . 3269) (t 25246 22358 880247 0)) nil (25246 22371 813559 500000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -3275) (undo-tree-id1880 . -1) (3268 . 3276)) nil (25246 22371 813553 200000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -3274) (undo-tree-id1883 . -1) (3269 . 3275) (t 25246 22371 830247 0)) nil (25246 22374 510408 700000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -3250) (undo-tree-id1884 . -1) (3247 . 3251) (t 25246 22374 530247 0)) nil (25246 22387 128267 500000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -3251) (undo-tree-id1886 . -1) (3250 . 3252) (t 25246 22387 140247 0)) nil (25246 22396 462643 100000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -3278) (undo-tree-id1885 . -1) (3277 . 3279)) nil (25246 22396 462635 900000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -3434) (undo-tree-id1887 . -1) (3433 . 3435) (t 25246 22396 480247 0)) nil (25246 22402 895088 100000) 0 nil])
([nil nil (3433) nil (25246 22417 61611 200000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-preprocessor-face)) . -3343) (undo-tree-id1892 . -1) (3343 . 3344) (t 25246 22402 910247 0)) nil (25246 22417 61609 500000) 0 nil])
([nil nil ((#("self.text, " 0 1 (fontified t face font-lock-keyword-face) 1 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t face font-lock-keyword-face) 4 11 (fontified t)) . 3362) (undo-tree-id1888 . -10) (undo-tree-id1889 . -10) (undo-tree-id1890 . -10) (undo-tree-id1891 . -10) 3372 (t 25246 22402 910247 0)) nil (25246 22417 61605 400000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t face rust-string-interpolation)) . 3353)) nil (25246 22417 61588 400000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t face font-lock-string-face)) . 3353)) nil (25246 22417 61582 300000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -3383) (undo-tree-id1895 . -1) (3383 . 3384) (#("termion::cursor::Goto(1, row as u16" 0 7 (fontified t face font-lock-constant-face) 7 9 (fontified t) 9 13 (fontified t face font-lock-constant-face) 13 15 (fontified t face font-lock-constant-face) 15 17 (fontified t) 17 21 (fontified t face font-lock-type-face) 21 29 (fontified t) 29 31 (fontified t face font-lock-keyword-face) 31 32 (fontified t) 32 35 (fontified t face font-lock-type-face)) . 3383) (undo-tree-id1896 . -17) (t 25246 22417 80247 0)) nil (25246 22431 325581 400000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . 3383) (undo-tree-id1894 . 1)) nil (25246 22431 325578 200000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . 3381)) nil (25246 22431 325576 100000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 3381) (undo-tree-id1893 . -1)) nil (25246 22431 325574 700000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t face rust-string-interpolation)) . 3355)) nil (25246 22431 325564 500000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t face font-lock-string-face)) . 3355)) nil (25246 22431 325559 700000) 0 nil])
([nil nil ((#("				println!(\"{}\", termion::style::Reset);
" 0 4 (fontified t) 4 5 (fontified t face rust-builtin-formatting-macro) 5 6 (fontified t face rust-builtin-formatting-macro) 6 9 (fontified t face rust-builtin-formatting-macro) 9 12 (fontified t face rust-builtin-formatting-macro) 12 13 (fontified t) 13 14 (fontified t face font-lock-string-face) 14 16 (fontified t face rust-string-interpolation) 16 17 (fontified t face font-lock-string-face) 17 19 (fontified t) 19 26 (fontified t face font-lock-constant-face) 26 28 (fontified t) 28 33 (fontified t face font-lock-constant-face) 33 35 (fontified t) 35 40 (fontified t face font-lock-type-face) 40 42 (fontified t) 42 43 (fontified t)) . 3339) (undo-tree-id1897 . 3) (undo-tree-id1898 . -14) (undo-tree-id1899 . -41) (undo-tree-id1900 . -19) (undo-tree-id1901 . 24) (undo-tree-id1902 . -19) (undo-tree-id1903 . -19) (undo-tree-id1904 . -41) (undo-tree-id1905 . -40) (undo-tree-id1906 . -19) (undo-tree-id1907 . -14) (undo-tree-id1908 . -14) (undo-tree-id1909 . -16) (undo-tree-id1910 . -16) (undo-tree-id1911 . -16) 3355 (t 25246 22431 340247 0)) nil (25246 22441 497254 900000) 0 nil])
([nil nil ((3429 . 3472) 3445) nil (25246 22441 497229 600000) 0 nil])
([nil nil ((apply 6 3339 3423 undo--wrap-and-run-primitive-undo 3339 3423 ((#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -3386) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -3343) 3389)) (t 25246 22441 510247 0)) nil (25246 22517 746760 500000) 0 nil])
([nil nil ((#("				termion::raw::RawTerminal::suspend_raw_mode(&stdout);
				print!(\"{}{}{}New Task Name: \", termion::cursor::Goto(1, (todo_list.todos.len() + 10) as u16), color::Fg(color::Black), color::Bg(color::White));
				let mut new_task_name = String::new();
				stdin.read_line(&mut new_task_name);
				println!(\"{}\", termion::style::Reset);
				termion::raw::RawTerminal::activate_raw_mode(&stdout);
" 0 4 (fontified t) 4 11 (fontified t face font-lock-constant-face) 11 13 (fontified t) 13 14 (fontified t face font-lock-constant-face) 14 16 (fontified t face font-lock-constant-face) 16 18 (fontified t) 18 29 (fontified t face font-lock-type-face) 29 48 (fontified t) 48 49 (fontified t face rust-ampersand-face) 49 58 (fontified t) 58 62 (fontified t) 62 68 (fontified t face rust-builtin-formatting-macro) 68 69 (fontified t) 69 70 (fontified t face font-lock-string-face) 70 72 (fontified t face rust-string-interpolation) 72 73 (fontified t face rust-string-interpolation) 73 74 (fontified t face rust-string-interpolation) 74 76 (fontified t face rust-string-interpolation) 76 91 (fontified t face font-lock-string-face) 91 92 (fontified t face font-lock-string-face) 92 93 (fontified t) 93 94 (fontified t) 94 101 (fontified t face font-lock-constant-face) 101 103 (fontified t) 103 109 (fontified t face font-lock-constant-face) 109 111 (fontified t) 111 112 (fontified t face font-lock-type-face) 112 115 (fontified t face font-lock-type-face) 115 148 (fontified t) 148 150 (fontified t face font-lock-keyword-face) 150 151 (fontified t) 151 154 (fontified t face font-lock-type-face) 154 157 (fontified t) 157 162 (fontified t face font-lock-constant-face) 162 164 (fontified t) 164 166 (fontified t face font-lock-type-face) 166 167 (fontified t) 167 170 (fontified t face font-lock-constant-face) 170 171 (fontified t face font-lock-constant-face) 171 172 (fontified t face font-lock-constant-face) 172 174 (fontified t) 174 176 (fontified t face font-lock-type-face) 176 179 (fontified t face font-lock-type-face) 179 181 (fontified t) 181 182 (fontified t) 182 187 (fontified t face font-lock-constant-face) 187 189 (fontified t) 189 190 (fontified t face font-lock-type-face) 190 191 (fontified t face font-lock-type-face) 191 192 (fontified t) 192 197 (fontified t face font-lock-constant-face) 197 199 (fontified t) 199 204 (fontified t face font-lock-type-face) 204 205 (fontified t) 205 208 (fontified t) 208 212 (fontified t) 212 215 (fontified t face font-lock-keyword-face) 215 216 (fontified t) 216 219 (fontified t face font-lock-keyword-face) 219 220 (fontified t) 220 233 (fontified t face font-lock-variable-name-face) 233 236 (fontified t) 236 242 (fontified t face font-lock-type-face) 242 250 (fontified t) 250 251 (fontified t) 251 255 (fontified t) 255 271 (fontified t) 271 272 (fontified t face rust-ampersand-face) 272 275 (fontified t face font-lock-keyword-face) 275 289 (fontified t) 289 291 (fontified t) 291 292 (fontified t) 292 296 (fontified t) 296 297 (fontified t face rust-builtin-formatting-macro) 297 298 (fontified t face rust-builtin-formatting-macro) 298 301 (fontified t face rust-builtin-formatting-macro) 301 304 (fontified t face rust-builtin-formatting-macro) 304 305 (fontified t) 305 306 (fontified t face font-lock-string-face) 306 308 (fontified t face rust-string-interpolation) 308 309 (fontified t face font-lock-string-face) 309 311 (fontified t) 311 318 (fontified t face font-lock-constant-face) 318 320 (fontified t) 320 325 (fontified t face font-lock-constant-face) 325 327 (fontified t) 327 332 (fontified t face font-lock-type-face) 332 334 (fontified t) 334 335 (fontified t) 335 339 (fontified t) 339 346 (fontified t face font-lock-constant-face) 346 348 (fontified t) 348 349 (fontified t face font-lock-constant-face) 349 351 (fontified t face font-lock-constant-face) 351 353 (fontified t) 353 364 (fontified t face font-lock-type-face) 364 384 (fontified t) 384 385 (fontified t face rust-ampersand-face) 385 393 (fontified t) 393 394 (fontified t)) . 3131) (undo-tree-id1928 . 186) (undo-tree-id1929 . -343) (undo-tree-id1930 . -292) (undo-tree-id1931 . -334) (undo-tree-id1932 . -8) (undo-tree-id1933 . -343) (undo-tree-id1934 . -339) (undo-tree-id1935 . -62) (undo-tree-id1936 . -205) (undo-tree-id1937 . -205) (undo-tree-id1938 . -68) (undo-tree-id1939 . -288) (undo-tree-id1940 . -208) (undo-tree-id1941 . -92) (undo-tree-id1942 . -92) (undo-tree-id1943 . -92) (undo-tree-id1944 . -94) (undo-tree-id1945 . -94) (undo-tree-id1946 . -208) (undo-tree-id1947 . -208) (undo-tree-id1948 . -208) (undo-tree-id1949 . -208) (undo-tree-id1950 . -208) (undo-tree-id1951 . -5) (undo-tree-id1952 . -5) (undo-tree-id1953 . -5) (undo-tree-id1954 . -343) (undo-tree-id1955 . -394) (undo-tree-id1956 . -8) (undo-tree-id1957 . -343) (undo-tree-id1958 . -335) (undo-tree-id1959 . -343) 3474 (t 25246 22517 760247 0)) nil (25246 22640 483932 200000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2606 . 2607) (#("
" 0 1 (fontified nil)) . -2996) (2602 . 2997) 2575) nil (25246 22640 483879 200000) 0 nil])
([nil nil ((#("	let stdin = stdin();
	let stdout = stdout();
	let mut stdout = stdout.lock();
	stdout.write_all(b\"password: \").unwrap();
    stdout.flush().unwrap();

	let mut foo = String::new();
	stdin.read_line(&mut foo);
" 0 1 (fontified t) 1 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t) 5 10 (fontified t face font-lock-variable-name-face) 10 22 (fontified t) 22 23 (fontified t rear-nonsticky t) 23 26 (fontified t face font-lock-keyword-face) 26 27 (fontified t) 27 33 (fontified t face font-lock-variable-name-face) 33 45 (fontified t) 45 46 (fontified t) 46 47 (fontified t) 47 50 (fontified t face font-lock-keyword-face) 50 51 (fontified t) 51 54 (fontified t face font-lock-keyword-face) 54 55 (fontified t) 55 57 (fontified t face font-lock-variable-name-face) 57 61 (fontified t face font-lock-variable-name-face) 61 71 (fontified t) 71 77 (fontified t) 77 78 (fontified t) 78 79 (fontified t) 79 80 (fontified t) 80 98 (fontified t) 98 110 (fontified t face font-lock-string-face) 110 122 (fontified t) 122 149 (fontified t) 149 150 (rear-nonsticky t fontified t) 150 151 (fontified t) 151 152 (fontified t) 152 153 (fontified t) 153 156 (fontified t face font-lock-keyword-face) 156 157 (fontified t) 157 160 (fontified t face font-lock-keyword-face) 160 161 (fontified t) 161 164 (fontified t face font-lock-variable-name-face) 164 167 (fontified t) 167 173 (fontified t face font-lock-type-face) 173 181 (fontified t) 181 182 (fontified t) 182 199 (fontified t) 199 200 (fontified t face rust-ampersand-face) 200 203 (fontified t face font-lock-keyword-face) 203 204 (fontified t) 204 209 (fontified t) 209 210 (fontified t)) . 2393) (undo-tree-id1912 . -195) (undo-tree-id1913 . -210) (undo-tree-id1914 . -195) (undo-tree-id1915 . -13) (undo-tree-id1916 . -22) (undo-tree-id1917 . -126) (undo-tree-id1918 . -126) (undo-tree-id1919 . -126) (undo-tree-id1920 . -189) (undo-tree-id1921 . -189) (undo-tree-id1922 . -79) (undo-tree-id1923 . -13) (undo-tree-id1924 . -210) (undo-tree-id1925 . -13) (undo-tree-id1926 . -195) (undo-tree-id1927 . -13) 2406) nil (25246 22640 483875 700000) 0 nil])
([nil nil ((#("			" 0 3 (fontified t)) . -2714) (#("			" 0 3 (fontified t)) . -2674) (#("			" 0 3 (fontified t)) . -2636) (#("			" 0 3 (fontified t)) . -2596) (#("			" 0 3 (fontified t)) . -2449) (#("			" 0 2 (fontified t) 2 3 (fontified t rear-nonsticky t)) . -2394) 2787) nil (25246 22640 483847 600000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2392) (undo-tree-id1968 . -1) (2392 . 2393) 2384 (t 25246 22640 500247 0)) nil (25246 23024 346326 100000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-type-face)) . -2400) (undo-tree-id1967 . -1) (2389 . 2401) (t 25246 22640 500247 0)) nil (25246 23024 346321 900000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2402) (undo-tree-id1960 . -1) (2394 . 2403) (#("f" 0 1 (fontified t)) . -2394) (undo-tree-id1961 . -1) (undo-tree-id1962 . -1) (#("o" 0 1 (fontified t)) . -2395) (undo-tree-id1963 . -1) (undo-tree-id1964 . -1) (#("o" 0 1 (fontified t)) . -2396) (undo-tree-id1965 . -1) (undo-tree-id1966 . -1) 2397 (2394 . 2397) (2389 . 2394)) nil (25246 23024 346313 800000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -187) (undo-tree-id1973 . -1) (187 . 188) 169 (t 25246 23024 360247 0)) nil (25246 23039 550264 500000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -176) (undo-tree-id1972 . -1) (175 . 177) (t 25246 23024 360247 0)) nil (25246 23039 550260 800000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -188) (undo-tree-id1971 . -1) (188 . 189) 175) nil (25246 23039 550257 100000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -188) (undo-tree-id1970 . -1) (187 . 189)) nil (25246 23039 550252 800000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-type-face)) . -200) (undo-tree-id1969 . -1) (187 . 201)) nil (25246 23039 550246 200000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2431) (undo-tree-id1984 . -1) (2431 . 2432) 2391 (t 25246 23039 570247 0)) nil (25246 23054 404136 200000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2429) (undo-tree-id1983 . -1) (2429 . 2430) (t 25246 23039 570247 0)) nil (25246 23054 404132 300000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2431) (undo-tree-id1974 . -1) (2431 . 2432) (#("J" 0 1 (fontified t face font-lock-type-face)) . -2431) (undo-tree-id1975 . -1) (undo-tree-id1976 . -1) (#("k" 0 1 (fontified t face font-lock-type-face)) . -2432) (undo-tree-id1977 . -1) (undo-tree-id1978 . -1) (#(":" 0 1 (fontified t)) . -2433) (undo-tree-id1979 . -1) (undo-tree-id1980 . -1) 2434 (2428 . 2434) (#("," 0 1 (fontified t)) . -2428) (undo-tree-id1981 . -1) (undo-tree-id1982 . -1) 2429 (2428 . 2429) (t 25246 23039 570247 0)) nil (25246 23054 404123 300000) 0 nil])
([nil nil (2415) nil (25246 23072 823023 400000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2391) (undo-tree-id1986 . -1) (2391 . 2392) (t 25246 23054 420247 0)) nil (25246 23072 823021 600000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2406) (undo-tree-id1985 . -1) (2403 . 2407) (t 25246 23054 420247 0)) nil (25246 23072 823014 600000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-type-face)) . -2420) (undo-tree-id1987 . -1) (2415 . 2421) (#("w" 0 1 (fontified t)) . -2415) (undo-tree-id1988 . -1) (undo-tree-id1989 . -1) (#("r" 0 1 (fontified t)) . -2416) (undo-tree-id1990 . -1) (undo-tree-id1991 . -1) 2417 (2413 . 2417) (#(";" 0 1 (fontified t)) . -2413) (undo-tree-id1992 . -1) (undo-tree-id1993 . -1) 2414 (2409 . 2414) (#("i" 0 1 (fontified t)) . -2409) (undo-tree-id1994 . -1) (undo-tree-id1995 . -1) (#("o" 0 1 (fontified t)) . -2410) (undo-tree-id1996 . -1) (undo-tree-id1997 . -1) 2411 (2406 . 2411) (#("S" 0 1 (fontified t face font-lock-type-face)) . -2406) (undo-tree-id1998 . -1) (undo-tree-id1999 . -1) (#("t" 0 1 (fontified t face font-lock-type-face)) . -2407) (undo-tree-id2000 . -1) (undo-tree-id2001 . -1) 2408 (2405 . 2408) (t 25246 23072 840247 0)) nil (25246 23100 622871 600000) 0 nil])
([nil nil (2516) nil (25246 23138 170695 500000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2655 . 2656) (#("
" 0 1 (fontified nil)) . -2801) (2654 . 2802) 2563) nil (25246 23154 731619 0) 0 nil] [nil nil ((#("{" 0 1 (fontified t face rust-string-interpolation)) . 2521)) ((2521 . 2522)) (25246 23137 737688 500000) 0 nil] [nil nil ((#("j" 0 1 (fontified t face font-lock-comment-face)) . -2512) (undo-tree-id2002 . -1) (2509 . 2513) (t 25246 23100 640247 0)) ((#("// j" 0 3 (fontified nil face font-lock-comment-delimiter-face) 3 4 (fontified nil face font-lock-comment-face)) . 2509) (undo-tree-id2003 . -2) (undo-tree-id2004 . -2) (undo-tree-id2005 . -2) (2512 . 2513) (t 25246 23128 810247 0)) (25246 23128 793386 900000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-comment-face)) . -2512) (undo-tree-id2007 . -1) (2509 . 2513)) nil (25246 23154 731617 200000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t face font-lock-string-face)) . 2521)) ((2521 . 2522)) (25246 23137 737613 700000) 0 nil])
nil
([nil nil ((#("(todo_list.todos.len()" 0 22 (fontified t)) . 2716)) nil (25246 23154 731614 100000) 0 nil])
nil
([nil nil ((#("+" 0 1 (fontified t)) . 2717)) nil (25246 23154 731613 200000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2717)) nil (25246 23154 731612 300000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . 2717)) nil (25246 23154 731611 400000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . 2717)) nil (25246 23154 731610 500000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . 2717)) nil (25246 23154 731609 600000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2717)) nil (25246 23154 731608 700000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t face font-lock-keyword-face)) . 2717)) nil (25246 23154 731607 800000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . 2717)) nil (25246 23154 731606 900000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2717)) nil (25246 23154 731605 800000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t face font-lock-type-face)) . 2717)) nil (25246 23154 731604 900000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . 2717)) nil (25246 23154 731603 800000) 0 nil])
([nil nil ((#("6" 0 1 (fontified t)) . 2717)) nil (25246 23154 731602 0) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2719) (undo-tree-id2006 . -1) (2717 . 2720)) nil (25246 23326 983693 200000) 0 nil])
([nil nil ((#("j" 0 1 (fontified nil)) . 2436) (2435 . 2437)) ((#("&j" 0 1 (fontified nil face rust-ampersand-face) 1 2 (fontified nil)) . 2435) (2436 . 2437)) (25246 23333 985643 100000) 0 nil])
([nil nil nil nil (25246 23334 480343 0) 0 nil])
([nil nil ((#("j" 0 1 (fontified nil)) . 2391) (2391 . 2392)) ((#("j" 0 1 (fontified nil)) . 2391) (2391 . 2392)) (25246 23334 510349 600000) 0 nil])
([nil nil ((#("fn get_input<W:std::io::Write>(&mut stdout: &RawTerminal<W>) {
	termion::raw::RawTerminal::suspend_raw_mode(&stdout);
	// print!(\"{}{}{}New Task Name: \", termion::cursor::Goto(1, (todo_list.todos.len() + 10) as u16), color::Fg(color::Black), color::Bg(color::White));
	print!(\"{}{}{}New Task Name: \", termion::cursor::Goto(1,  10), color::Fg(color::Black), color::Bg(color::White));
	let mut new_task_name = String::new();
	stdin.read_line(&mut new_task_name);
	println!(\"{}\", termion::style::Reset);
	termion::raw::RawTerminal::activate_raw_mode(&stdout);
}
" 0 2 (fontified t face font-lock-keyword-face) 2 3 (fontified t) 3 12 (fontified t face font-lock-function-name-face) 12 13 (fontified t) 13 14 (fontified t face font-lock-variable-name-face) 14 15 (fontified t) 15 16 (fontified t face font-lock-constant-face) 16 18 (fontified t face font-lock-constant-face) 18 20 (fontified t) 20 22 (fontified t face font-lock-constant-face) 22 24 (fontified t) 24 29 (fontified t face font-lock-type-face) 29 30 (fontified t) 30 31 (fontified t) 31 32 (fontified t face rust-ampersand-face) 32 35 (fontified t face font-lock-keyword-face) 35 36 (fontified t) 36 42 (fontified t face font-lock-variable-name-face) 42 44 (fontified t) 44 45 (fontified t face rust-ampersand-face) 45 56 (fontified t face font-lock-type-face) 56 57 (fontified t) 57 58 (fontified t face font-lock-type-face) 58 59 (fontified t) 59 63 (fontified t) 63 64 (fontified t) 64 71 (fontified t face font-lock-constant-face) 71 73 (fontified t) 73 74 (fontified t face font-lock-constant-face) 74 76 (fontified t face font-lock-constant-face) 76 78 (fontified t) 78 89 (fontified t face font-lock-type-face) 89 108 (fontified t) 108 109 (fontified t face rust-ampersand-face) 109 118 (fontified t) 118 119 (fontified t) 119 122 (fontified t face font-lock-comment-delimiter-face) 122 128 (fontified t face font-lock-comment-face) 128 129 (fontified t face font-lock-comment-face) 129 130 (fontified t face font-lock-comment-face) 130 132 (fontified t face font-lock-comment-face) 132 133 (fontified t face font-lock-comment-face) 133 134 (fontified t face font-lock-comment-face) 134 135 (fontified t face font-lock-comment-face) 135 136 (fontified t face font-lock-comment-face) 136 151 (fontified t face font-lock-comment-face) 151 152 (fontified t face font-lock-comment-face) 152 153 (fontified t face font-lock-comment-face) 153 154 (fontified t face font-lock-comment-face) 154 161 (fontified t face font-lock-comment-face) 161 163 (fontified t face font-lock-comment-face) 163 169 (fontified t face font-lock-comment-face) 169 171 (fontified t face font-lock-comment-face) 171 172 (fontified t face font-lock-comment-face) 172 175 (fontified t face font-lock-comment-face) 175 208 (fontified t face font-lock-comment-face) 208 210 (fontified t face font-lock-comment-face) 210 211 (fontified t face font-lock-comment-face) 211 214 (fontified t face font-lock-comment-face) 214 217 (fontified t face font-lock-comment-face) 217 222 (fontified t face font-lock-comment-face) 222 224 (fontified t face font-lock-comment-face) 224 226 (fontified t face font-lock-comment-face) 226 227 (fontified t face font-lock-comment-face) 227 230 (fontified t face font-lock-comment-face) 230 231 (fontified t face font-lock-comment-face) 231 232 (fontified t face font-lock-comment-face) 232 234 (fontified t face font-lock-comment-face) 234 236 (fontified t face font-lock-comment-face) 236 239 (fontified t face font-lock-comment-face) 239 241 (fontified t face font-lock-comment-face) 241 242 (fontified t face font-lock-comment-face) 242 247 (fontified t face font-lock-comment-face) 247 249 (fontified t face font-lock-comment-face) 249 250 (fontified t face font-lock-comment-face) 250 251 (fontified t face font-lock-comment-face) 251 252 (fontified t face font-lock-comment-face) 252 257 (fontified t face font-lock-comment-face) 257 259 (fontified t face font-lock-comment-face) 259 264 (fontified t face font-lock-comment-face) 264 265 (fontified t face font-lock-comment-face) 265 267 (fontified t face font-lock-comment-face) 267 268 (fontified t face font-lock-comment-face) 268 269 (rear-nonsticky t fontified t) 269 275 (fontified t face rust-builtin-formatting-macro) 275 276 (fontified t) 276 277 (fontified t face font-lock-string-face) 277 279 (fontified t face rust-string-interpolation) 279 280 (fontified t face rust-string-interpolation) 280 281 (fontified t face rust-string-interpolation) 281 282 (fontified t face rust-string-interpolation) 282 283 (fontified t face rust-string-interpolation) 283 298 (fontified t face font-lock-string-face) 298 299 (fontified t face font-lock-string-face) 299 300 (fontified t) 300 301 (fontified t) 301 308 (fontified t face font-lock-constant-face) 308 310 (fontified t) 310 316 (fontified t face font-lock-constant-face) 316 318 (fontified t) 318 319 (fontified t face font-lock-type-face) 319 322 (fontified t face font-lock-type-face) 322 329 (fontified t) 329 332 (fontified t) 332 337 (fontified t face font-lock-constant-face) 337 339 (fontified t) 339 341 (fontified t face font-lock-type-face) 341 342 (fontified t) 342 345 (fontified t face font-lock-constant-face) 345 346 (fontified t face font-lock-constant-face) 346 347 (fontified t face font-lock-constant-face) 347 349 (fontified t) 349 351 (fontified t face font-lock-type-face) 351 354 (fontified t face font-lock-type-face) 354 356 (fontified t) 356 357 (fontified t) 357 362 (fontified t face font-lock-constant-face) 362 364 (fontified t) 364 365 (fontified t face font-lock-type-face) 365 366 (fontified t face font-lock-type-face) 366 367 (fontified t) 367 372 (fontified t face font-lock-constant-face) 372 374 (fontified t) 374 379 (fontified t face font-lock-type-face) 379 380 (fontified t) 380 382 (fontified t) 382 383 (fontified t) 383 384 (fontified t) 384 387 (fontified t face font-lock-keyword-face) 387 388 (fontified t) 388 391 (fontified t face font-lock-keyword-face) 391 392 (fontified t) 392 405 (fontified t face font-lock-variable-name-face) 405 408 (fontified t) 408 414 (fontified t face font-lock-type-face) 414 422 (fontified t) 422 423 (fontified t) 423 424 (fontified t) 424 440 (fontified t) 440 441 (fontified t face rust-ampersand-face) 441 444 (fontified t face font-lock-keyword-face) 444 458 (fontified t) 458 460 (fontified t) 460 461 (fontified t) 461 462 (fontified t) 462 463 (fontified t face rust-builtin-formatting-macro) 463 464 (fontified t face rust-builtin-formatting-macro) 464 467 (fontified t face rust-builtin-formatting-macro) 467 470 (fontified t face rust-builtin-formatting-macro) 470 471 (fontified t) 471 472 (fontified t face font-lock-string-face) 472 474 (fontified t face rust-string-interpolation) 474 475 (fontified t face font-lock-string-face) 475 477 (fontified t) 477 484 (fontified t face font-lock-constant-face) 484 486 (fontified t) 486 491 (fontified t face font-lock-constant-face) 491 493 (fontified t) 493 498 (fontified t face font-lock-type-face) 498 500 (fontified t) 500 501 (fontified t) 501 502 (fontified t) 502 509 (fontified t face font-lock-constant-face) 509 511 (fontified t) 511 512 (fontified t face font-lock-constant-face) 512 514 (fontified t face font-lock-constant-face) 514 516 (fontified t) 516 527 (fontified t face font-lock-type-face) 527 547 (fontified t) 547 548 (fontified t face rust-ampersand-face) 548 556 (fontified t) 556 557 (fontified t) 557 558 (fontified t) 558 559 (fontified t)) . 2391) (undo-tree-id2202 . -558) (undo-tree-id2203 . -268) (undo-tree-id2204 . -382) (undo-tree-id2205 . -14) (undo-tree-id2206 . -558) (undo-tree-id2207 . -63) (undo-tree-id2208 . -63) (undo-tree-id2209 . -557) (undo-tree-id2210 . -85) (undo-tree-id2211 . -85) (undo-tree-id2212 . -28) (undo-tree-id2213 . -28) (undo-tree-id2214 . -557) (undo-tree-id2215 . -558)) ((2391 . 2950)) (25246 23334 547541 600000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2391) (undo-tree-id2216 . 1)) ((2391 . 2392)) (25246 23334 578750 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2536) (undo-tree-id2217 . -1) (undo-tree-id2218 . -1) (undo-tree-id2219 . -1)) ((2536 . 2537)) (25246 23334 611131 100000) 0 nil])
([nil nil ((#("j" 0 1 (fontified nil)) . 2925) (2914 . 2926)) ((#("
				" 0 1 (fontified t) 1 5 (fontified nil)) . 2914) (undo-tree-id2186 . -5) (undo-tree-id2187 . -5) (undo-tree-id2188 . -5) (undo-tree-id2189 . -5) (undo-tree-id2190 . -5) (undo-tree-id2191 . -5) (undo-tree-id2192 . -1) (undo-tree-id2193 . -5) (undo-tree-id2194 . -1) (undo-tree-id2195 . -5) (undo-tree-id2196 . -1) (undo-tree-id2197 . -5) (undo-tree-id2198 . -1) (undo-tree-id2199 . -5) (#("stdoutj" 0 1 (fontified nil) 1 6 (fontified nil) 6 7 (fontified nil)) . 2919) (undo-tree-id2200 . -5) (undo-tree-id2201 . -5) (2925 . 2926)) (25246 23334 642553 700000) 0 nil])
([nil nil nil nil (25246 23334 678284 500000) 0 nil])
([nil nil ((#("j" 0 1 (fontified nil)) . 2919) (2919 . 2920)) ((#("j" 0 1 (fontified nil)) . 2919) (undo-tree-id2185 . -1) (2919 . 2920)) (25246 23334 710743 300000) 0 nil])
([nil nil ((#("j" 0 1 (fontified nil)) . 2932) (undo-tree-id2220 . -1) (2919 . 2933)) ((#("RawTerminal::j" 0 11 (fontified nil face font-lock-type-face) 11 13 (fontified nil) 13 14 (fontified nil)) . 2919) (undo-tree-id2175 . -13) (undo-tree-id2176 . -14) (undo-tree-id2177 . -13) (undo-tree-id2178 . -13) (undo-tree-id2179 . -13) (undo-tree-id2180 . -13) (undo-tree-id2181 . -13) (undo-tree-id2182 . -13) (undo-tree-id2183 . -13) (undo-tree-id2184 . -13) (2932 . 2933)) (25246 23334 745260 600000) 0 nil] [nil nil ((#("s" 0 1 (fontified t)) . 2919) (2920 . 2921) 2919) ((#("a" 0 1 (fontified nil)) . 2920) (undo-tree-id2037 . 1) (2919 . 2920)) (25246 23191 485324 600000) 0 nil])
([nil nil ((#("j" 0 1 (fontified nil)) . 2938) (2938 . 2939)) ((#("j" 0 1 (fontified nil)) . 2938) (2938 . 2939)) (25246 23334 778902 0) 0 nil])
nil
([nil nil ((#("j" 0 1 (fontified nil)) . 2941) (2932 . 2942) (#("stdout" 0 1 (fontified t) 1 6 (fontified t)) . 2932) (undo-tree-id2221 . -5) (undo-tree-id2222 . -6) (undo-tree-id2223 . -6) (undo-tree-id2224 . -5)) ((2932 . 2938) (#("suspend()j" 0 7 (fontified nil) 7 8 (fontified nil) 8 9 (fontified nil) 9 10 (fontified nil)) . 2932) (undo-tree-id2165 . -9) (undo-tree-id2166 . -8) (undo-tree-id2167 . -9) (undo-tree-id2168 . -9) (undo-tree-id2169 . -9) (undo-tree-id2170 . -9) (undo-tree-id2171 . -9) (undo-tree-id2172 . -9) (undo-tree-id2173 . -9) (undo-tree-id2174 . -8) (2941 . 2942)) (25246 23334 809967 500000) 0 nil])
([nil nil ((#("j" 0 1 (fontified nil)) . 2940) (2940 . 2941)) ((#("j" 0 1 (fontified nil)) . 2940) (2940 . 2941)) (25246 23334 842130 700000) 0 nil])
([nil nil ((#("j" 0 1 (fontified nil)) . 2948) (2939 . 2949)) ((#("_raw_" 0 5 (fontified nil)) . 2939) (#("modej" 0 4 (fontified nil) 4 5 (fontified nil)) . 2944) (2948 . 2949)) (25246 23334 874831 600000) 0 nil])
([nil nil ((#("j" 0 1 (fontified nil)) . 2951) (2950 . 2952)) ((#(";j" 0 1 (fontified nil) 1 2 (fontified nil)) . 2950) (undo-tree-id2158 . -1) (undo-tree-id2159 . -1) (undo-tree-id2160 . -1) (undo-tree-id2161 . -1) (undo-tree-id2162 . -1) (undo-tree-id2163 . -1) (undo-tree-id2164 . -1) (2951 . 2952)) (25246 23334 907871 400000) 0 nil])
([nil nil ((#("j" 0 1 (fontified nil)) . 2951) (2951 . 2952)) ((#("j" 0 1 (fontified nil)) . 2951) (2951 . 2952)) (25246 23334 939557 200000) 0 nil])
([nil nil ((#("j" 0 1 (fontified nil)) . 2955) (2949 . 2956)) ((#("stdoutj" 0 6 (fontified nil) 6 7 (fontified nil)) . 2949) (2955 . 2956)) (25246 23334 972776 200000) 0 nil])
([nil nil ((#("j" 0 1 (fontified nil)) . 2950) (2949 . 2951)) ((#("&j" 0 1 (fontified nil face rust-ampersand-face) 1 2 (fontified nil)) . 2949) (2950 . 2951)) (25246 23335 8932 0) 0 nil])
([nil nil ((#("j" 0 1 (fontified nil)) . 2971) (2958 . 2972)) ((#("
				" 0 1 (fontified t) 1 5 (fontified nil)) . 2958) (undo-tree-id2152 . 5) (undo-tree-id2153 . -5) (undo-tree-id2154 . -1) (undo-tree-id2155 . -5) (#("write!()j" 0 6 (fontified nil face font-lock-preprocessor-face) 6 7 (fontified nil) 7 8 (fontified nil) 8 9 (fontified nil)) . 2963) (undo-tree-id2156 . -7) (undo-tree-id2157 . -7) (2971 . 2972)) (25246 23335 39078 0) 0 nil])
([nil nil ((#("j" 0 1 (fontified nil)) . 2972) (2970 . 2973)) ((#("\"\"j" 0 2 (fontified nil face font-lock-string-face) 2 3 (fontified nil)) . 2970) (undo-tree-id2150 . -1) (undo-tree-id2151 . -1) (2972 . 2973)) (25246 23335 71925 100000) 0 nil])
([nil nil nil nil (25246 23335 104650 900000) 0 nil])
([nil nil ((#("j" 0 1 (fontified nil face font-lock-preprocessor-face)) . 2969) (2963 . 2970)) ((#("stdoutj" 0 6 (fontified nil face font-lock-preprocessor-face) 6 7 (fontified nil face font-lock-preprocessor-face)) . 2963) (undo-tree-id2148 . -5) (2969 . 2970)) (25246 23335 137034 0) 0 nil])
([nil nil ((#("				stdoutwrite!(\"\")
" 0 4 (fontified t) 4 10 (fontified t face font-lock-preprocessor-face) 10 16 (fontified t face font-lock-preprocessor-face) 16 17 (fontified t) 17 19 (fontified t face font-lock-string-face) 19 20 (fontified t) 20 21 (fontified t)) . 2959) (undo-tree-id2225 . -21) (undo-tree-id2226 . -21) (undo-tree-id2227 . -21) (undo-tree-id2228 . -21) (undo-tree-id2229 . -21) (undo-tree-id2230 . -21) (undo-tree-id2231 . -21) (undo-tree-id2232 . -21) (undo-tree-id2233 . -21) (undo-tree-id2234 . -21) (undo-tree-id2235 . -21) (undo-tree-id2236 . -21) (undo-tree-id2237 . -21) (undo-tree-id2238 . -21) (undo-tree-id2239 . -21) (undo-tree-id2240 . -21) (undo-tree-id2241 . -21) (undo-tree-id2242 . -10) (undo-tree-id2243 . -20) (undo-tree-id2244 . -10)) ((2959 . 2980)) (25246 23335 170686 500000) 0 nil])
([nil nil ((#("j" 0 1 (fontified nil)) . 2972) (2967 . 2973) (#("ltn()" 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil) 4 5 (fontified nil)) . 2967) (2958 . 2972)) ((#("
				" 0 1 (fontified t) 1 5 (fontified nil)) . 2958) (undo-tree-id2126 . -5) (undo-tree-id2127 . -5) (undo-tree-id2129 . -5) (undo-tree-id2130 . -1) (undo-tree-id2131 . -5) (undo-tree-id2132 . -1) (undo-tree-id2133 . -5) (undo-tree-id2135 . -5) (#("prinltn()" 0 4 (fontified nil) 4 5 (fontified nil) 5 6 (fontified nil) 6 7 (fontified nil) 7 8 (fontified nil) 8 9 (fontified nil)) . 2963) (undo-tree-id2136 . -4) (undo-tree-id2137 . -9) (undo-tree-id2139 . -4) (undo-tree-id2140 . -4) (2967 . 2972) (#("tln()j" 0 3 (fontified nil) 3 4 (fontified nil) 4 5 (fontified nil) 5 6 (fontified nil)) . 2967) (undo-tree-id2142 . -5) (undo-tree-id2143 . -3) (undo-tree-id2145 . -5) (undo-tree-id2146 . -5) (2972 . 2973)) (25246 23335 204945 500000) 0 nil])
([nil nil ((#("j" 0 1 (fontified nil)) . 2971) (2970 . 2972)) ((#("!j" 0 1 (fontified nil face rust-builtin-formatting-macro) 1 2 (fontified nil)) . 2970) (2971 . 2972)) (25246 23335 238151 400000) 0 nil])
([nil nil ((#("j" 0 1 (fontified nil)) . 2973) (2973 . 2974)) ((#("j" 0 1 (fontified nil)) . 2973) (2973 . 2974)) (25246 23335 269649 200000) 0 nil])
([nil nil ((#("j" 0 1 (fontified nil)) . 2974) (undo-tree-id2245 . -1) (2972 . 2975)) ((#("\"\"j" 0 1 (fontified nil face font-lock-string-face) 1 2 (fontified nil face font-lock-string-face) 2 3 (fontified nil)) . 2972) (undo-tree-id2124 . -3) (2974 . 2975)) (25246 23335 301711 700000) 0 nil])
([nil nil ((#("j" 0 1 (fontified nil)) . 2976) (2975 . 2977)) ((#(";j" 0 1 (fontified nil) 1 2 (fontified nil)) . 2975) (undo-tree-id2121 . -1) (undo-tree-id2123 . -1) (2976 . 2977)) (25246 23335 333797 300000) 0 nil])
([nil nil ((#("j" 0 1 (fontified nil face font-lock-string-face)) . 2973) (2973 . 2974)) ((#("j" 0 1 (fontified nil face font-lock-string-face)) . 2973) (undo-tree-id2120 . -1) (2973 . 2974)) (25246 23335 368997 200000) 0 nil])
([nil nil ((#("j" 0 1 (fontified nil face font-lock-string-face)) . 2981) (2973 . 2982)) ((#("Fo" 0 2 (fontified nil face font-lock-string-face)) . 2973) (#("obar: j" 0 6 (fontified nil face font-lock-string-face) 6 7 (fontified nil face font-lock-string-face)) . 2975) (2981 . 2982)) (25246 23335 400818 700000) 0 nil])
([nil nil ((#("				j" 0 4 (fontified nil) 4 5 (fontified nil)) . 2985) (2984 . 2990)) ((#("
				" 0 1 (fontified t) 1 5 (fontified nil)) . 2984) (undo-tree-id2115 . 5) (undo-tree-id2116 . -5) (undo-tree-id2118 . -1) (#("j" 0 1 (fontified nil)) . 2989) (undo-tree-id2119 . -1) (2985 . 2990)) (25246 23335 431852 400000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2985) (undo-tree-id2246 . -1) (undo-tree-id2247 . -1) (undo-tree-id2248 . -1) (undo-tree-id2249 . -1) (undo-tree-id2250 . -1) (undo-tree-id2251 . -1) (undo-tree-id2252 . -1) (undo-tree-id2253 . -1) (undo-tree-id2254 . -1) (undo-tree-id2255 . -1) (undo-tree-id2256 . -1) (undo-tree-id2257 . -1) (undo-tree-id2258 . -1) (undo-tree-id2259 . -1) (undo-tree-id2260 . -1) (undo-tree-id2261 . -1) (undo-tree-id2262 . -1) (undo-tree-id2263 . -1) (undo-tree-id2264 . -1)) ((2985 . 2986)) (25246 23335 466028 700000) 0 nil])
([nil nil ((#("j" 0 1 (fontified nil)) . 2999) (2984 . 3000)) ((#("
				" 0 1 (fontified t) 1 5 (fontified nil)) . 2984) (undo-tree-id2108 . -5) (undo-tree-id2109 . -5) (undo-tree-id2111 . -5) (#("TermRead()j" 0 8 (fontified nil face font-lock-type-face) 8 10 (fontified nil) 10 11 (fontified nil)) . 2989) (undo-tree-id2112 . -9) (undo-tree-id2113 . -9) (2999 . 3000) (t 25246 23322 770247 0)) (25246 23335 497589 0) 0 nil])
([nil nil ((#("				TermRead()
" 0 4 (fontified t) 4 12 (fontified t face font-lock-type-face) 12 14 (fontified t) 14 15 (fontified t)) . 2985) (undo-tree-id2292 . 1) (undo-tree-id2293 . -15) (undo-tree-id2294 . -15) (undo-tree-id2295 . -15) (undo-tree-id2296 . -15) (undo-tree-id2297 . -15) (undo-tree-id2298 . -15) (undo-tree-id2299 . -15) (undo-tree-id2300 . -15) (undo-tree-id2301 . -15) (undo-tree-id2302 . -15) (undo-tree-id2303 . -15) (undo-tree-id2304 . -15) (undo-tree-id2305 . -15) (undo-tree-id2306 . -15) (undo-tree-id2307 . -15) (undo-tree-id2308 . -15) (undo-tree-id2309 . -15) (undo-tree-id2310 . -13) (undo-tree-id2311 . -13) (undo-tree-id2312 . -14) (undo-tree-id2313 . -13) 2998 (t 25246 23322 770247 0)) nil (25246 23348 529036 200000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -3000) (undo-tree-id2291 . -1) (2989 . 3001) (2984 . 2989)) nil (25246 23348 529012 600000) 0 nil])
([nil nil ((#("				c.read_line
" 0 15 (fontified t) 15 16 (fontified t)) . 2985) (undo-tree-id2267 . 1) (undo-tree-id2268 . -16) (undo-tree-id2269 . -16) (undo-tree-id2270 . -16) (undo-tree-id2271 . -16) (undo-tree-id2272 . -16) (undo-tree-id2273 . -16) (undo-tree-id2274 . -16) (undo-tree-id2275 . -16) (undo-tree-id2276 . -16) (undo-tree-id2277 . -16) (undo-tree-id2278 . -16) (undo-tree-id2279 . -16) (undo-tree-id2280 . -16) (undo-tree-id2281 . -16) (undo-tree-id2282 . -16) (undo-tree-id2283 . -16) (undo-tree-id2284 . -16) (undo-tree-id2285 . -16) (undo-tree-id2286 . -14) (undo-tree-id2287 . -16) (undo-tree-id2288 . -16) (undo-tree-id2289 . -16) (undo-tree-id2290 . -14) 2999) nil (25246 23348 529008 0) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -3007) (undo-tree-id2266 . -1) (2991 . 3008) (2989 . 2991) (2984 . 2989)) nil (25246 23348 528979 400000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -3008) (undo-tree-id2265 . -1) (3007 . 3009)) nil (25246 23348 528972 200000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -3008) (undo-tree-id2323 . -1) (3008 . 3009) 3007 (t 25246 23348 550247 0)) nil (25246 23370 156992 0) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -3006) (undo-tree-id2322 . -1) (3006 . 3007) (t 25246 23348 550247 0)) nil (25246 23370 156988 600000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-variable-name-face)) . -2994) (undo-tree-id2321 . -1) (2989 . 2995) (2984 . 2989) (t 25246 23348 550247 0)) nil (25246 23370 156985 300000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -3001) (undo-tree-id2316 . -1) (2993 . 3002) (#("f" 0 1 (fontified t face font-lock-variable-name-face)) . -2993) (undo-tree-id2317 . -1) (undo-tree-id2318 . -1) 2994 (2993 . 2994) (#("f" 0 1 (fontified t face font-lock-variable-name-face)) . -2993) (undo-tree-id2319 . -1) (undo-tree-id2320 . -1) 2994) nil (25246 23370 156981 0) 0 nil])
([nil nil ((#("&" 0 1 (fontified t face rust-ampersand-face)) . 2993)) nil (25246 23370 156972 0) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -3017) (undo-tree-id2315 . -1) (3004 . 3018) (3000 . 3004)) nil (25246 23370 156969 800000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -3043) (undo-tree-id2314 . -1) (3039 . 3044)) nil (25246 23370 156961 500000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -3044) (undo-tree-id2324 . -1) (3040 . 3045) (t 25246 23370 170247 0)) nil (25246 23381 825129 300000) 0 nil])
([nil nil (3043) nil (25246 23394 458393 500000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -3022) (undo-tree-id2326 . -1) (3022 . 3023) (t 25246 23381 830247 0)) nil (25246 23394 458391 500000) 0 nil])
([nil nil ((#("&" 0 1 (fontified t face rust-ampersand-face)) . 3022) (undo-tree-id2325 . 1) (t 25246 23381 830247 0)) nil (25246 23894 2063 900000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2404) (undo-tree-id2363 . -1) (2397 . 2405) (#(" " 0 1 (fontified t)) . -2397) (undo-tree-id2364 . -1) (undo-tree-id2365 . -1) 2398 (2391 . 2398) (2389 . 2391) (t 25246 23895 940247 0)) nil (25246 23943 845266 900000) 0 nil] [nil nil ((#("j" 0 1 (fontified t)) . -2562) (undo-tree-id2335 . -1) (2558 . 2563) (2537 . 2558) (2536 . 2537) (#("	" 0 1 (fontified nil)) . 2535) (undo-tree-id2336 . -1) (2534 . 2537) (t 25246 23394 480247 0)) ((#("
	
" 0 1 (fontified t) 1 2 (fontified nil) 2 3 (fontified nil)) . 2534) (undo-tree-id2340 . -3) (undo-tree-id2341 . -3) (undo-tree-id2342 . -3) (2535 . 2536) (#("	" 0 1 (fontified nil)) . 2536) (undo-tree-id2343 . -1) (undo-tree-id2344 . -1) (#("let foo = stdin.event" 0 3 (fontified nil face font-lock-keyword-face) 3 4 (fontified nil) 4 7 (fontified nil face font-lock-variable-name-face) 7 21 (fontified nil)) . 2537) (undo-tree-id2345 . -4) (undo-tree-id2346 . -4) (#("s();j" 0 4 (fontified nil) 4 5 (fontified nil)) . 2558) (2562 . 2563)) (25246 23893 525523 300000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2404) (undo-tree-id2362 . -1) (2404 . 2405) 2403) nil (25246 23943 845261 800000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-variable-name-face)) . -2544) (undo-tree-id2334 . -1) (2543 . 2545) (2541 . 2543) (#("foo" 0 3 (fontified t face font-lock-variable-name-face)) . 2541)) ((2541 . 2544) (#("ba" 0 2 (fontified nil face font-lock-variable-name-face)) . 2541) (#("rj" 0 1 (fontified nil face font-lock-variable-name-face) 1 2 (fontified nil face font-lock-variable-name-face)) . 2543) (2544 . 2545)) (25246 23892 907757 700000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-function-name-face)) . -2403) (undo-tree-id2361 . -1) (2402 . 2404)) nil (25246 23943 845259 600000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2577) (undo-tree-id2327 . -1) (2574 . 2578) (#("stdin.events()" 0 5 (fontified t) 5 14 (fontified t)) . 2574) (undo-tree-id2328 . -13) (undo-tree-id2329 . -13) (undo-tree-id2330 . -13) (undo-tree-id2331 . -14) (undo-tree-id2332 . -13) (undo-tree-id2333 . -13) 2587) ((2574 . 2588) (#("barj" 0 3 (fontified nil) 3 4 (fontified nil)) . 2574) (undo-tree-id2337 . -2) (undo-tree-id2338 . -2) (undo-tree-id2339 . -2) (2577 . 2578) (t 25246 23883 610247 0)) (25246 23883 593873 600000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2409) (undo-tree-id2356 . -1) (2409 . 2410) (#("	" 0 1 (fontified nil)) . -2408) (undo-tree-id2357 . -1) (undo-tree-id2358 . -1) (2409 . 2410) (2408 . 2409) (#("	" 0 1 (fontified nil)) . 2407) (undo-tree-id2359 . -1) (undo-tree-id2360 . -1) (2406 . 2409) (2405 . 2406)) nil (25246 23943 845256 600000) 0 nil])
nil
([nil nil ((#("
" 0 1 (fontified t)) . 2407) (undo-tree-id2355 . 1)) nil (25246 23943 845248 700000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2430) (undo-tree-id2354 . -1) (2430 . 2431) (2428 . 2430) (2408 . 2428) (2406 . 2408)) nil (25246 23943 845245 900000) 0 nil])
([nil nil ((#("	
" 0 1 (fontified t) 1 2 (fontified t)) . 2429) (undo-tree-id2352 . 1) (undo-tree-id2353 . -2)) nil (25246 23943 845242 100000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2447) (undo-tree-id2351 . -1) (2446 . 2448) (2430 . 2446) (2428 . 2430)) nil (25246 23943 845234 600000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2446) (undo-tree-id2350 . -1) (2446 . 2447)) nil (25246 23943 845230 700000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2458) (undo-tree-id2349 . -1) (2451 . 2459) (2430 . 2451) (2428 . 2430)) nil (25246 23943 845226 500000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2484) (undo-tree-id2348 . -1) (2476 . 2485)) nil (25246 23943 845198 700000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2486) (undo-tree-id2347 . -1) (2485 . 2487)) nil (25246 23943 845189 700000) 0 nil])
([nil nil ((apply -6 3084 3154 undo--wrap-and-run-primitive-undo 3084 3154 ((3124 . 3127) (3088 . 3091) 3101)) (t 25246 23943 860247 0)) nil (25246 23955 210589 100000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -3100) (undo-tree-id2366 . -1) (3088 . 3101) (3083 . 3088)) nil (25246 23955 210583 900000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t face rust-builtin-formatting-macro)) . 3067) (t 25246 23955 230247 0)) nil (25246 23957 988402 700000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t face font-lock-preprocessor-face)) . 3067)) nil (25246 23957 988396 900000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3102 . 3103) (#("
" 0 1 (fontified nil)) . -3142) (3098 . 3143) 3091 (t 25246 23958 10247 0)) nil (25246 23962 77901 300000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -3124) (undo-tree-id2367 . -1) (3116 . 3125) (#("suspend" 0 7 (fontified t)) . 3116)) nil (25246 23962 77895 0) 0 nil])
([nil nil (3080) nil (25246 23986 220607 400000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-preprocessor-face)) . -3062) (undo-tree-id2371 . -1) (3062 . 3063) (t 25246 23962 80247 0)) nil (25246 23995 773357 0) 0 nil])
([nil nil ((#("				print!(\"Foobar: \");
" 0 4 (fontified t) 4 8 (fontified t face rust-builtin-formatting-macro) 8 9 (fontified t face rust-builtin-formatting-macro) 9 10 (fontified t face rust-builtin-formatting-macro) 10 11 (fontified t) 11 12 (fontified t face font-lock-string-face) 12 14 (fontified t face font-lock-string-face) 14 20 (fontified t face font-lock-string-face) 20 21 (fontified t face font-lock-string-face) 21 22 (fontified t) 22 24 (fontified t)) . 3058) (undo-tree-id2390 . 13) (undo-tree-id2391 . -11) (undo-tree-id2392 . -4) (undo-tree-id2393 . -4) 3062) nil (25246 24008 893540 500000) 0 nil] [nil nil ((#("j" 0 1 (fontified t face font-lock-preprocessor-face)) . -3067) (undo-tree-id2369 . -1) (3062 . 3068) (#("print" 0 4 (fontified t face rust-builtin-formatting-macro) 4 5 (fontified t face rust-builtin-formatting-macro)) . 3062) (undo-tree-id2370 . 5) (t 25246 23962 80247 0)) ((3062 . 3067) (#("writej" 0 5 (fontified nil face font-lock-preprocessor-face) 5 6 (fontified nil face font-lock-preprocessor-face)) . 3062) (3067 . 3068)) (25246 23995 206616 900000) 0 nil])
([nil nil ((#("	" 0 1 (fontified nil)) . -2459) (undo-tree-id2387 . -1) (undo-tree-id2388 . -1) 2460 (#("j" 0 1 (fontified t)) . -2460) (undo-tree-id2389 . -1) (2458 . 2461)) nil (25246 24008 893534 300000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -3077) (undo-tree-id2368 . -1) (3069 . 3078)) ((#("stdout, j" 0 8 (fontified nil) 8 9 (fontified nil)) . 3069) (undo-tree-id2372 . -7) (3077 . 3078) (t 25246 23986 240247 0)) (25246 23986 220592 400000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2463 . 2464) (#("
" 0 1 (fontified nil)) . -2483) (2459 . 2484)) nil (25246 24008 893529 0) 0 nil])
nil
([nil nil ((#("				print!(\"Foobar: \");
" 0 3 (fontified t) 3 4 (fontified t rear-nonsticky t) 4 8 (fontified t face rust-builtin-formatting-macro) 8 9 (fontified t face rust-builtin-formatting-macro) 9 10 (fontified t face rust-builtin-formatting-macro) 10 11 (fontified t) 11 12 (fontified t face font-lock-string-face) 12 14 (fontified t face font-lock-string-face) 14 20 (fontified t face font-lock-string-face) 20 21 (fontified t face font-lock-string-face) 21 22 (fontified t) 22 23 (fontified t) 23 24 (fontified t)) . 2460) (undo-tree-id2382 . 1) (undo-tree-id2383 . -23) (undo-tree-id2384 . -23) (undo-tree-id2385 . -4) (undo-tree-id2386 . -4) 2464) nil (25246 24008 893526 800000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2470) (undo-tree-id2381 . -1) (2461 . 2471) (2460 . 2461) (2460 . 2461) 2473) nil (25246 24008 893519 200000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . 2466)) nil (25246 24008 893515 800000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . 2466)) nil (25246 24008 893514 400000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2467) (undo-tree-id2380 . -1) (2466 . 2468)) nil (25246 24008 893512 800000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2470) (undo-tree-id2377 . -1) (2468 . 2471) (#("0" 0 1 (fontified t)) . -2468) (undo-tree-id2378 . -1) (undo-tree-id2379 . -1) 2469) nil (25246 24008 893509 300000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-string-face)) . -2479) (undo-tree-id2376 . -1) (2469 . 2480)) nil (25246 24008 893502 900000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2482) (undo-tree-id2373 . -1) (2480 . 2483) (#(";" 0 1 (fontified t)) . -2480) (undo-tree-id2374 . -1) (undo-tree-id2375 . -1) 2481 (2480 . 2481)) nil (25246 24008 893496 300000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2459) (undo-tree-id2394 . -1) (undo-tree-id2395 . -1) (undo-tree-id2396 . -1) (t 25246 24008 910247 0)) nil (25246 24010 538719 500000) 0 nil])
([nil nil ((#("				// let mut foo = String::new();
				// stdin.read_line(&mut foo);
" 0 4 (fontified t) 4 7 (fontified t face font-lock-comment-delimiter-face) 7 10 (fontified t face font-lock-comment-face) 10 11 (fontified t face font-lock-comment-face) 11 14 (fontified t face font-lock-comment-face) 14 15 (fontified t face font-lock-comment-face) 15 18 (fontified t face font-lock-comment-face) 18 21 (fontified t face font-lock-comment-face) 21 27 (fontified t face font-lock-comment-face) 27 35 (fontified t face font-lock-comment-face) 35 36 (fontified t face font-lock-comment-face) 36 40 (fontified t) 40 43 (fontified t face font-lock-comment-delimiter-face) 43 56 (fontified t face font-lock-comment-face) 56 59 (fontified t face font-lock-comment-face) 59 60 (fontified t face font-lock-comment-face) 60 63 (fontified t face font-lock-comment-face) 63 64 (fontified t face font-lock-comment-face) 64 70 (fontified t face font-lock-comment-face)) . 3143) (undo-tree-id2397 . -51) (undo-tree-id2398 . -15) (undo-tree-id2399 . -51) (undo-tree-id2400 . -70) (undo-tree-id2401 . -70) (undo-tree-id2402 . -70) (undo-tree-id2403 . -70) (undo-tree-id2404 . -70) (undo-tree-id2405 . -70) (undo-tree-id2406 . -70) (undo-tree-id2407 . -70) (undo-tree-id2408 . -70) (undo-tree-id2409 . -70) (undo-tree-id2410 . -70) (undo-tree-id2411 . -70) (undo-tree-id2412 . -70) (undo-tree-id2413 . -70) (undo-tree-id2414 . -70) (undo-tree-id2415 . -70) (undo-tree-id2416 . -70) (undo-tree-id2417 . -51) (undo-tree-id2418 . -70) (undo-tree-id2419 . -15) (undo-tree-id2420 . -51) (undo-tree-id2421 . -36) (undo-tree-id2422 . -51) 3194 (t 25246 24010 560247 0)) nil (25246 24016 34366 900000) 0 nil])
([nil nil ((#("\\" 0 1 (fontified t face font-lock-string-face)) . 2476) (t 25246 24016 50247 0)) nil (25246 24025 678844 600000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t face font-lock-string-face)) . 2476)) nil (25246 24025 678838 800000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-string-face)) . -2483) (undo-tree-id2423 . -1) (2468 . 2484) (#("asdfasdf" 0 8 (fontified t face font-lock-string-face)) . 2468) (undo-tree-id2424 . -8) (t 25246 24025 700247 0)) nil (25246 24457 46026 600000) 0 nil])
([nil nil ((2472 . 2473) (#("T" 0 1 (fontified t face font-lock-string-face)) . 2472) (t 25246 24457 62997 200000)) nil (25246 24461 872879 600000) 0 nil])
([nil nil ((2477 . 2478) (#("N" 0 1 (fontified t face font-lock-string-face)) . 2477)) nil (25246 24461 872953 200000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-preprocessor-face)) . -2467) (undo-tree-id2425 . -1) (2467 . 2468) (#("J" 0 1 (fontified t face font-lock-preprocessor-face)) . -2467) (undo-tree-id2426 . -1) (undo-tree-id2427 . -1) (#("K" 0 1 (fontified t face font-lock-preprocessor-face)) . -2468) (undo-tree-id2428 . -1) (undo-tree-id2429 . -1) (#("w" 0 1 (fontified t face font-lock-preprocessor-face)) . -2469) (undo-tree-id2430 . -1) (undo-tree-id2431 . -1) 2470 (2465 . 2470) (t 25246 24462 542997 200000)) nil (25246 24508 45763 700000) 0 nil] [nil nil ((2486 . 2487) (#("	" 0 1 (fontified nil)) . 2486) (#("
" 0 1 (fontified t)) . -2486) 2477) ((2486 . 2487) (2486 . 2487) (#(" " 0 1 (fontified t)) . 2486)) (25246 24461 872873 500000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-string-face)) . -2474) (undo-tree-id2443 . -1) (2470 . 2475) (t 25246 24508 942997 200000)) nil (25246 24578 767752 800000) 0 nil] [nil nil ((#("l" 0 1 (fontified t face rust-builtin-formatting-macro)) . 2465) (undo-tree-id2432 . -1) (t 25246 24475 112997 200000)) ((2465 . 2466)) (25246 24507 300361 600000) 0 nil])
nil
([nil nil ((2472 . 2473) (#("]" 0 1 (fontified t face font-lock-string-face)) . 2472)) nil (25246 24578 767738 300000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t face font-lock-preprocessor-face)) . 2465)) ((2465 . 2466)) (25246 24507 133127 200000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-string-face)) . -2478) (undo-tree-id2446 . -1) (2476 . 2479) (2474 . 2476) (t 25246 24578 782997 200000)) nil (25246 24648 896485 300000) 0 nil])
([nil nil ((#("j" 0 1 (fontified nil face font-lock-string-face)) . 2472) (2470 . 2473) (#("]" 0 1 (fontified nil face font-lock-string-face)) . 2470) (2468 . 2471)) ((#("\\n]" 0 2 (fontified nil face font-lock-string-face) 2 3 (fontified nil face font-lock-string-face)) . 2468) (undo-tree-id2439 . -2) (undo-tree-id2440 . -2) (2470 . 2471) (#("\\nj" 0 2 (fontified nil face font-lock-string-face) 2 3 (fontified nil face font-lock-string-face)) . 2470) (undo-tree-id2441 . -2) (undo-tree-id2442 . -2) (2472 . 2473) (t 25246 24490 842997 200000)) (25246 24506 61750 700000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2496) (undo-tree-id2445 . -1) (2496 . 2497) 2459) nil (25246 24648 896481 700000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-preprocessor-face)) . -2465) (undo-tree-id2436 . -1) (2460 . 2466) (#("print" 0 5 (fontified t face rust-builtin-formatting-macro)) . 2460) (t 25246 24490 842997 200000)) ((2460 . 2465) (#("writej" 0 5 (fontified nil face font-lock-preprocessor-face) 5 6 (fontified nil face font-lock-preprocessor-face)) . 2460) (undo-tree-id2437 . -4) (undo-tree-id2438 . -4) (2465 . 2466)) (25246 24503 60841 700000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2496) (undo-tree-id2444 . -1) (2494 . 2497)) nil (25246 24648 896477 200000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 2543 . 2544) (nil fontified nil 2496 . 2544) (2496 . 2544) 2495) nil (25246 24648 896463 300000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-string-face)) . -2493) (undo-tree-id2447 . -1) (2491 . 2494) (t 25246 24648 902997 200000)) nil (25246 24667 59868 200000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2548) (undo-tree-id2449 . -1) (2548 . 2549) 2459 (t 25246 24667 82997 200000)) nil (25246 24681 209713 800000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2548) (undo-tree-id2448 . -1) (2546 . 2549) (t 25246 24667 82997 200000)) nil (25246 24681 209708 600000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2568 . 2569) (nil fontified nil 2548 . 2569) (2548 . 2569) 2547) nil (25246 24681 209690 500000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2415) (undo-tree-id2451 . -1) (2406 . 2416) (2405 . 2406) (t 25246 24681 222997 200000)) nil (25246 24708 621782 200000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2416) (undo-tree-id2450 . -1) (2409 . 2417) (#("string" 0 6 (fontified t)) . 2409)) nil (25246 24708 621774 800000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2616) (undo-tree-id2452 . -1) (2612 . 2617) (2610 . 2612) (t 25246 24708 642997 200000)) nil (25246 24711 612671 100000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2615) (undo-tree-id2453 . -1) (2615 . 2616) (#(";" 0 1 (fontified t)) . -2615) (undo-tree-id2454 . -1) 2616 (t 25246 24711 632997 200000)) nil (25246 24715 600022 500000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -3206) (undo-tree-id2455 . -1) (3191 . 3207) (t 25246 24715 622997 200000)) nil (25246 24722 708729 700000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-variable-name-face)) . -3203) (undo-tree-id2456 . -1) (3201 . 3204) (3199 . 3201) (#("item" 0 4 (fontified t face font-lock-variable-name-face)) . 3199) (t 25246 24722 712997 200000)) nil (25246 24725 844437 500000) 0 nil])
([nil nil ((#("				" 0 4 (fontified nil)) . -3219) (undo-tree-id2466 . -4) (undo-tree-id2467 . -4) 3223 (#("j" 0 1 (fontified t)) . -3223) (undo-tree-id2468 . -1) (3218 . 3224) (t 25246 24725 862997 200000)) nil (25246 24749 759511 600000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3221 . 3222) (#("
" 0 1 (fontified nil)) . -3324) (3219 . 3325)) nil (25246 24749 759504 600000) 0 nil])
([nil nil ((#("		" 0 1 (fontified nil) 1 2 (fontified nil rear-nonsticky t)) . -3223) (undo-tree-id2463 . -2) (undo-tree-id2464 . -2) (undo-tree-id2465 . -2) (3220 . 3223) 3222) nil (25246 24749 759501 600000) 0 nil])
([nil nil ((#("			" 0 3 (fontified nil)) . -3224) (undo-tree-id2460 . -2) (undo-tree-id2461 . -2) (undo-tree-id2462 . -2) (3220 . 3224) 3222) nil (25246 24749 759495 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3219) (undo-tree-id2457 . -1) (undo-tree-id2458 . -1) (undo-tree-id2459 . -1)) nil (25246 24749 759486 0) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -3253) (undo-tree-id2476 . -1) (3245 . 3254) (#("text.unwrap().to_string()" 0 25 (fontified t)) . 3245) (undo-tree-id2477 . -24) (undo-tree-id2478 . -24) (undo-tree-id2479 . -24) (undo-tree-id2480 . -25) (undo-tree-id2481 . -24) (undo-tree-id2482 . -24) 3269 (t 25246 24749 782997 200000)) nil (25246 24767 847971 0) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -3260) (undo-tree-id2469 . -1) (3255 . 3261) (#("completion.unwrap().to_string() == \"1\".to_string()" 0 35 (fontified t) 35 36 (fontified t face font-lock-string-face) 36 37 (fontified t face font-lock-string-face) 37 38 (fontified t face font-lock-string-face) 38 50 (fontified t)) . 3255) (undo-tree-id2470 . -49) (undo-tree-id2471 . -49) (undo-tree-id2472 . -49) (undo-tree-id2473 . -50) (undo-tree-id2474 . -49) (undo-tree-id2475 . -49) 3304) nil (25246 24767 847958 500000) 0 nil])
([nil nil (3261) nil (25246 24773 803542 100000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -3223) (undo-tree-id2489 . -1) (3223 . 3224) (t 25246 24767 862997 200000)) nil (25246 24773 803540 400000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -3228) (undo-tree-id2484 . -1) (3224 . 3229) (#("d" 0 1 (fontified t)) . -3224) (undo-tree-id2485 . -1) (undo-tree-id2486 . -1) (#("o" 0 1 (fontified t)) . -3225) (undo-tree-id2487 . -1) (undo-tree-id2488 . -1) 3226 (3224 . 3226) (t 25246 24767 862997 200000)) nil (25246 24773 803535 500000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -3231) (undo-tree-id2483 . -1) (3229 . 3232)) nil (25246 24773 803520 900000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -3230) (undo-tree-id2490 . -1) (3229 . 3231) (t 25246 24773 822997 200000)) nil (25246 24774 951549 200000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -3263) (undo-tree-id2496 . -1) (3252 . 3264) (#("new_task" 0 8 (fontified t)) . 3252) (undo-tree-id2497 . -7) (undo-tree-id2498 . -7) (undo-tree-id2499 . -7) (undo-tree-id2500 . -8) (undo-tree-id2501 . -7) (undo-tree-id2502 . -7) 3259 (t 25246 24774 972997 200000)) nil (25246 24823 110359 400000) 0 nil])
([nil nil ((#("				let new_task = get_input();
" 0 4 (fontified t) 4 7 (fontified t face font-lock-keyword-face) 7 8 (fontified t) 8 16 (fontified t face font-lock-variable-name-face) 16 19 (fontified t) 19 28 (fontified t) 28 32 (fontified t)) . 3187) (undo-tree-id2491 . -32) (undo-tree-id2492 . -12) (undo-tree-id2493 . -12) (undo-tree-id2494 . -30) (undo-tree-id2495 . -30) 3217) nil (25246 24823 110345 900000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -3292) (undo-tree-id2503 . -1) (3291 . 3293) (t 25246 24823 132997 200000)) nil (25246 24839 894190 500000) 0 nil])
([nil nil ((apply -9 1565 1695 undo--wrap-and-run-primitive-undo 1565 1695 ((1649 . 1652) (1607 . 1610) (1567 . 1570) 1648)) (t 25246 24839 912997 200000)) nil (25246 24858 476358 400000) 0 nil])
([nil nil (2605) nil (25246 24889 287567 800000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-variable-name-face)) . -2598) (undo-tree-id2505 . -1) (2593 . 2599) (t 25246 24858 492997 200000)) nil (25246 24889 287565 400000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2601) (undo-tree-id2504 . -1) (2598 . 2602)) nil (25246 24889 287558 300000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -3172) (undo-tree-id2509 . -1) (3164 . 3173) (t 25246 24889 302997 200000)) nil (25246 24897 140838 0) 0 nil])
([nil nil (3278) nil (25246 24897 140834 200000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -3279) (undo-tree-id2506 . -1) (3275 . 3280) (#(" " 0 1 (fontified t)) . -3275) (undo-tree-id2507 . -1) (undo-tree-id2508 . -1) 3276 (3271 . 3276)) nil (25246 24897 140829 200000) 0 nil])
([nil current ((apply 9 1565 1686 undo--wrap-and-run-primitive-undo 1565 1686 ((#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -1643) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -1604) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -1567) 1648)) (t 25246 24897 162997 200000)) nil (25246 24908 19364 500000) 0 nil])
nil
